{"version":3,"sources":["site/router/color-mode-switcher.tsx","site/router/hamburger-menu.tsx","site/router/left-nav.tsx","site/router/layout-main.tsx","lib/components/link-button.tsx","lib/components/thumbnail.tsx","lib/components/card.tsx","lib/components/card-body.tsx","lib/components/card-header.tsx","lib/components/canvas.tsx","lib/components/paragraph.tsx","lib/components/button.tsx","lib/components/input-text.tsx","lib/components/input-select.tsx","lib/components/tabs.tsx","site/home/images/molten-teapot.jpg","site/home/images/multiple-noise-terrain.jpg","site/home/images/maze-generator.png","site/home/images/3-d-maze.png","site/home/home.tsx","site/about-me/about-me.tsx","site/mazes/overview/mazes.tsx","site/mazes/generator/components/generator-properties.tsx","site/mazes/generator/components/binary-tree-properties.tsx","site/mazes/generator/components/sidewinder-properties.tsx","site/mazes/generator/components/recursive-backtracker-properties.tsx","site/mazes/generator/components/growing-tree-properties.tsx","site/mazes/generator/components/recursive-subdivision-properties.tsx","site/mazes/generator/components/aldous-broder-properties.tsx","site/mazes/generator/components/wilson-properties.tsx","site/mazes/generator/components/hunt-and-kill-properties.tsx","site/mazes/generator/components/eller-properties.tsx","lib/image-utils/rgba.ts","lib/image-utils/image.ts","lib/mazes/maze-parts/wall.ts","lib/mazes/maze-parts/cell.ts","lib/mazes/maze-parts/grid.ts","lib/mazes/utils/random.ts","lib/mazes/generators/generator.ts","lib/mazes/generators/aldous-broder.ts","lib/mazes/generators/binary-tree.ts","lib/mazes/generators/growing-tree.ts","lib/mazes/generators/hunt-and-kill.ts","lib/mazes/generators/kruskal.ts","lib/mazes/generators/prim.ts","lib/mazes/generators/recursive-backtracker.ts","lib/mazes/generators/sidewinder.ts","lib/mazes/generators/wilson.ts","lib/mazes/utils/math.ts","lib/mazes/generators/eller.ts","lib/mazes/generators/recursive-subdivision.ts","site/mazes/generator/generator.tsx","site/mazes/algorithms/algorithms.tsx","site/writing/writing.tsx","site/writing/when-worlds-collide/chapter-1.tsx","site/writing/dangers-of-teleporting/chapter-1.tsx","site/router/router-main.tsx","App.tsx","reportWebVitals.ts","serviceWorker.ts","index.tsx"],"names":["ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","variant","color","marginLeft","onClick","icon","aria-label","border","transition","_hover","borderColor","_focus","HamburgerMenu","menuOpen","LeftNav","align","backgroundColor","allowMultiple","as","ReactLink","to","w","PageLayout","children","rest","textAlign","TopNav","paddingBottom","justifySelf","Footer","MainLayout","position","display","top","left","zIndex","width","LayoutMain","state","handleHamburgerClick","bind","event","this","setState","React","LinkButton","href","Thumbnail","useDisclosure","isOpen","onOpen","onClose","src","source","alt","altText","Card","centered","retComponent","margin","borderStyle","borderWidth","borderRadius","boxShadow","CardBody","padding","CardHeader","Canvas","id","imgData","canvasRef","useRef","useState","context","setContext","useEffect","current","renderCtx","getContext","undefined","putImageData","ref","height","Paragraph","StyledButton","InputText","label","tooltip","leftAddon","rightAddon","addonColor","name","sx","borderBottom","InputSelect","StyledTabs","tabData","tabSelectedColor","tabSelectedFontColor","tabHoverBorderColor","map","tab","index","_selected","panel","Home","maxW","columns","spacing","MoltenTeapot","NoiseTerrain","MazeGenerator","SpaceMaze","AboutMe","Mazes","isExternal","GeneratorProperties","handleGeneratorChange","handleInputChange","handleChange","parseInt","currentTarget","value","data","generator","onChange","placeholder","seed","weave","cullDeadEnds","Component","BinaryTreeProperties","handleDirectionsChange","handleChanceVerticalChange","direction","chanceVertical","SidewinderProperties","handleWindDirectionChange","handleChanceWindChange","handleSideDirectionChange","sideDirection","windDirection","chanceWind","RecursiveBacktrackerProperties","handleSelectChange","setStartPosition","toString","startPosX","startPosY","directionBias","visibility","northChance","eastChance","southChance","westChance","forwardChance","leftChance","rightChance","GrowingTreeProperties","treeGrammar","RecursiveSubdivisionProperties","chanceForRoom","maxRooms","minRoomWidth","minRoomHeight","maxRoomWidth","maxRoomHeight","AldousBroderProperties","backwardChance","WilsonProperties","setVisitedStartPosition","startVisitedPosX","startVisitedPosY","HuntAndKillProperties","searchPattern","EllerProperties","sidewaysDirection","verticalDirection","chanceMergeSideways","chanceMergeDown","RGBA","r","g","b","a","Black","White","Image","x","y","c","i","j","SetPixel","GetPixel","newData","length","ImageData","Wall","isWall","isStairsDown","isStairsUp","weight","Cell","numCellSides","visited","adjacentCells","walls","set","masked","overCell","underCell","wall","push","canTunnel","CanTunnelDirection","checkPassage","retVal","IsFlat","dimension","wallColor","floorColor","paintColor","ColumnExists","filter","nextCell","Grid","cells","SetWall","Math","max","iOffset","jOffset","floor","cellImgData","Display","SetPixels","Transpose","FlipOverX","Random","mulberry32","min","t","imul","GeneratorData","grid","Generator","baseProps","random","InitializeGrid","Generate","Weave","RemoveDeadEnds","mapCells","CanTunnel","GetInt","chooseTunnelDirection","currentCell","directions","tunnelCells","nearCell","farCell","SetWallAndStairs","numProcessed","forEach","k","AldousBroderData","AldousBroder","previousCell","some","pickNextCell","MergeCells","randomMax","northMax","eastMax","southMax","randomValue","previousCellIndex","indexOf","forwardIndex","forwardMax","leftIndex","leftMax","rightIndex","rightMax","backwardIndex","BinaryTreeData","BinaryTree","verticalCell","horizontalCell","GrowingTreeData","GrowingTree","pickCount","firstCell","usedCells","grammarPosition","cellIndex","cellDist","pow","newCellDist","HuntAndKillData","HuntAndKill","cellsToChooseFrom","iIncrement","jIncrement","iStart","jStart","iEnd","jEnd","alert","ToString","KruskalData","Kruskal","currentWeight","nextSetNumber","GetIntInRange","GetWeightDirection","GetCellDirection","filterSet","mapSet","PrimData","Prim","sort","compareWeights","RecursiveBacktrackerData","RecursiveBacktracker","currentSet","pop","SidewinderData","Sidewinder","cellRun","randResult","iMax","iStep","jMax","jStep","WilsonData","Wilson","copyCell","currentLoop","unvisitedCount","MathUtils","Infinity","items","n","item","EllerData","Eller","currentRow","currentRowSet","row","finalRow","currentRowSets","rowIncrement","MinY","MaxY","MinX","MaxX","rowMovedSouth","RecursiveSubdivisionData","RecursiveSubdivision","numRooms","startX","startY","startWidth","startHeight","divide","column","divideContinue","divideHorizontal","divideVertical","divideSouthOf","affectedCells","compareElement","passageCell","affectedCellSection","divideEastOf","key","resetToDefaults","generatorData","binaryTree","sidewinder","aldousBroder","wilson","huntAndKill","recursiveBacktracker","kruskal","prim","growingTree","eller","recursiveSubdivision","generate","maze","RunGenerator","handleGeneratorDataChange","handleBinaryTreeChange","handleSidewinderChange","handleRecursiveBacktrackerChange","handleGrowingTreeChange","handleRecursiveSubdivisionChange","handleAldousBroderChange","handleWilsonChange","handleHuntAndKillChange","handleEllerChange","fieldName","retElement","getGeneratorPropertiesTabName","getGeneratorSpecificPropertiesElement","maxHeight","overflow","css","WebkitOverflowScrolling","msOverflowStyle","Algorithms","Writing","Chapter1WWC","Chapter1DOT","RouterMain","exact","path","component","App","theme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a7b54994.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useColorMode, useColorModeValue, IconButton, IconButtonProps } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\ntype ColorModeSwitcherProps = Omit<IconButtonProps, 'aria-label'>;\n\nexport const ColorModeSwitcher: React.FC<ColorModeSwitcherProps> = (props) => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      aria-label={`Switch to ${text} mode`}\n      border=\"none\"\n      transition=\"none\"\n      _hover={{\n        border: '2px solid',\n        borderColor: useColorModeValue('green.500', 'green.500'),\n      }}\n      _focus={{\n        border: 'none',\n      }}\n      {...props}\n    />\n  );\n};\n","import * as React from 'react';\nimport { IconButton, IconButtonProps, useColorModeValue } from '@chakra-ui/react';\nimport { FaBars } from 'react-icons/fa';\n\ntype HamburgerMenuProps = Omit<IconButtonProps, 'aria-label'>;\ninterface IHamburgerMenuProps extends HamburgerMenuProps {\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  menuOpen: boolean;\n}\n\nexport const HamburgerMenu: React.FC<IHamburgerMenuProps> = (props) => {\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      variant=\"ghost\"\n      onClick={props.onClick}\n      icon={<FaBars />}\n      aria-label={props.menuOpen ? 'Close left nav' : 'Open left nav'}\n      border=\"none\"\n      transition=\"none\"\n      _hover={{\n        border: '2px solid',\n        borderColor: useColorModeValue('green.500', 'green.500'),\n      }}\n      _focus={{\n        border: 'none',\n      }}\n      {...props}\n    />\n  );\n};\n","import React from 'react';\r\n\r\nimport {\r\n  Accordion,\r\n  AccordionButton,\r\n  AccordionIcon,\r\n  AccordionItem,\r\n  AccordionPanel,\r\n  Link,\r\n  VStack,\r\n  useColorModeValue,\r\n} from '@chakra-ui/react';\r\nimport { Link as ReactLink } from 'react-router-dom';\r\n\r\nexport interface ILeftNavProps {}\r\n\r\nexport const LeftNav: React.FC<ILeftNavProps> = () => {\r\n  return (\r\n    <VStack\r\n      align=\"stretch\"\r\n      backgroundColor={useColorModeValue('gray.200', 'gray.800')}\r\n    >\r\n      <Accordion allowMultiple>\r\n        <AccordionItem>\r\n          <AccordionButton>\r\n            <Link as={ReactLink} to=\"/\">\r\n              Home\r\n            </Link>\r\n          </AccordionButton>\r\n        </AccordionItem>\r\n        <AccordionItem>\r\n          <AccordionButton w=\"100%\">\r\n            Mazes\r\n            <AccordionIcon />\r\n          </AccordionButton>\r\n          <AccordionPanel w=\"100%\">\r\n            <AccordionItem>\r\n              <AccordionButton>\r\n                <Link as={ReactLink} to=\"/mazes\">\r\n                  Overview\r\n                </Link>\r\n              </AccordionButton>\r\n            </AccordionItem>\r\n            <AccordionItem>\r\n              <AccordionButton>\r\n                <Link as={ReactLink} to=\"/mazes/generator\">\r\n                  Generator\r\n                </Link>\r\n              </AccordionButton>\r\n            </AccordionItem>\r\n            <AccordionItem>\r\n              <AccordionButton>\r\n                <Link as={ReactLink} to=\"/mazes/algorithms\">\r\n                  Algorithms\r\n                </Link>\r\n              </AccordionButton>\r\n            </AccordionItem>\r\n          </AccordionPanel>\r\n        </AccordionItem>\r\n        <AccordionItem>\r\n          <AccordionButton w=\"100%\">\r\n            Writing\r\n            <AccordionIcon />\r\n          </AccordionButton>\r\n          <AccordionPanel w=\"100%\">\r\n            <AccordionItem>\r\n              <AccordionButton>\r\n                <Link as={ReactLink} to=\"/writing\" w=\"100%\">\r\n                  Overview\r\n                </Link>\r\n              </AccordionButton>\r\n            </AccordionItem>\r\n            <AccordionItem>\r\n              <AccordionButton w=\"100%\">\r\n                When Worlds Collide\r\n                <AccordionIcon />\r\n              </AccordionButton>\r\n              <AccordionPanel w=\"100%\">\r\n                <AccordionItem>\r\n                  <AccordionButton>\r\n                    <Link\r\n                      as={ReactLink}\r\n                      to=\"/writing/when-worlds-collide/chapter-1\"\r\n                      w=\"100%\"\r\n                    >\r\n                      Chapter 1\r\n                    </Link>\r\n                  </AccordionButton>\r\n                </AccordionItem>\r\n              </AccordionPanel>\r\n            </AccordionItem>\r\n            <AccordionItem>\r\n              <AccordionButton w=\"100%\">\r\n                Dangers of Teleporting\r\n                <AccordionIcon />\r\n              </AccordionButton>\r\n              <AccordionPanel w=\"100%\">\r\n                <AccordionItem>\r\n                  <AccordionButton>\r\n                    <Link\r\n                      as={ReactLink}\r\n                      to=\"/writing/dangers-of-teleporting/chapter-1\"\r\n                      w=\"100%\"\r\n                    >\r\n                      Chapter 1\r\n                    </Link>\r\n                  </AccordionButton>\r\n                </AccordionItem>\r\n              </AccordionPanel>\r\n            </AccordionItem>\r\n          </AccordionPanel>\r\n        </AccordionItem>\r\n      </Accordion>\r\n    </VStack>\r\n  );\r\n};\r\n","import * as React from 'react';\r\n\r\nimport { Box, Heading, Flex, Spacer, useColorModeValue } from '@chakra-ui/react';\r\n\r\nimport { ColorModeSwitcher } from './color-mode-switcher';\r\nimport { HamburgerMenu } from './hamburger-menu';\r\nimport { LeftNav } from './left-nav';\r\n\r\ninterface ILayoutMainState {\r\n  menuOpen: boolean;\r\n}\r\n\r\nconst PageLayout: React.FC = ({ children, ...rest }) => {\r\n  return (\r\n    <Box textAlign=\"center\" fontSize=\"xl\" backgroundColor={useColorModeValue('gray.100', 'gray.900')} {...rest}>\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\ninterface ITopNavProps {\r\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\r\n  menuOpen: boolean;\r\n}\r\n\r\nconst TopNav: React.FC<ITopNavProps> = ({ onClick, menuOpen, ...rest }) => {\r\n  return (\r\n    <Flex paddingBottom=\"1em\" backgroundColor={useColorModeValue('gray.200', 'gray.800')}>\r\n      <Box textAlign=\"left\">\r\n        <HamburgerMenu menuOpen={menuOpen} onClick={onClick} />\r\n      </Box>\r\n      <Spacer />\r\n      <Box textAlign=\"center\">\r\n        <Heading size=\"xl\">Micah's Musings</Heading>\r\n      </Box>\r\n      <Spacer />\r\n      <Box textAlign=\"right\">\r\n        <ColorModeSwitcher justifySelf=\"flex-end\" />\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\ninterface IFooterProps {}\r\n\r\nconst Footer: React.FC<IFooterProps> = ({ ...rest }) => {\r\n  return (\r\n    <Flex paddingBottom=\"1em\" backgroundColor={useColorModeValue('gray.200', 'gray.800')}>\r\n      <Spacer />\r\n      <Box textAlign=\"right\"></Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\ninterface ILayoutProps {\r\n  children?: React.ReactNode;\r\n  menuOpen: boolean;\r\n}\r\n\r\nconst MainLayout: React.FC<ILayoutProps> = ({ children, menuOpen }) => {\r\n  return (\r\n    <Flex>\r\n      <Box position=\"relative\">\r\n        <Box display={menuOpen ? 'initial' : 'none'} position=\"absolute\" top={0} left={0} zIndex={1500}>\r\n          <LeftNav />\r\n        </Box>\r\n      </Box>\r\n      <Box width=\"100%\">{children}</Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport class LayoutMain extends React.Component<any, ILayoutMainState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = { menuOpen: false };\r\n    this.handleHamburgerClick = this.handleHamburgerClick.bind(this);\r\n  }\r\n\r\n  handleHamburgerClick(event: React.MouseEvent<HTMLButtonElement>) {\r\n    const { menuOpen } = this.state;\r\n    this.setState({ menuOpen: !menuOpen });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <PageLayout>\r\n        <TopNav menuOpen={this.state.menuOpen} onClick={this.handleHamburgerClick} />\r\n        <MainLayout menuOpen={this.state.menuOpen}>{this.props.children}</MainLayout>\r\n        <Footer />\r\n      </PageLayout>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport { Button, ButtonProps, Link, useColorModeValue } from '@chakra-ui/react';\r\nimport { Link as ReactLink } from 'react-router-dom';\r\n\r\nexport interface ILinkButtonProps extends ButtonProps {\r\n  href: string;\r\n  text: string;\r\n}\r\n\r\nexport const LinkButton: React.FC<ILinkButtonProps> = ({ href, text, ...rest }) => {\r\n  return (\r\n    <Link as={ReactLink} to={href}>\r\n      <Button\r\n        backgroundColor={useColorModeValue('blue.400', 'blue.700')}\r\n        color={useColorModeValue('gray.800', 'gray.100')}\r\n        border=\"none\"\r\n        transition=\"none\"\r\n        _hover={{\r\n          backgroundColor: useColorModeValue('blue.300', 'blue.600'),\r\n          border: '2px solid',\r\n          borderColor: useColorModeValue('blue.500', 'blue.500'),\r\n        }}\r\n        _focus={{\r\n          border: 'none',\r\n        }}\r\n        {...rest}\r\n      >\r\n        {text}\r\n      </Button>\r\n    </Link>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Image,\r\n  ImageProps,\r\n  Modal,\r\n  ModalBody,\r\n  ModalContent,\r\n  ModalCloseButton,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  useDisclosure,\r\n  useColorModeValue,\r\n} from '@chakra-ui/react';\r\n\r\nexport interface IThumbnailProps extends ImageProps {\r\n  source: string;\r\n  altText: string;\r\n}\r\n\r\nexport const Thumbnail: React.FC<IThumbnailProps> = ({ ...props }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <>\r\n      <Image\r\n        src={props.source}\r\n        alt={props.altText}\r\n        onClick={onOpen}\r\n        _hover={{\r\n          border: 'solid 2px',\r\n          borderColor: useColorModeValue('gray.100', 'gray.800'),\r\n          transition: '0.1s',\r\n        }}\r\n        props\r\n      />\r\n      <Modal isOpen={isOpen} onClose={onClose} size=\"full\">\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>{props.altText}</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Image src={props.source} alt={props.altText} />\r\n          </ModalBody>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Box, BoxProps, Center, useColorModeValue } from '@chakra-ui/react';\r\n\r\nexport interface ICardProps extends BoxProps {\r\n  centered?: boolean;\r\n}\r\n\r\nexport const Card: React.FC<ICardProps> = ({ children, centered = false, ...props }) => {\r\n  let retComponent = (\r\n    <Box\r\n      margin=\"1em\"\r\n      backgroundColor={useColorModeValue('gray.300', 'gray.800')}\r\n      borderColor={useColorModeValue('gray.300', 'gray.800')}\r\n      borderStyle=\"solid\"\r\n      borderWidth=\"1px\"\r\n      borderRadius=\"0.4em\"\r\n      boxShadow=\"0.4em 0.4em 0.2em\"\r\n      color={useColorModeValue('gray.400', 'gray.600')}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n  if (centered) {\r\n    retComponent = <Center>{retComponent}</Center>;\r\n  }\r\n  return retComponent;\r\n};\r\n","import React from 'react';\r\n\r\nimport { Box, BoxProps, useColorModeValue } from '@chakra-ui/react';\r\n\r\nexport interface ICardBodyProps extends BoxProps {}\r\n\r\nexport const CardBody: React.FC<ICardBodyProps> = ({ children, ...rest }) => {\r\n  return (\r\n    <Box\r\n      padding=\"0.5em\"\r\n      color={useColorModeValue('gray.800', 'gray.100')}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Box, BoxProps, useColorModeValue, Heading } from '@chakra-ui/react';\r\n\r\nexport interface ICardHeaderProps extends BoxProps {}\r\n\r\nexport const CardHeader: React.FC<ICardHeaderProps> = ({ children }, rest) => {\r\n  return (\r\n    <Box\r\n      padding=\"0.5em\"\r\n      color={useColorModeValue('gray.800', 'gray.100')}\r\n      {...rest}\r\n    >\r\n      <Heading>{children}</Heading>\r\n    </Box>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport interface ICanvasProps {\r\n  id: string;\r\n  imgData: ImageData;\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nexport const Canvas: React.FC<ICanvasProps> = ({ id, imgData, ...props }) => {\r\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\r\n  const [context, setContext] = React.useState<CanvasRenderingContext2D | null>(\r\n    null\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (canvasRef.current) {\r\n      const renderCtx = canvasRef.current.getContext('2d');\r\n\r\n      if (renderCtx) {\r\n        if (imgData !== undefined) {\r\n          renderCtx.putImageData(imgData, 0, 0);\r\n        }\r\n        setContext(renderCtx);\r\n      }\r\n    }\r\n  }, [context, imgData]);\r\n\r\n  return (\r\n    <canvas\r\n      id={id}\r\n      ref={canvasRef}\r\n      width={props.width || imgData.width}\r\n      height={props.height || imgData.height}\r\n    ></canvas>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Text, TextProps } from '@chakra-ui/react';\r\n\r\nexport interface IParagraphProps extends TextProps {}\r\n\r\nexport const Paragraph: React.FC<IParagraphProps> = ({\r\n  children,\r\n  paddingBottom,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Text paddingBottom={paddingBottom || '0.5em'} {...rest}>\r\n      {children}\r\n    </Text>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Button, ButtonProps, useColorModeValue } from '@chakra-ui/react';\r\n\r\nexport interface IButtonProps extends ButtonProps {}\r\n\r\nexport const StyledButton: React.FC<IButtonProps> = ({ children, ...rest }) => {\r\n  return (\r\n    <Button\r\n      backgroundColor={useColorModeValue('green.400', 'green.700')}\r\n      color={useColorModeValue('gray.800', 'gray.100')}\r\n      border=\"none\"\r\n      transition=\"none\"\r\n      _hover={{\r\n        backgroundColor: useColorModeValue('green.300', 'green.600'),\r\n        border: '2px solid',\r\n        borderColor: useColorModeValue('green.500', 'green.500'),\r\n      }}\r\n      _focus={{\r\n        border: 'none',\r\n      }}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  InputGroup,\r\n  InputProps,\r\n  InputRightAddon,\r\n  InputLeftAddon,\r\n  Tooltip,\r\n  useColorModeValue,\r\n} from '@chakra-ui/react';\r\n\r\nexport interface IInputProps extends InputProps {\r\n  label: JSX.Element | string;\r\n  tooltip?: JSX.Element | string;\r\n  rightAddon?: JSX.Element | string;\r\n  leftAddon?: JSX.Element | string;\r\n}\r\n\r\nexport const InputText: React.FC<IInputProps> = ({ children, id, label, tooltip, leftAddon, rightAddon, ...rest }) => {\r\n  const addonColor = useColorModeValue('gray.200', 'gray.600');\r\n  return (\r\n    <FormControl id={id} margin=\"0.5em\">\r\n      {tooltip !== undefined && (\r\n        <Tooltip label={tooltip}>\r\n          <FormLabel>{label}</FormLabel>\r\n        </Tooltip>\r\n      )}\r\n      {tooltip === undefined && <FormLabel>{label}</FormLabel>}\r\n      <InputGroup>\r\n        {leftAddon !== undefined && <InputLeftAddon children={leftAddon} backgroundColor={addonColor} />}\r\n        <Input\r\n          id={id}\r\n          name={id}\r\n          variant=\"filled\"\r\n          border=\"none\"\r\n          {...rest}\r\n          sx={{\r\n            backgroundColor: useColorModeValue('gray.100', 'gray.900'),\r\n            ':hover': {\r\n              backgroundColor: useColorModeValue('white', 'gray.700'),\r\n              borderBottom: '2px inset',\r\n              borderColor: useColorModeValue('green.500', 'green.500'),\r\n            },\r\n            ':focus': {\r\n              backgroundColor: useColorModeValue('white', 'gray.700'),\r\n              borderBottom: '2px inset',\r\n              borderColor: useColorModeValue('green.500', 'green.500'),\r\n            },\r\n          }}\r\n        />\r\n        {rightAddon !== undefined && <InputRightAddon children={rightAddon} backgroundColor={addonColor} />}\r\n      </InputGroup>\r\n    </FormControl>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { FormControl, FormLabel, Select, InputGroup, SelectProps, Tooltip, useColorModeValue } from '@chakra-ui/react';\r\n\r\nexport interface IInputSelectProps extends SelectProps {\r\n  label: JSX.Element | string;\r\n  tooltip?: JSX.Element | string;\r\n}\r\n\r\nexport const InputSelect: React.FC<IInputSelectProps> = ({ children, id, label, tooltip, ...rest }) => {\r\n  return (\r\n    <FormControl id={id} margin=\"0.5em\">\r\n      {tooltip !== undefined && (\r\n        <Tooltip label={tooltip}>\r\n          <FormLabel>{label}</FormLabel>\r\n        </Tooltip>\r\n      )}\r\n      {tooltip === undefined && <FormLabel>{label}</FormLabel>}\r\n      <InputGroup>\r\n        <Select\r\n          name={id}\r\n          id={id}\r\n          {...rest}\r\n          variant=\"filled\"\r\n          border=\"none\"\r\n          sx={{\r\n            backgroundColor: useColorModeValue('blackAlpha', 'gray.900'),\r\n            ':hover': {\r\n              backgroundColor: useColorModeValue('white', 'gray.700'),\r\n              borderBottom: '2px solid',\r\n              borderColor: useColorModeValue('green.500', 'green.500'),\r\n            },\r\n            ':focus': {\r\n              backgroundColor: useColorModeValue('white', 'gray.700'),\r\n              borderBottom: '2px solid',\r\n              borderColor: useColorModeValue('green.500', 'green.500'),\r\n            },\r\n          }}\r\n        >\r\n          {children}\r\n        </Select>\r\n      </InputGroup>\r\n    </FormControl>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { TabsProps, useColorModeValue, Tabs, Tab, TabList, TabPanels, TabPanel, useColorMode } from '@chakra-ui/react';\r\n\r\nexport interface TabData {\r\n  label: JSX.Element | string;\r\n  panel: JSX.Element;\r\n}\r\n\r\nexport interface ITabsProps {\r\n  tabData: Array<TabData>;\r\n}\r\n\r\nexport const StyledTabs: React.FC<ITabsProps> = ({ tabData, ...props }) => {\r\n  const tabSelectedColor = useColorModeValue('green.500', 'green.500');\r\n  const tabSelectedFontColor = useColorModeValue('green.700', 'green.300');\r\n  const tabHoverBorderColor = useColorModeValue('green.500', 'green.300');\r\n  return (\r\n    <Tabs variant=\"enclosed-colored\">\r\n      <TabList>\r\n        {tabData.map((tab, index) => (\r\n          <Tab\r\n            key={index}\r\n            border=\"none\"\r\n            _selected={{ color: tabSelectedFontColor, border: '2px solid', borderColor: tabSelectedColor }}\r\n            _focus={{ color: tabSelectedFontColor, border: '2px solid', borderColor: tabSelectedColor }}\r\n            _hover={{ color: tabSelectedFontColor, border: '2px solid', borderColor: tabHoverBorderColor }}\r\n          >\r\n            {tab.label}\r\n          </Tab>\r\n        ))}\r\n      </TabList>\r\n      <TabPanels>\r\n        {tabData.map((tab, index) => (\r\n          <TabPanel key={index}>{tab.panel}</TabPanel>\r\n        ))}\r\n      </TabPanels>\r\n    </Tabs>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/molten-teapot.7f5a8561.jpg\";","export default __webpack_public_path__ + \"static/media/multiple-noise-terrain.858abf92.jpg\";","export default __webpack_public_path__ + \"static/media/maze-generator.87da6afb.png\";","export default __webpack_public_path__ + \"static/media/3-d-maze.faf6ae04.png\";","import React from 'react';\r\nimport { SimpleGrid, Text, Container } from '@chakra-ui/react';\r\n\r\nimport {\r\n  LinkButton,\r\n  Thumbnail,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n} from '../../lib/components';\r\n\r\nimport MoltenTeapot from './images/molten-teapot.jpg';\r\nimport NoiseTerrain from './images/multiple-noise-terrain.jpg';\r\nimport MazeGenerator from './images/maze-generator.png';\r\nimport SpaceMaze from './images/3-d-maze.png';\r\n\r\nexport const Home: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Container maxW=\"container.lg\">\r\n        <SimpleGrid columns={2} spacing=\"5em\" padding=\"1em\">\r\n          <Thumbnail source={MoltenTeapot} altText=\"Molten Teapot\" />\r\n          <Thumbnail source={NoiseTerrain} altText=\"Terrain Generation\" />\r\n        </SimpleGrid>\r\n        <Card maxW=\"container.lg\" centered>\r\n          <CardHeader>Welcome!</CardHeader>\r\n          <CardBody>\r\n            <Text>\r\n              I made this website to share things that I've worked on because\r\n              they're cool, interesting, or just meant to make you think. Enjoy!\r\n            </Text>\r\n            <SimpleGrid columns={2} spacing=\"1em\" padding=\"1em\">\r\n              <LinkButton href=\"/mazes\" text=\"Mazes\" />\r\n              <LinkButton href=\"/writing\" text=\"Writing\" />\r\n            </SimpleGrid>\r\n          </CardBody>\r\n        </Card>\r\n\r\n        <SimpleGrid columns={2} spacing=\"5em\" padding=\"1em\">\r\n          <Thumbnail source={MazeGenerator} altText=\"Maze Generator\" />\r\n          <Thumbnail source={SpaceMaze} altText=\"3D Maze\" />\r\n        </SimpleGrid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Box, Heading, Text } from '@chakra-ui/react';\r\n\r\nexport const AboutMe: React.FC = () => {\r\n  return (\r\n    <Box padding=\"1em\">\r\n      <Heading paddingBottom=\"0.5em\">About Me</Heading>\r\n      <Text>Texty text.</Text>\r\n    </Box>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Container, Link, SimpleGrid } from '@chakra-ui/react';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Paragraph,\r\n  LinkButton,\r\n} from '../../../lib/components';\r\n\r\nexport const Mazes: React.FC = () => {\r\n  return (\r\n    <Card maxW=\"container.lg\" centered>\r\n      <CardHeader>Mazes - Overview</CardHeader>\r\n      <CardBody>\r\n        <SimpleGrid columns={2} spacing=\"1em\" padding=\"1em\">\r\n          <LinkButton href=\"/mazes/generator\" text=\"Generator\" />\r\n          <LinkButton href=\"/mazes/algorithms\" text=\"Algorithms\" />\r\n        </SimpleGrid>\r\n        <Container textAlign=\"left\" maxW=\"container.lg\" fontSize=\"md\">\r\n          <Paragraph>\r\n            Back in May 2020, I was perusing through Amazon looking for new\r\n            books to read whether they were for something to learn or just for\r\n            enjoyment. I ended up coming across{' '}\r\n            <Link\r\n              href=\"https://www.amazon.com/Mazes-Programmers-Twisty-Little-Passages/dp/1680500554\"\r\n              isExternal\r\n            >\r\n              <u>Mazes for Programmers: Code Your Own Twisty Little Passages</u>\r\n            </Link>{' '}\r\n            by Jamis Buck and thought it would be something cool to try out.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            At first, I was a little turned off that all the provided code was\r\n            written in Ruby. As many reviews stated, this was an annoyance to\r\n            them as well. But, that actually ended up making it more fun for me\r\n            overall. Not only was I learning the algorithms described by the\r\n            author to generate mazes, I was also challenging my problem solving\r\n            skills by transferring the provided code into my current language of\r\n            choice, C#.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            It didn't take long before I was spending time taking the mazes and\r\n            putting them in 3D so that I could feel like I was walking through\r\n            games of my childhood like{' '}\r\n            <Link href=\"http://advsys.net/ken/klab.htm\" isExternal>\r\n              <u>Ken's Labyrinth</u>\r\n            </Link>{' '}\r\n            and{' '}\r\n            <Link href=\"https://www.dgray.com/n3dpage.htm\" isExternal>\r\n              <u>Nitemare 3D</u>\r\n            </Link>\r\n            . That iteration didn't make it much further than a console\r\n            interface to setup the maze and then going into fullscreen mode.\r\n            Still, it was fun to be able to make something and play it, which is\r\n            something I hadn't done in several years.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            After inevitably getting bogged down trying to do fancy things with\r\n            OpenGL and GLSL shaders, I took a few months away from the project\r\n            before beginning to work on a WinForms version of the application.\r\n            That was another learning experience, because I hadn't made a\r\n            WinForms application for anything since the first half of high\r\n            school. Compared to the VB 6 code I had worked on it was a breeze in\r\n            .Net Core. This version of the generator allowed for all the\r\n            settings as the first version in addition to separating a map out\r\n            into multiple regions. The goal behind that was to allow for more\r\n            complex generation so that it could possibly be used for a\r\n            rogue-like game.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Jumping ahead to July 2021, the current goal is to port the current\r\n            version of the C# library I put together into Typescript. So far,\r\n            the hardest part has been editing images pixel by pixel in the same\r\n            way allowed by System.Drawing.Bitmap in C# while also trying to\r\n            respect how data is supposed to flow in a React application.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            If you've stuck around this long, you should jump to either the{' '}\r\n            <Link href=\"/programming/mazes/generator\">\r\n              <u>Generator</u>\r\n            </Link>{' '}\r\n            to play around with all sorts of settings to create your own mazes,\r\n            or you can head off to the{' '}\r\n            <Link href=\"/programming/mazes/generator\">\r\n              <u>Algorithms</u>\r\n            </Link>{' '}\r\n            section where I give a brief explanation of each generator\r\n            implemented and some other pieces of the code. Enjoy!\r\n          </Paragraph>\r\n        </Container>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Wrap, WrapItem } from '@chakra-ui/react';\r\n\r\nimport { InputText, InputSelect } from '../../../../lib/components';\r\n\r\nimport { GeneratorData } from '../../../../lib/mazes';\r\n\r\nexport interface IGeneratorProps {\r\n  data: GeneratorData;\r\n  handleChange: (fieldName: string, value: number) => void;\r\n}\r\n\r\nexport interface IGeneratorState {}\r\n\r\nexport class GeneratorProperties extends React.Component<\r\n  IGeneratorProps,\r\n  IGeneratorState\r\n> {\r\n  constructor(props: IGeneratorProps) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.handleGeneratorChange = this.handleGeneratorChange.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  handleGeneratorChange(event: React.FormEvent<HTMLSelectElement>) {\r\n    this.props.handleChange('generator', parseInt(event.currentTarget.value));\r\n  }\r\n\r\n  handleInputChange(event: React.FormEvent<HTMLInputElement>) {\r\n    this.props.handleChange(\r\n      event.currentTarget.id,\r\n      parseInt(event.currentTarget.value)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Wrap>\r\n          <WrapItem>\r\n            <InputSelect\r\n              id=\"generator\"\r\n              label=\"Select Generator\"\r\n              tooltip=\"The base algorithm used by the maze generator. Go to Mazes/Algorithms in the left navigation for more information about a specific generator.\"\r\n              value={this.props.data.generator}\r\n              onChange={this.handleGeneratorChange}\r\n            >\r\n              <option value=\"1\">Binary Tree</option>\r\n              <option value=\"2\">Sidewinder</option>\r\n              <option value=\"3\">Aldous-Broder</option>\r\n              <option value=\"4\">Wilson's</option>\r\n              <option value=\"5\">Hunt and Kill</option>\r\n              <option value=\"6\">Recursive Backtracker</option>\r\n              <option value=\"7\">Kruskal's</option>\r\n              <option value=\"8\">Prim's</option>\r\n              <option value=\"9\">Growing Tree</option>\r\n              <option value=\"10\">Eller's</option>\r\n              <option value=\"11\">Recursive Subdivision</option>\r\n            </InputSelect>\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"seed\"\r\n              label=\"Seed\"\r\n              tooltip=\"The seed used by the random number generator.\"\r\n              placeholder=\"Seed\"\r\n              value={this.props.data.seed}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </WrapItem>\r\n        </Wrap>\r\n        <Wrap>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"width\"\r\n              label=\"Width\"\r\n              tooltip=\"The width of the maze to be generated.\"\r\n              placeholder=\"Width\"\r\n              value={this.props.data.width}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"height\"\r\n              label=\"Height\"\r\n              tooltip=\"The height of the maze to be generated.\"\r\n              placeholder=\"Height\"\r\n              value={this.props.data.height}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"weave\"\r\n              label=\"Weave\"\r\n              tooltip=\"The percentage chance that a cell that fits the criteria for weaving is woven.\"\r\n              placeholder=\"Weave\"\r\n              value={this.props.data.weave}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"cullDeadEnds\"\r\n              label=\"Cull Dead Ends\"\r\n              tooltip=\"The number of dead ends to be removed after the maze has been generated. At least one cell will always remain at the end of generation.\"\r\n              placeholder=\"Cull Dead Ends\"\r\n              value={this.props.data.cullDeadEnds}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </WrapItem>\r\n        </Wrap>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Wrap, WrapItem } from '@chakra-ui/react';\r\n\r\nimport { InputSelect, InputText } from '../../../../lib/components';\r\n\r\nimport { BinaryTreeData } from '../../../../lib/mazes';\r\n\r\nexport interface IBinaryTreeProps {\r\n  data: BinaryTreeData;\r\n  handleChange: (fieldName: string, value: number) => void;\r\n}\r\n\r\nexport interface IBinaryTreeState {}\r\n\r\nexport class BinaryTreeProperties extends React.Component<\r\n  IBinaryTreeProps,\r\n  IBinaryTreeState\r\n> {\r\n  constructor(props: IBinaryTreeProps) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.handleDirectionsChange = this.handleDirectionsChange.bind(this);\r\n    this.handleChanceVerticalChange =\r\n      this.handleChanceVerticalChange.bind(this);\r\n  }\r\n\r\n  handleDirectionsChange(event: React.FormEvent<HTMLSelectElement>) {\r\n    this.props.handleChange('direction', parseInt(event.currentTarget.value));\r\n  }\r\n\r\n  handleChanceVerticalChange(event: React.FormEvent<HTMLInputElement>) {\r\n    this.props.handleChange(\r\n      'chanceVertical',\r\n      parseInt(event.currentTarget.value)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Wrap>\r\n        <WrapItem>\r\n          <InputSelect\r\n            id=\"direction\"\r\n            label=\"Directions\"\r\n            tooltip=\"Sets the two direction choices used.\"\r\n            value={this.props.data.direction}\r\n            onChange={this.handleDirectionsChange}\r\n          >\r\n            <option value=\"1\">North & East</option>\r\n            <option value=\"2\">South & East</option>\r\n            <option value=\"3\">South & West</option>\r\n            <option value=\"4\">North & West</option>\r\n          </InputSelect>\r\n        </WrapItem>\r\n        <WrapItem>\r\n          <InputText\r\n            id=\"chanceVertical\"\r\n            label=\"Vertical Chance\"\r\n            tooltip=\"The percentage chance that the North/South direction will be chosen.\"\r\n            placeholder=\"Vertical Chance\"\r\n            value={this.props.data.chanceVertical}\r\n            onChange={this.handleChanceVerticalChange}\r\n            rightAddon=\"%\"\r\n          />\r\n        </WrapItem>\r\n      </Wrap>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Wrap, WrapItem } from '@chakra-ui/react';\r\n\r\nimport { InputSelect, InputText } from '../../../../lib/components';\r\n\r\nimport { SidewinderData } from '../../../../lib/mazes';\r\n\r\nexport interface ISidewinderProps {\r\n  data: SidewinderData;\r\n  handleChange: (fieldName: string, value: number) => void;\r\n}\r\n\r\nexport interface ISidewinderState {}\r\n\r\nexport class SidewinderProperties extends React.Component<\r\n  ISidewinderProps,\r\n  ISidewinderState\r\n> {\r\n  constructor(props: ISidewinderProps) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.handleWindDirectionChange = this.handleWindDirectionChange.bind(this);\r\n    this.handleChanceWindChange = this.handleChanceWindChange.bind(this);\r\n    this.handleSideDirectionChange = this.handleSideDirectionChange.bind(this);\r\n  }\r\n\r\n  handleSideDirectionChange(event: React.FormEvent<HTMLSelectElement>) {\r\n    this.props.handleChange(\r\n      'sideDirection',\r\n      parseInt(event.currentTarget.value)\r\n    );\r\n  }\r\n\r\n  handleWindDirectionChange(event: React.FormEvent<HTMLSelectElement>) {\r\n    this.props.handleChange(\r\n      'windDirection',\r\n      parseInt(event.currentTarget.value)\r\n    );\r\n  }\r\n\r\n  handleChanceWindChange(event: React.FormEvent<HTMLInputElement>) {\r\n    this.props.handleChange('chanceWind', parseInt(event.currentTarget.value));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Wrap>\r\n          <WrapItem>\r\n            <InputSelect\r\n              id=\"sideDirection\"\r\n              label=\"Side Direction\"\r\n              tooltip=\"Sets the direction considered to be sideways.\"\r\n              value={this.props.data.sideDirection}\r\n              onChange={this.handleSideDirectionChange}\r\n            >\r\n              <option value=\"0\">North</option>\r\n              <option value=\"1\">East</option>\r\n              <option value=\"2\">South</option>\r\n              <option value=\"3\">West</option>\r\n            </InputSelect>\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputSelect\r\n              id=\"windDirection\"\r\n              label=\"Wind Direction\"\r\n              tooltip=\"Sets winding direction that is perpendicular to the sideways direction.\"\r\n              value={this.props.data.windDirection}\r\n              onChange={this.handleWindDirectionChange}\r\n            >\r\n              <option value=\"0\">North</option>\r\n              <option value=\"1\">East</option>\r\n              <option value=\"2\">South</option>\r\n              <option value=\"3\">West</option>\r\n            </InputSelect>\r\n          </WrapItem>\r\n        </Wrap>\r\n        <Wrap>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"chanceWind\"\r\n              label=\"Wind Chance\"\r\n              tooltip=\"The percent chance that the winding direction will be chosen.\"\r\n              placeholder=\"Wind Chance\"\r\n              value={this.props.data.chanceWind}\r\n              onChange={this.handleChanceWindChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n        </Wrap>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Wrap, WrapItem } from '@chakra-ui/react';\r\n\r\nimport { InputSelect, InputText } from '../../../../lib/components';\r\n\r\nimport { RecursiveBacktrackerData } from '../../../../lib/mazes';\r\n\r\nexport interface IRecursiveBacktrackerProps {\r\n  data: RecursiveBacktrackerData;\r\n  handleChange: (fieldName: string, value: any) => void;\r\n}\r\n\r\nexport interface IRecursiveBacktrackerState {}\r\n\r\nexport class RecursiveBacktrackerProperties extends React.Component<\r\n  IRecursiveBacktrackerProps,\r\n  IRecursiveBacktrackerState\r\n> {\r\n  constructor(props: IRecursiveBacktrackerProps) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.handleSelectChange = this.handleSelectChange.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  handleSelectChange(event: React.FormEvent<HTMLSelectElement>) {\r\n    this.props.handleChange(event.currentTarget.id, event.currentTarget.value);\r\n  }\r\n\r\n  handleInputChange(event: React.FormEvent<HTMLInputElement>) {\r\n    this.props.handleChange(\r\n      event.currentTarget.id,\r\n      parseInt(event.currentTarget.value)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Wrap>\r\n          <WrapItem>\r\n            <InputSelect\r\n              id=\"setStartPosition\"\r\n              label=\"Set Start Position\"\r\n              tooltip=\"Sets whether the start position should be set with parameters or chosen at random.\"\r\n              value={this.props.data.setStartPosition.toString()}\r\n              onChange={this.handleSelectChange}\r\n            >\r\n              <option value=\"true\">True</option>\r\n              <option value=\"false\">False</option>\r\n            </InputSelect>\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"startPosX\"\r\n              label=\"Start X Position\"\r\n              tooltip=\"The x-coordinate for the cell used to start generation.\"\r\n              placeholder=\"Start X Position\"\r\n              value={this.props.data.startPosX}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"startPosY\"\r\n              label=\"Start Y Position\"\r\n              tooltip=\"The y-coordinate for the cell used to start generation.\"\r\n              placeholder=\"Start Y Position\"\r\n              value={this.props.data.startPosY}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </WrapItem>\r\n        </Wrap>\r\n        <Wrap>\r\n          <WrapItem>\r\n            <InputSelect\r\n              id=\"directionBias\"\r\n              label=\"Direction Bias\"\r\n              tooltip=\"Sets whether the direction bias should be based on the cardinal directions or based on direction compared to the previous cell.\"\r\n              value={this.props.data.directionBias.toString()}\r\n              onChange={this.handleSelectChange}\r\n            >\r\n              <option value=\"Cardinal\">Cardinal</option>\r\n              <option value=\"Turn\">Turn</option>\r\n            </InputSelect>\r\n          </WrapItem>\r\n        </Wrap>\r\n        <Wrap\r\n          visibility={\r\n            this.props.data.directionBias === 'Cardinal' ? 'initial' : 'hidden'\r\n          }\r\n          display={\r\n            this.props.data.directionBias === 'Cardinal' ? 'flex' : 'none'\r\n          }\r\n        >\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"northChance\"\r\n              label=\"North Chance\"\r\n              tooltip=\"The percentage chance that North will be chosen.\"\r\n              placeholder=\"North Chance\"\r\n              value={this.props.data.northChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"eastChance\"\r\n              label=\"East Chance\"\r\n              tooltip=\"The percentage chance that East will be chosen.\"\r\n              placeholder=\"East Chance\"\r\n              value={this.props.data.eastChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"southChance\"\r\n              label=\"South Chance\"\r\n              tooltip=\"The percentage chance that South will be chosen.\"\r\n              placeholder=\"South Chance\"\r\n              value={this.props.data.southChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"westChance\"\r\n              label=\"West Chance\"\r\n              tooltip=\"The percentage chance that West will be chosen.\"\r\n              placeholder=\"West Chance\"\r\n              value={this.props.data.westChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n        </Wrap>\r\n        <Wrap\r\n          visibility={\r\n            this.props.data.directionBias === 'Turn' ? 'initial' : 'hidden'\r\n          }\r\n          display={this.props.data.directionBias === 'Turn' ? 'flex' : 'none'}\r\n        >\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"forwardChance\"\r\n              label=\"Forward Chance\"\r\n              tooltip=\"The percentage chance that moving forward will be chosen.\"\r\n              placeholder=\"Forward Chance\"\r\n              value={this.props.data.forwardChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"leftChance\"\r\n              label=\"Left Chance\"\r\n              tooltip=\"The percentage chance that a left turn will be chosen.\"\r\n              placeholder=\"Left Chance\"\r\n              value={this.props.data.leftChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"rightChance\"\r\n              label=\"Right Chance\"\r\n              tooltip=\"The percentage chance that a right turn will be chosen.\"\r\n              placeholder=\"Right Chance\"\r\n              value={this.props.data.rightChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n        </Wrap>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Wrap, WrapItem, Text } from '@chakra-ui/react';\r\n\r\nimport { InputSelect, InputText } from '../../../../lib/components';\r\n\r\nimport { GrowingTreeData } from '../../../../lib/mazes';\r\n\r\nexport interface IGrowingTreeProps {\r\n  data: GrowingTreeData;\r\n  handleChange: (fieldName: string, value: any) => void;\r\n}\r\n\r\nexport interface IGrowingTreeState {}\r\n\r\nexport class GrowingTreeProperties extends React.Component<\r\n  IGrowingTreeProps,\r\n  IGrowingTreeState\r\n> {\r\n  constructor(props: IGrowingTreeProps) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.handleSelectChange = this.handleSelectChange.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  handleSelectChange(event: React.FormEvent<HTMLSelectElement>) {\r\n    this.props.handleChange(event.currentTarget.id, event.currentTarget.value);\r\n  }\r\n\r\n  handleInputChange(event: React.FormEvent<HTMLInputElement>) {\r\n    this.props.handleChange(event.currentTarget.id, event.currentTarget.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Wrap>\r\n          <WrapItem>\r\n            <InputSelect\r\n              id=\"setStartPosition\"\r\n              label=\"Set Start Position\"\r\n              tooltip=\"Sets whether the start position should be set with parameters or chosen at random.\"\r\n              value={this.props.data.setStartPosition.toString()}\r\n              onChange={this.handleSelectChange}\r\n            >\r\n              <option value=\"true\">True</option>\r\n              <option value=\"false\">False</option>\r\n            </InputSelect>\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"startPosX\"\r\n              label=\"Start X Position\"\r\n              tooltip=\"The x-coordinate for the cell used to start generation.\"\r\n              placeholder=\"Start X Position\"\r\n              value={this.props.data.startPosX}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"startPosY\"\r\n              label=\"Start Y Position\"\r\n              tooltip=\"The y-coordinate for the cell used to start generation.\"\r\n              placeholder=\"Start Y Position\"\r\n              value={this.props.data.startPosY}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </WrapItem>\r\n        </Wrap>\r\n        <Wrap>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"treeGrammar\"\r\n              label=\"Tree Grammar\"\r\n              tooltip=\"The grammar used for generation. The order of the grammar will be repeated until the entire maze is generated.\"\r\n              placeholder=\"Tree Grammar\"\r\n              value={this.props.data.treeGrammar}\r\n              onChange={this.handleInputChange}\r\n            />\r\n            <Text fontSize=\"small\" margin=\"1em\">\r\n              <ul>\r\n                <li>F - First cell in list</li>\r\n                <li>L - Last cell in list</li>\r\n                <li>R - Random cell from list</li>\r\n              </ul>\r\n            </Text>\r\n          </WrapItem>\r\n        </Wrap>\r\n        <Wrap>\r\n          <WrapItem>\r\n            <InputSelect\r\n              id=\"directionBias\"\r\n              label=\"Direction Bias\"\r\n              tooltip=\"Sets whether the direction bias should be based on the cardinal directions or based on direction compared to the previous cell.\"\r\n              value={this.props.data.directionBias.toString()}\r\n              onChange={this.handleSelectChange}\r\n            >\r\n              <option value=\"Cardinal\">Cardinal</option>\r\n              <option value=\"Turn\">Turn</option>\r\n            </InputSelect>\r\n          </WrapItem>\r\n        </Wrap>\r\n        <Wrap\r\n          visibility={\r\n            this.props.data.directionBias === 'Cardinal' ? 'initial' : 'hidden'\r\n          }\r\n          display={\r\n            this.props.data.directionBias === 'Cardinal' ? 'flex' : 'none'\r\n          }\r\n        >\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"northChance\"\r\n              label=\"North Chance\"\r\n              tooltip=\"The percentage chance that North will be chosen.\"\r\n              placeholder=\"North Chance\"\r\n              value={this.props.data.northChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"eastChance\"\r\n              label=\"East Chance\"\r\n              tooltip=\"The percentage chance that East will be chosen.\"\r\n              placeholder=\"East Chance\"\r\n              value={this.props.data.eastChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"southChance\"\r\n              label=\"South Chance\"\r\n              tooltip=\"The percentage chance that South will be chosen.\"\r\n              placeholder=\"South Chance\"\r\n              value={this.props.data.southChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"westChance\"\r\n              label=\"West Chance\"\r\n              tooltip=\"The percentage chance that West will be chosen.\"\r\n              placeholder=\"West Chance\"\r\n              value={this.props.data.westChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n        </Wrap>\r\n        <Wrap\r\n          visibility={\r\n            this.props.data.directionBias === 'Turn' ? 'initial' : 'hidden'\r\n          }\r\n          display={this.props.data.directionBias === 'Turn' ? 'flex' : 'none'}\r\n        >\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"forwardChance\"\r\n              label=\"Forward Chance\"\r\n              tooltip=\"The percentage chance that moving forward will be chosen.\"\r\n              placeholder=\"Forward Chance\"\r\n              value={this.props.data.forwardChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"leftChance\"\r\n              label=\"Left Chance\"\r\n              tooltip=\"The percentage chance that a left turn will be chosen.\"\r\n              placeholder=\"Left Chance\"\r\n              value={this.props.data.leftChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"rightChance\"\r\n              label=\"Right Chance\"\r\n              tooltip=\"The percentage chance that a right turn will be chosen.\"\r\n              placeholder=\"Right Chance\"\r\n              value={this.props.data.rightChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n        </Wrap>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Wrap, WrapItem } from '@chakra-ui/react';\r\n\r\nimport { InputText } from '../../../../lib/components';\r\n\r\nimport { RecursiveSubdivisionData } from '../../../../lib/mazes';\r\n\r\nexport interface IRecursiveSubdivisionProps {\r\n  data: RecursiveSubdivisionData;\r\n  handleChange: (fieldName: string, value: number) => void;\r\n}\r\n\r\nexport interface IRecursiveSubdivisionState {}\r\n\r\nexport class RecursiveSubdivisionProperties extends React.Component<\r\n  IRecursiveSubdivisionProps,\r\n  IRecursiveSubdivisionState\r\n> {\r\n  constructor(props: IRecursiveSubdivisionProps) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  handleInputChange(event: React.FormEvent<HTMLInputElement>) {\r\n    this.props.handleChange(\r\n      event.currentTarget.id,\r\n      parseInt(event.currentTarget.value)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Wrap>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"chanceForRoom\"\r\n              label=\"Chance for Room\"\r\n              tooltip=\"The percentage chance the current set of cells will no longer be subdivided into smaller sets. If the maximum number of rooms has been reached or the set of cells does not fit into the room size criteria, then this field is disregarded.\"\r\n              placeholder=\"Chance for Room\"\r\n              value={this.props.data.chanceForRoom}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"maxRooms\"\r\n              label=\"Max Rooms\"\r\n              tooltip=\"The maximum number of rooms that will be created. This does not guarantee that this number of rooms will be generated.\"\r\n              placeholder=\"Max Rooms\"\r\n              value={this.props.data.maxRooms}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </WrapItem>\r\n        </Wrap>\r\n        <Wrap>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"minRoomWidth\"\r\n              label=\"Minimum Room Width\"\r\n              tooltip=\"The minimum room width measured in cells.\"\r\n              placeholder=\"Minimum Room Width\"\r\n              value={this.props.data.minRoomWidth}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"minRoomHeight\"\r\n              label=\"Minimum Room Height\"\r\n              tooltip=\"The minimum room height measured in cells.\"\r\n              placeholder=\"Minimum Room Height\"\r\n              value={this.props.data.minRoomHeight}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </WrapItem>\r\n        </Wrap>\r\n        <Wrap>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"maxRoomWidth\"\r\n              label=\"Maximum Room Width\"\r\n              tooltip=\"The maximum room width measured in cells.\"\r\n              placeholder=\"Maximum Room Width\"\r\n              value={this.props.data.maxRoomWidth}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"maxRoomHeight\"\r\n              label=\"Maximum Room Height\"\r\n              tooltip=\"The maximum room height measured in cells.\"\r\n              placeholder=\"Maximum Room Height\"\r\n              value={this.props.data.maxRoomHeight}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </WrapItem>\r\n        </Wrap>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Wrap, WrapItem } from '@chakra-ui/react';\r\n\r\nimport { InputSelect, InputText } from '../../../../lib/components';\r\n\r\nimport { AldousBroderData } from '../../../../lib/mazes';\r\n\r\nexport interface IAldousBroderProps {\r\n  data: AldousBroderData;\r\n  handleChange: (fieldName: string, value: any) => void;\r\n}\r\n\r\nexport interface IAldousBroderState {}\r\n\r\nexport class AldousBroderProperties extends React.Component<IAldousBroderProps, IAldousBroderState> {\r\n  constructor(props: IAldousBroderProps) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.handleSelectChange = this.handleSelectChange.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  handleSelectChange(event: React.FormEvent<HTMLSelectElement>) {\r\n    this.props.handleChange(event.currentTarget.id, event.currentTarget.value);\r\n  }\r\n\r\n  handleInputChange(event: React.FormEvent<HTMLInputElement>) {\r\n    this.props.handleChange(event.currentTarget.id, parseInt(event.currentTarget.value));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Wrap>\r\n          <WrapItem>\r\n            <InputSelect\r\n              id=\"setStartPosition\"\r\n              label=\"Set Start Position\"\r\n              tooltip=\"Sets whether the start position should be set with parameters or chosen at random.\"\r\n              value={this.props.data.setStartPosition.toString()}\r\n              onChange={this.handleSelectChange}\r\n            >\r\n              <option value=\"true\">True</option>\r\n              <option value=\"false\">False</option>\r\n            </InputSelect>\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"startPosX\"\r\n              label=\"Start X Position\"\r\n              tooltip=\"The x-coordinate for the cell used to start generation.\"\r\n              placeholder=\"Start X Position\"\r\n              value={this.props.data.startPosX}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"startPosY\"\r\n              label=\"Start Y Position\"\r\n              tooltip=\"The y-coordinate for the cell used to start generation.\"\r\n              placeholder=\"Start Y Position\"\r\n              value={this.props.data.startPosY}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </WrapItem>\r\n        </Wrap>\r\n        <Wrap>\r\n          <WrapItem>\r\n            <InputSelect\r\n              id=\"directionBias\"\r\n              label=\"Direction Bias\"\r\n              tooltip=\"Sets whether the direction bias should be based on the cardinal directions or based on direction compared to the previous cell.\"\r\n              value={this.props.data.directionBias.toString()}\r\n              onChange={this.handleSelectChange}\r\n            >\r\n              <option value=\"Cardinal\">Cardinal</option>\r\n              <option value=\"Turn\">Turn</option>\r\n            </InputSelect>\r\n          </WrapItem>\r\n        </Wrap>\r\n        <Wrap\r\n          visibility={this.props.data.directionBias === 'Cardinal' ? 'initial' : 'hidden'}\r\n          display={this.props.data.directionBias === 'Cardinal' ? 'flex' : 'none'}\r\n        >\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"northChance\"\r\n              label=\"North Chance\"\r\n              tooltip=\"The percentage chance that North will be chosen.\"\r\n              placeholder=\"North Chance\"\r\n              value={this.props.data.northChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"eastChance\"\r\n              label=\"East Chance\"\r\n              tooltip=\"The percentage chance that East will be chosen.\"\r\n              placeholder=\"East Chance\"\r\n              value={this.props.data.eastChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"southChance\"\r\n              label=\"South Chance\"\r\n              tooltip=\"The percentage chance that South will be chosen.\"\r\n              placeholder=\"South Chance\"\r\n              value={this.props.data.southChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"westChance\"\r\n              label=\"West Chance\"\r\n              tooltip=\"The percentage chance that West will be chosen.\"\r\n              placeholder=\"West Chance\"\r\n              value={this.props.data.westChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n        </Wrap>\r\n        <Wrap\r\n          visibility={this.props.data.directionBias === 'Turn' ? 'initial' : 'hidden'}\r\n          display={this.props.data.directionBias === 'Turn' ? 'flex' : 'none'}\r\n        >\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"forwardChance\"\r\n              label=\"Forward Chance\"\r\n              tooltip=\"The percentage chance that moving forward will be chosen.\"\r\n              placeholder=\"Forward Chance\"\r\n              value={this.props.data.forwardChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"leftChance\"\r\n              label=\"Left Chance\"\r\n              tooltip=\"The percentage chance that a left turn will be chosen.\"\r\n              placeholder=\"Left Chance\"\r\n              value={this.props.data.leftChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"rightChance\"\r\n              label=\"Right Chance\"\r\n              tooltip=\"The percentage chance that a right turn will be chosen.\"\r\n              placeholder=\"Right Chance\"\r\n              value={this.props.data.rightChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"backwardChance\"\r\n              label=\"Backward Chance\"\r\n              tooltip=\"The percentage chance that the previous cell will be chosen.\"\r\n              placeholder=\"Backward Chance\"\r\n              value={this.props.data.backwardChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n        </Wrap>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Wrap, WrapItem } from '@chakra-ui/react';\r\n\r\nimport { InputSelect, InputText } from '../../../../lib/components';\r\n\r\nimport { WilsonData } from '../../../../lib/mazes';\r\n\r\nexport interface IWilsonProps {\r\n  data: WilsonData;\r\n  handleChange: (fieldName: string, value: any) => void;\r\n}\r\n\r\nexport interface IWilsonState {}\r\n\r\nexport class WilsonProperties extends React.Component<IWilsonProps, IWilsonState> {\r\n  constructor(props: IWilsonProps) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.handleSelectChange = this.handleSelectChange.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  handleSelectChange(event: React.FormEvent<HTMLSelectElement>) {\r\n    this.props.handleChange(event.currentTarget.id, event.currentTarget.value);\r\n  }\r\n\r\n  handleInputChange(event: React.FormEvent<HTMLInputElement>) {\r\n    this.props.handleChange(event.currentTarget.id, parseInt(event.currentTarget.value));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Wrap>\r\n          <WrapItem>\r\n            <InputSelect\r\n              id=\"setStartPosition\"\r\n              label=\"Set Start Position\"\r\n              tooltip=\"Sets whether the start position should be set with parameters or chosen at random.\"\r\n              value={this.props.data.setStartPosition.toString()}\r\n              onChange={this.handleSelectChange}\r\n            >\r\n              <option value=\"true\">True</option>\r\n              <option value=\"false\">False</option>\r\n            </InputSelect>\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"startPosX\"\r\n              label=\"Start X Position\"\r\n              tooltip=\"The x-coordinate for the cell used to start generation.\"\r\n              placeholder=\"Start X Position\"\r\n              value={this.props.data.startPosX}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"startPosY\"\r\n              label=\"Start Y Position\"\r\n              tooltip=\"The y-coordinate for the cell used to start generation.\"\r\n              placeholder=\"Start Y Position\"\r\n              value={this.props.data.startPosY}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </WrapItem>\r\n        </Wrap>\r\n        <Wrap>\r\n          <WrapItem>\r\n            <InputSelect\r\n              id=\"setVisitedStartPosition\"\r\n              label=\"Set Initial Visited Position\"\r\n              tooltip=\"Sets whether the initial visited position should be set with parameters or chosen at random.\"\r\n              value={this.props.data.setVisitedStartPosition.toString()}\r\n              onChange={this.handleSelectChange}\r\n            >\r\n              <option value=\"true\">True</option>\r\n              <option value=\"false\">False</option>\r\n            </InputSelect>\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"startVisitedPosX\"\r\n              label=\"Initial Visited X Position\"\r\n              tooltip=\"The x-coordinate for the first cell marked visited.\"\r\n              placeholder=\"Initial Visited X Position\"\r\n              value={this.props.data.startVisitedPosX}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"startVisitedPosY\"\r\n              label=\"Initial Visited Y Position\"\r\n              tooltip=\"The y-coordinate for the first cell marked visited.\"\r\n              placeholder=\"Initial Visited Y Position\"\r\n              value={this.props.data.startVisitedPosY}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </WrapItem>\r\n        </Wrap>\r\n        <Wrap>\r\n          <WrapItem>\r\n            <InputSelect\r\n              id=\"directionBias\"\r\n              label=\"Direction Bias\"\r\n              tooltip=\"Sets whether the direction bias should be based on the cardinal directions or based on direction compared to the previous cell.\"\r\n              value={this.props.data.directionBias.toString()}\r\n              onChange={this.handleSelectChange}\r\n            >\r\n              <option value=\"Cardinal\">Cardinal</option>\r\n              <option value=\"Turn\">Turn</option>\r\n            </InputSelect>\r\n          </WrapItem>\r\n        </Wrap>\r\n        <Wrap\r\n          visibility={this.props.data.directionBias === 'Cardinal' ? 'initial' : 'hidden'}\r\n          display={this.props.data.directionBias === 'Cardinal' ? 'flex' : 'none'}\r\n        >\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"northChance\"\r\n              label=\"North Chance\"\r\n              tooltip=\"The percentage chance that North will be chosen.\"\r\n              placeholder=\"North Chance\"\r\n              value={this.props.data.northChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"eastChance\"\r\n              label=\"East Chance\"\r\n              tooltip=\"The percentage chance that East will be chosen.\"\r\n              placeholder=\"East Chance\"\r\n              value={this.props.data.eastChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"southChance\"\r\n              label=\"South Chance\"\r\n              tooltip=\"The percentage chance that South will be chosen.\"\r\n              placeholder=\"South Chance\"\r\n              value={this.props.data.southChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"westChance\"\r\n              label=\"West Chance\"\r\n              tooltip=\"The percentage chance that West will be chosen.\"\r\n              placeholder=\"West Chance\"\r\n              value={this.props.data.westChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n        </Wrap>\r\n        <Wrap\r\n          visibility={this.props.data.directionBias === 'Turn' ? 'initial' : 'hidden'}\r\n          display={this.props.data.directionBias === 'Turn' ? 'flex' : 'none'}\r\n        >\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"forwardChance\"\r\n              label=\"Forward Chance\"\r\n              tooltip=\"The percentage chance that moving forward will be chosen.\"\r\n              placeholder=\"Forward Chance\"\r\n              value={this.props.data.forwardChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"leftChance\"\r\n              label=\"Left Chance\"\r\n              tooltip=\"The percentage chance that a left turn will be chosen.\"\r\n              placeholder=\"Left Chance\"\r\n              value={this.props.data.leftChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"rightChance\"\r\n              label=\"Right Chance\"\r\n              tooltip=\"The percentage chance that a right turn will be chosen.\"\r\n              placeholder=\"Right Chance\"\r\n              value={this.props.data.rightChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"backwardChance\"\r\n              label=\"Backward Chance\"\r\n              tooltip=\"The percentage chance that the previous cell will be chosen.\"\r\n              placeholder=\"Backward Chance\"\r\n              value={this.props.data.backwardChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n        </Wrap>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Wrap, WrapItem } from '@chakra-ui/react';\r\n\r\nimport { InputSelect, InputText } from '../../../../lib/components';\r\n\r\nimport { HuntAndKillData } from '../../../../lib/mazes';\r\n\r\nexport interface IHuntAndKillProps {\r\n  data: HuntAndKillData;\r\n  handleChange: (fieldName: string, value: any) => void;\r\n}\r\n\r\nexport interface IHuntAndKillState {}\r\n\r\nexport class HuntAndKillProperties extends React.Component<IHuntAndKillProps, IHuntAndKillState> {\r\n  constructor(props: IHuntAndKillProps) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.handleSelectChange = this.handleSelectChange.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  handleSelectChange(event: React.FormEvent<HTMLSelectElement>) {\r\n    this.props.handleChange(event.currentTarget.id, event.currentTarget.value);\r\n  }\r\n\r\n  handleInputChange(event: React.FormEvent<HTMLInputElement>) {\r\n    this.props.handleChange(event.currentTarget.id, parseInt(event.currentTarget.value));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Wrap>\r\n          <WrapItem>\r\n            <InputSelect\r\n              id=\"setStartPosition\"\r\n              label=\"Set Start Position\"\r\n              tooltip=\"Sets whether the start position should be set with parameters or chosen at random.\"\r\n              value={this.props.data.setStartPosition.toString()}\r\n              onChange={this.handleSelectChange}\r\n            >\r\n              <option value=\"true\">True</option>\r\n              <option value=\"false\">False</option>\r\n            </InputSelect>\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"startPosX\"\r\n              label=\"Start X Position\"\r\n              tooltip=\"The x-coordinate for the cell used to start generation.\"\r\n              placeholder=\"Start X Position\"\r\n              value={this.props.data.startPosX}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"startPosY\"\r\n              label=\"Start Y Position\"\r\n              tooltip=\"The y-coordinate for the cell used to start generation.\"\r\n              placeholder=\"Start Y Position\"\r\n              value={this.props.data.startPosY}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </WrapItem>\r\n        </Wrap>\r\n        <Wrap>\r\n          <WrapItem>\r\n            <InputSelect\r\n              id=\"searchPattern\"\r\n              label=\"Search Pattern\"\r\n              tooltip=\"This determines how a new starting cell is chosen for each iteration of the algorithm after the first run.\"\r\n              value={this.props.data.searchPattern}\r\n              onChange={this.handleSelectChange}\r\n            >\r\n              <option value=\"LRTB\">Left to Right, then Top to Bottom</option>\r\n              <option value=\"RLTB\">Right to Left, then Top to Bottom</option>\r\n              <option value=\"LRBT\">Left to Right, then Bottom to Top</option>\r\n              <option value=\"RLBT\">Right to Left, then Bottom to Top</option>\r\n              <option value=\"TBLR\">Top to Bottom, then Left to Right</option>\r\n              <option value=\"BTLR\">Bottom to Top, then Left to Right</option>\r\n              <option value=\"TBRL\">Top to Bottom, then Right to Left</option>\r\n              <option value=\"BTRL\">Bottom to Top, then Right to Left</option>\r\n              <option value=\"R\">Random</option>\r\n            </InputSelect>\r\n          </WrapItem>\r\n        </Wrap>\r\n        <Wrap>\r\n          <WrapItem>\r\n            <InputSelect\r\n              id=\"directionBias\"\r\n              label=\"Direction Bias\"\r\n              tooltip=\"Sets whether the direction bias should be based on the cardinal directions or based on direction compared to the previous cell.\"\r\n              value={this.props.data.directionBias.toString()}\r\n              onChange={this.handleSelectChange}\r\n            >\r\n              <option value=\"Cardinal\">Cardinal</option>\r\n              <option value=\"Turn\">Turn</option>\r\n            </InputSelect>\r\n          </WrapItem>\r\n        </Wrap>\r\n        <Wrap\r\n          visibility={this.props.data.directionBias === 'Cardinal' ? 'initial' : 'hidden'}\r\n          display={this.props.data.directionBias === 'Cardinal' ? 'flex' : 'none'}\r\n        >\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"northChance\"\r\n              label=\"North Chance\"\r\n              tooltip=\"The percentage chance that North will be chosen.\"\r\n              placeholder=\"North Chance\"\r\n              value={this.props.data.northChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"eastChance\"\r\n              label=\"East Chance\"\r\n              tooltip=\"The percentage chance that East will be chosen.\"\r\n              placeholder=\"East Chance\"\r\n              value={this.props.data.eastChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"southChance\"\r\n              label=\"South Chance\"\r\n              tooltip=\"The percentage chance that South will be chosen.\"\r\n              placeholder=\"South Chance\"\r\n              value={this.props.data.southChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"westChance\"\r\n              label=\"West Chance\"\r\n              tooltip=\"The percentage chance that West will be chosen.\"\r\n              placeholder=\"West Chance\"\r\n              value={this.props.data.westChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n        </Wrap>\r\n        <Wrap\r\n          visibility={this.props.data.directionBias === 'Turn' ? 'initial' : 'hidden'}\r\n          display={this.props.data.directionBias === 'Turn' ? 'flex' : 'none'}\r\n        >\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"forwardChance\"\r\n              label=\"Forward Chance\"\r\n              tooltip=\"The percentage chance that moving forward will be chosen.\"\r\n              placeholder=\"Forward Chance\"\r\n              value={this.props.data.forwardChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"leftChance\"\r\n              label=\"Left Chance\"\r\n              tooltip=\"The percentage chance that a left turn will be chosen.\"\r\n              placeholder=\"Left Chance\"\r\n              value={this.props.data.leftChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"rightChance\"\r\n              label=\"Right Chance\"\r\n              tooltip=\"The percentage chance that a right turn will be chosen.\"\r\n              placeholder=\"Right Chance\"\r\n              value={this.props.data.rightChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"backwardChance\"\r\n              label=\"Backward Chance\"\r\n              tooltip=\"The percentage chance that the previous cell will be chosen.\"\r\n              placeholder=\"Backward Chance\"\r\n              value={this.props.data.backwardChance}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n        </Wrap>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Wrap, WrapItem } from '@chakra-ui/react';\r\n\r\nimport { InputSelect, InputText } from '../../../../lib/components';\r\n\r\nimport { EllerData } from '../../../../lib/mazes';\r\n\r\nexport interface IEllerProps {\r\n  data: EllerData;\r\n  handleChange: (fieldName: string, value: any) => void;\r\n}\r\n\r\nexport interface IEllerState {}\r\n\r\nexport class EllerProperties extends React.Component<IEllerProps, IEllerState> {\r\n  constructor(props: IEllerProps) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.handleSelectChange = this.handleSelectChange.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  handleSelectChange(event: React.FormEvent<HTMLSelectElement>) {\r\n    this.props.handleChange(event.currentTarget.id, event.currentTarget.value);\r\n  }\r\n\r\n  handleInputChange(event: React.FormEvent<HTMLInputElement>) {\r\n    this.props.handleChange(event.currentTarget.id, parseInt(event.currentTarget.value));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Wrap>\r\n          <WrapItem>\r\n            <InputSelect\r\n              id=\"sidewaysDirection\"\r\n              label=\"Sideways Direction\"\r\n              tooltip=\"Sets the direction considered to be sideways.\"\r\n              value={this.props.data.sidewaysDirection}\r\n              onChange={this.handleSelectChange}\r\n            >\r\n              <option value=\"0\">North</option>\r\n              <option value=\"1\">East</option>\r\n              <option value=\"2\">South</option>\r\n              <option value=\"3\">West</option>\r\n            </InputSelect>\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputSelect\r\n              id=\"verticalDirection\"\r\n              label=\"Vertical Direction\"\r\n              tooltip=\"Sets vertical direction that is perpendicular to the sideways direction.\"\r\n              value={this.props.data.verticalDirection}\r\n              onChange={this.handleSelectChange}\r\n            >\r\n              <option value=\"0\">North</option>\r\n              <option value=\"1\">East</option>\r\n              <option value=\"2\">South</option>\r\n              <option value=\"3\">West</option>\r\n            </InputSelect>\r\n          </WrapItem>\r\n        </Wrap>\r\n        <Wrap>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"chanceMergeSideways\"\r\n              label=\"Chance to Merge Sideways\"\r\n              tooltip=\"The percent chance that a cell will merge sideways.\"\r\n              placeholder=\"Chance to Merge Sideways\"\r\n              value={this.props.data.chanceMergeSideways}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n          <WrapItem>\r\n            <InputText\r\n              id=\"chanceMergeDown\"\r\n              label=\"Chance to Merge Vertically\"\r\n              tooltip=\"The percent chance that a cell will merge vertically.\"\r\n              placeholder=\"Chance to Merge Vertically\"\r\n              value={this.props.data.chanceMergeDown}\r\n              onChange={this.handleInputChange}\r\n              rightAddon=\"%\"\r\n            />\r\n          </WrapItem>\r\n        </Wrap>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","export class RGBA {\r\n  r: number;\r\n  g: number;\r\n  b: number;\r\n  a: number;\r\n\r\n  constructor(r: number, g: number, b: number, a: number) {\r\n    this.r = r;\r\n    this.g = g;\r\n    this.b = b;\r\n    this.a = a;\r\n  }\r\n}\r\n\r\nexport const Black: RGBA = new RGBA(0, 0, 0, 255);\r\nexport const White: RGBA = new RGBA(255, 255, 255, 255);\r\n","import { RGBA } from './rgba';\r\n\r\nexport class Image extends ImageData {\r\n  GetPixel(x: number, y: number): RGBA {\r\n    return new RGBA(\r\n      this.data[this.width * x * 4 + y * 4],\r\n      this.data[this.width * x * 4 + y * 4 + 1],\r\n      this.data[this.width * x * 4 + y * 4 + 2],\r\n      this.data[this.width * x * 4 + y * 4 + 3]\r\n    );\r\n  }\r\n\r\n  SetPixel(x: number, y: number, c: RGBA) {\r\n    this.data[this.width * x * 4 + y * 4] = c.r;\r\n    this.data[this.width * x * 4 + y * 4 + 1] = c.g;\r\n    this.data[this.width * x * 4 + y * 4 + 2] = c.b;\r\n    this.data[this.width * x * 4 + y * 4 + 3] = c.a;\r\n  }\r\n\r\n  SetPixels(x: number, y: number, imgData: Image) {\r\n    for (let i: number = 0; i < imgData.width; i++) {\r\n      for (let j: number = 0; j < imgData.height; j++) {\r\n        this.SetPixel(i + x, j + y, imgData.GetPixel(i, j));\r\n      }\r\n    }\r\n  }\r\n\r\n  FlipOverY() {\r\n    let newData: Image = new Image(this.width, this.height);\r\n    for (let i: number = 0; i < this.width; i++) {\r\n      for (let j: number = 0; j < this.height; j++) {\r\n        newData.SetPixel(i, this.height - 1 - j, this.GetPixel(i, j));\r\n      }\r\n    }\r\n    for (let i: number = 0; i < this.data.length; i++) {\r\n      this.data[i] = newData.data[i];\r\n    }\r\n  }\r\n\r\n  FlipOverX() {\r\n    let newData: Image = new Image(this.width, this.height);\r\n    for (let i: number = 0; i < this.width; i++) {\r\n      for (let j: number = 0; j < this.height; j++) {\r\n        newData.SetPixel(this.width - 1 - i, j, this.GetPixel(i, j));\r\n      }\r\n    }\r\n    for (let i: number = 0; i < this.data.length; i++) {\r\n      this.data[i] = newData.data[i];\r\n    }\r\n  }\r\n\r\n  Transpose() {\r\n    let newData: Image = new Image(this.width, this.height);\r\n    for (let i: number = 0; i < this.width; i++) {\r\n      for (let j: number = 0; j < this.height; j++) {\r\n        newData.SetPixel(j, i, this.GetPixel(i, j));\r\n      }\r\n    }\r\n    for (let i: number = 0; i < this.data.length; i++) {\r\n      this.data[i] = newData.data[i];\r\n    }\r\n  }\r\n}\r\n","//Directions\r\n//3-sides point up: 0 - Northeast, 1 - South, 2 - Northwest\r\n//3-sides point down: 0 - North, 1 - Southeast, 2 - Southwest\r\n//4-sides : 0 - North, 1 - East, 2 - South, 3 - West\r\n//6-sides : 0 - North, 1 - Northeast, 2 - Southeast, 3 - South, 4 - Southwest, 5 - Northwest\r\n\r\nexport class Wall {\r\n  direction!: number;\r\n  isWall!: boolean;\r\n  isStairsDown!: boolean;\r\n  isStairsUp!: boolean;\r\n  weight: number;\r\n\r\n  constructor() {\r\n    this.weight = 0;\r\n  }\r\n\r\n  IsFlat(): boolean {\r\n    return !this.isWall && !this.isStairsUp && !this.isStairsDown;\r\n  }\r\n}\r\n","import { Image } from '../../image-utils/image';\r\nimport { RGBA } from '../../image-utils/rgba';\r\nimport { Wall } from './wall';\r\n\r\nexport class Cell {\r\n  x: number;\r\n  y: number;\r\n\r\n  visited!: boolean;\r\n  adjacentCells!: (Cell | undefined)[];\r\n  walls!: Wall[];\r\n  numCellSides: number;\r\n\r\n  set!: number;\r\n  masked!: boolean;\r\n\r\n  overCell!: Cell | undefined;\r\n  underCell!: Cell | undefined;\r\n\r\n  constructor(x: number, y: number, numCellSides: number = 4) {\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    this.visited = false;\r\n    this.set = 0;\r\n    this.masked = false;\r\n\r\n    this.adjacentCells = [];\r\n    this.walls = [];\r\n    this.numCellSides = numCellSides;\r\n\r\n    for (let i: number = 0; i < numCellSides; i++) {\r\n      let wall = new Wall();\r\n      wall.direction = i;\r\n      wall.isWall = false;\r\n      wall.isStairsUp = false;\r\n      wall.isStairsDown = false;\r\n      this.walls.push(wall);\r\n    }\r\n  }\r\n\r\n  SetWall(direction: number, isWall: boolean): void {\r\n    this.walls[direction].isWall = isWall;\r\n  }\r\n\r\n  SetWallAndStairs(\r\n    direction: number,\r\n    isWall: boolean,\r\n    isStairsUp: boolean,\r\n    isStairsDown: boolean\r\n  ): void {\r\n    this.walls[direction].isWall = isWall;\r\n    this.walls[direction].isStairsUp = isStairsUp;\r\n    this.walls[direction].isStairsDown = isStairsDown;\r\n  }\r\n\r\n  CanTunnel(): boolean {\r\n    let i: number = 0;\r\n    let canTunnel: boolean = false;\r\n    do {\r\n      canTunnel = this.CanTunnelDirection(i);\r\n      i++;\r\n    } while (!canTunnel && i < this.adjacentCells.length);\r\n    return canTunnel;\r\n  }\r\n\r\n  CanTunnelDirection(direction: number): boolean {\r\n    let canTunnel: boolean = false;\r\n\r\n    canTunnel =\r\n      this.adjacentCells[direction] !== undefined &&\r\n      this.adjacentCells[direction]?.underCell === undefined &&\r\n      this.adjacentCells[direction]?.adjacentCells[direction] !== undefined &&\r\n      this.checkPassage(direction) &&\r\n      (this.adjacentCells[direction] as Cell).adjacentCells[(direction + 1) % 4]\r\n        ?.underCell === undefined &&\r\n      (this.adjacentCells[direction] as Cell).adjacentCells[(direction + 3) % 4]\r\n        ?.underCell === undefined;\r\n    return canTunnel;\r\n  }\r\n\r\n  private checkPassage(direction: number): boolean {\r\n    let retVal: boolean = false;\r\n\r\n    if (direction === 0 || direction === 2) {\r\n      retVal =\r\n        (this.adjacentCells[direction] as Cell).walls[0].isWall &&\r\n        !(this.adjacentCells[direction] as Cell).walls[1].isWall &&\r\n        (this.adjacentCells[direction] as Cell).walls[2].isWall &&\r\n        !(this.adjacentCells[direction] as Cell).walls[3].isWall;\r\n    } else {\r\n      retVal =\r\n        !(this.adjacentCells[direction] as Cell).walls[0].isWall &&\r\n        (this.adjacentCells[direction] as Cell).walls[1].isWall &&\r\n        !(this.adjacentCells[direction] as Cell).walls[2].isWall &&\r\n        (this.adjacentCells[direction] as Cell).walls[3].isWall;\r\n    }\r\n\r\n    return retVal;\r\n  }\r\n\r\n  ColumnExists(direction: number): boolean | undefined {\r\n    let retVal: boolean | undefined = true;\r\n    if (this.numCellSides === 4) {\r\n      retVal =\r\n        this.adjacentCells[direction] !== undefined &&\r\n        this.walls[direction] !== undefined &&\r\n        this.walls[direction].IsFlat() &&\r\n        this.adjacentCells[direction]?.adjacentCells[(direction + 1) % 4] !==\r\n          undefined &&\r\n        this.adjacentCells[direction]?.walls[(direction + 1) % 4].IsFlat() &&\r\n        this.adjacentCells[direction]?.adjacentCells[(direction + 1) % 4]\r\n          ?.adjacentCells[(direction + 2) % 4] !== undefined &&\r\n        this.adjacentCells[direction]?.adjacentCells[\r\n          (direction + 1) % 4\r\n        ]?.walls[(direction + 2) % 4].IsFlat() &&\r\n        this.adjacentCells[direction]?.adjacentCells[(direction + 1) % 4]\r\n          ?.adjacentCells[(direction + 2) % 4]?.adjacentCells[\r\n          (direction + 3) % 4\r\n        ] !== undefined &&\r\n        this.adjacentCells[direction]?.adjacentCells[\r\n          (direction + 1) % 4\r\n        ]?.adjacentCells[(direction + 2) % 4]?.walls[\r\n          (direction + 3) % 4\r\n        ].IsFlat();\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  Display(dimension: number, wallColor: RGBA, floorColor: RGBA): Image {\r\n    let imgData = new Image(dimension, dimension);\r\n    let paintColor: RGBA = floorColor;\r\n\r\n    for (let i: number = 0; i < dimension; i++) {\r\n      for (let j: number = 0; j < dimension; j++) {\r\n        imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    }\r\n\r\n    //Columns\r\n\r\n    //NE\r\n    paintColor = this.ColumnExists(0) ? floorColor : wallColor;\r\n    for (let i: number = dimension - dimension / 4; i < dimension; i++) {\r\n      for (let j: number = dimension - dimension / 4; j < dimension; j++) {\r\n        imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    }\r\n\r\n    //SE\r\n    paintColor = this.ColumnExists(1) ? floorColor : wallColor;\r\n    for (let i: number = dimension - dimension / 4; i < dimension; i++) {\r\n      for (let j: number = 0; j < dimension / 4; j++) {\r\n        imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    }\r\n\r\n    //SW\r\n    paintColor = this.ColumnExists(2) ? floorColor : wallColor;\r\n    for (let i: number = 0; i < dimension / 4; i++) {\r\n      for (let j: number = 0; j < dimension / 4; j++) {\r\n        imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    }\r\n\r\n    //NW\r\n    paintColor = this.ColumnExists(3) ? floorColor : wallColor;\r\n    for (let i: number = 0; i < dimension / 4; i++) {\r\n      for (let j: number = dimension - dimension / 4; j < dimension; j++) {\r\n        imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    }\r\n\r\n    //Walls\r\n\r\n    //North\r\n    if (this.walls[0].isWall) {\r\n      paintColor = this.walls[0].isWall ? wallColor : floorColor;\r\n      for (let i: number = dimension / 4; i < dimension - dimension / 4; i++) {\r\n        for (\r\n          let j: number = dimension - dimension / 4;\r\n          j < dimension - dimension / 8;\r\n          j++\r\n        )\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n      paintColor =\r\n        this.underCell === undefined || this.underCell.walls[0].isWall\r\n          ? wallColor\r\n          : floorColor;\r\n      for (let i: number = dimension / 4; i < dimension - dimension / 4; i++) {\r\n        for (let j: number = dimension - dimension / 8; j < dimension; j++)\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    } else {\r\n      paintColor = floorColor;\r\n      for (let i: number = dimension / 4; i < dimension - dimension / 4; i++) {\r\n        for (let j: number = dimension - dimension / 4; j < dimension; j++)\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    }\r\n\r\n    //East\r\n    if (this.walls[1].isWall) {\r\n      paintColor = this.walls[1].isWall ? wallColor : floorColor;\r\n      for (let j: number = dimension / 4; j < dimension - dimension / 4; j++) {\r\n        for (\r\n          let i: number = dimension - dimension / 4;\r\n          i < dimension - dimension / 8;\r\n          i++\r\n        )\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n      paintColor =\r\n        this.underCell === undefined || this.underCell.walls[1].isWall\r\n          ? wallColor\r\n          : floorColor;\r\n      for (let j: number = dimension / 4; j < dimension - dimension / 4; j++) {\r\n        for (let i: number = dimension - dimension / 8; i < dimension; i++)\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    } else {\r\n      paintColor = floorColor;\r\n      for (let j: number = dimension / 4; j < dimension - dimension / 4; j++) {\r\n        for (let i: number = dimension - dimension / 4; i < dimension; i++)\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    }\r\n\r\n    //South\r\n    if (this.walls[2].isWall) {\r\n      paintColor = this.walls[2].isWall ? wallColor : floorColor;\r\n      for (let i: number = dimension / 4; i < dimension - dimension / 4; i++) {\r\n        for (let j: number = dimension / 8; j < dimension / 4; j++)\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n      paintColor =\r\n        this.underCell === undefined || this.underCell.walls[2].isWall\r\n          ? wallColor\r\n          : floorColor;\r\n      for (let i: number = dimension / 4; i < dimension - dimension / 4; i++) {\r\n        for (let j: number = 0; j < dimension / 8; j++)\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    } else {\r\n      paintColor = floorColor;\r\n      for (let i: number = dimension / 4; i < dimension - dimension / 4; i++) {\r\n        for (let j: number = 0; j < dimension / 4; j++)\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    }\r\n\r\n    //West\r\n    if (this.walls[3].isWall) {\r\n      paintColor = this.walls[3].isWall ? wallColor : floorColor;\r\n      for (let j: number = dimension / 4; j < dimension - dimension / 4; j++) {\r\n        for (let i: number = dimension / 8; i < dimension / 4; i++)\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n      paintColor =\r\n        this.underCell === undefined || this.underCell.walls[3].isWall\r\n          ? wallColor\r\n          : floorColor;\r\n      for (let j: number = dimension / 4; j < dimension - dimension / 4; j++) {\r\n        for (let i: number = 0; i < dimension / 8; i++)\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    } else {\r\n      paintColor = floorColor;\r\n      for (let j: number = dimension / 4; j < dimension - dimension / 4; j++) {\r\n        for (let i: number = 0; i < dimension / 4; i++)\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    }\r\n\r\n    if (this.walls.filter((a) => a.isWall).length === 4) {\r\n      paintColor = wallColor;\r\n      for (let i: number = 0; i < dimension; i++) {\r\n        for (let j: number = 0; j < dimension; j++)\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    }\r\n\r\n    return imgData;\r\n  }\r\n\r\n  GetWeightDirection(weight: number) {\r\n    let retVal: number = -1;\r\n    let i: number = 0;\r\n    do {\r\n      if (this.walls[i].weight === weight) {\r\n        retVal = i;\r\n      }\r\n      i++;\r\n    } while (retVal === -1 || i < this.numCellSides);\r\n    return retVal;\r\n  }\r\n\r\n  GetCellDirection(nextCell: Cell): number {\r\n    let retVal: number = -1;\r\n    let i: number = 0;\r\n    do {\r\n      if (\r\n        this.adjacentCells[i] !== undefined &&\r\n        (this.adjacentCells[i] as Cell).x === nextCell.x &&\r\n        (this.adjacentCells[i] as Cell).y === nextCell.y\r\n      ) {\r\n        retVal = i;\r\n      }\r\n      i++;\r\n    } while (retVal === -1 || i < this.numCellSides);\r\n    return retVal;\r\n  }\r\n\r\n  ToString(): string {\r\n    return '(' + this.x.toString() + ',' + this.y.toString() + ')';\r\n  }\r\n}\r\n","import { Cell } from './cell';\r\n\r\nimport { Image } from '../../image-utils/image';\r\nimport { Black, RGBA, White } from '../../image-utils/rgba';\r\n\r\nexport class Grid {\r\n  width: number;\r\n  height: number;\r\n  numCellSides: number;\r\n  cells: Cell[][];\r\n\r\n  constructor(width: number, height: number, numCellSides: number) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.numCellSides = numCellSides;\r\n    this.cells = [];\r\n\r\n    for (let i: number = 0; i < width; i++) {\r\n      this.cells[i] = [];\r\n      for (let j: number = 0; j < height; j++) {\r\n        this.cells[i][j] = new Cell(i, j, numCellSides);\r\n      }\r\n    }\r\n  }\r\n\r\n  InitializeGrid(): void {\r\n    for (let i: number = 0; i < this.width; i++) {\r\n      for (let j: number = 0; j < this.height; j++) {\r\n        if (!this.cells[i][j].masked) {\r\n          if (this.numCellSides === 4) {\r\n            //North\r\n            if (j < this.height - 1) {\r\n              this.cells[i][j].adjacentCells.push(\r\n                !this.cells[i][j + 1].masked ? this.cells[i][j + 1] : undefined\r\n              );\r\n            } else {\r\n              this.cells[i][j].adjacentCells.push(undefined);\r\n            }\r\n            //East\r\n            if (i < this.width - 1) {\r\n              this.cells[i][j].adjacentCells.push(\r\n                !this.cells[i + 1][j].masked ? this.cells[i + 1][j] : undefined\r\n              );\r\n            } else {\r\n              this.cells[i][j].adjacentCells.push(undefined);\r\n            }\r\n            //South\r\n            if (j > 0) {\r\n              this.cells[i][j].adjacentCells.push(\r\n                !this.cells[i][j - 1].masked ? this.cells[i][j - 1] : undefined\r\n              );\r\n            } else {\r\n              this.cells[i][j].adjacentCells.push(undefined);\r\n            }\r\n            //West\r\n            if (i > 0) {\r\n              this.cells[i][j].adjacentCells.push(\r\n                !this.cells[i - 1][j].masked ? this.cells[i - 1][j] : undefined\r\n              );\r\n            } else {\r\n              this.cells[i][j].adjacentCells.push(undefined);\r\n            }\r\n          }\r\n\r\n          for (let w: number = 0; w < this.numCellSides; w++) {\r\n            this.cells[i][j].SetWall(w, true);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  Display(dimension: number): Image {\r\n    const size: number = Math.max(this.width, this.height);\r\n    const wallColor: RGBA = Black;\r\n    const floorColor: RGBA = White;\r\n\r\n    let imgData = new Image(size * dimension, size * dimension);\r\n    for (let i: number = 0; i < size * dimension; i++) {\r\n      for (let j: number = 0; j < size * dimension; j++) {\r\n        imgData.SetPixel(i, j, floorColor);\r\n      }\r\n    }\r\n\r\n    let iOffset: number = 0,\r\n      jOffset: number = 0;\r\n    if (this.width < this.height) {\r\n      iOffset = Math.floor((this.height - this.width) / 2);\r\n    } else if (this.width > this.height) {\r\n      jOffset = Math.floor((this.width - this.height) / 2);\r\n    }\r\n\r\n    for (let i: number = 0; i < this.width; i++) {\r\n      for (let j: number = 0; j < this.height; j++) {\r\n        let cellImgData = this.cells[i][j].Display(\r\n          dimension,\r\n          wallColor,\r\n          floorColor\r\n        );\r\n        imgData.SetPixels(\r\n          (i + iOffset) * dimension,\r\n          (j + jOffset) * dimension,\r\n          cellImgData\r\n        );\r\n      }\r\n    }\r\n\r\n    imgData.Transpose();\r\n    imgData.FlipOverX();\r\n\r\n    return imgData;\r\n  }\r\n}\r\n","export class Random {\r\n  seed: number;\r\n  private i: number = 0;\r\n\r\n  constructor(seed: number) {\r\n    this.seed = seed;\r\n  }\r\n\r\n  GetInt(max: number) {\r\n    return Math.floor(this.mulberry32() * max);\r\n  }\r\n\r\n  GetIntInRange(min: number, max: number) {\r\n    return Math.floor(this.mulberry32() * (max - min)) + min;\r\n  }\r\n\r\n  private mulberry32(): number {\r\n    this.i++;\r\n    let t: number = (this.seed + this.i) ^ 0x6d2b79f5;\r\n    t = Math.imul(t ^ (t >>> 15), t | 1);\r\n    t ^= t + Math.imul(t ^ (t >>> 7), t | 61);\r\n    return ((t ^ (t >>> 14)) >>> 0) / 4294967296;\r\n  }\r\n}\r\n","import { Cell } from '../maze-parts/cell';\r\nimport { Grid } from '../maze-parts/grid';\r\nimport { Image } from '../../image-utils/image';\r\nimport { Random } from '../utils/random';\r\n\r\nexport class GeneratorData {\r\n  [key: string]: any;\r\n  height: number;\r\n  width: number;\r\n  numCellSides: number;\r\n  seed: number;\r\n  grid!: Grid;\r\n  weave: number;\r\n  cullDeadEnds: number;\r\n  generator: number;\r\n\r\n  constructor() {\r\n    this.generator = 1;\r\n    this.width = 10;\r\n    this.height = 10;\r\n    this.numCellSides = 4;\r\n    this.seed = 1337;\r\n    this.weave = 0;\r\n    this.cullDeadEnds = 0;\r\n  }\r\n}\r\n\r\nexport class Generator {\r\n  baseProps: GeneratorData;\r\n  grid!: Grid;\r\n  random!: Random;\r\n\r\n  constructor(baseProps: GeneratorData) {\r\n    this.baseProps = baseProps;\r\n    if (\r\n      baseProps.cullDeadEnds >\r\n      this.baseProps.width * this.baseProps.height - 1\r\n    ) {\r\n      baseProps.cullDeadEnds = this.baseProps.width * this.baseProps.height - 1;\r\n    }\r\n  }\r\n\r\n  RunGenerator(): void {\r\n    this.random = new Random(this.baseProps.seed);\r\n    this.grid = new Grid(\r\n      this.baseProps.width,\r\n      this.baseProps.height,\r\n      this.baseProps.numCellSides\r\n    );\r\n    this.grid.InitializeGrid();\r\n\r\n    this.Generate();\r\n    this.Weave();\r\n    this.RemoveDeadEnds();\r\n  }\r\n\r\n  protected Generate(): void {}\r\n\r\n  protected Weave(): void {\r\n    if (this.baseProps.weave > 0) {\r\n      let mapCells: Cell[] = [];\r\n      for (let i: number = 0; i < this.baseProps.width; i++) {\r\n        for (let j: number = 0; j < this.baseProps.height; j++) {\r\n          if (\r\n            !this.grid.cells[i][j].masked &&\r\n            this.grid.cells[i][j].CanTunnel()\r\n          ) {\r\n            mapCells.push(this.grid.cells[i][j]);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (mapCells.length > 0) {\r\n        for (let i: number = 0; i < mapCells.length; i++) {\r\n          if (mapCells[i].CanTunnel()) {\r\n            if (this.baseProps.weave >= this.random.GetInt(100)) {\r\n              this.chooseTunnelDirection(mapCells[i]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private chooseTunnelDirection(currentCell: Cell): void {\r\n    let directions: number[] = [];\r\n    for (let i: number = 0; i < currentCell.numCellSides; i++) {\r\n      if (currentCell.CanTunnelDirection(i)) {\r\n        directions.push(i);\r\n      }\r\n    }\r\n\r\n    this.tunnelCells(\r\n      currentCell,\r\n      directions[this.random.GetInt(directions.length)]\r\n    );\r\n  }\r\n\r\n  private tunnelCells(currentCell: Cell, direction: number): void {\r\n    let nearCell: Cell = currentCell.adjacentCells[direction] as Cell;\r\n    let farCell: Cell = nearCell.adjacentCells[direction] as Cell;\r\n\r\n    nearCell.underCell = new Cell(\r\n      nearCell.x,\r\n      nearCell.y,\r\n      nearCell.numCellSides\r\n    );\r\n    nearCell.underCell.overCell = nearCell;\r\n\r\n    currentCell.SetWallAndStairs(direction, false, true, false);\r\n\r\n    nearCell.underCell.SetWallAndStairs(direction, false, false, true);\r\n    nearCell.underCell.SetWallAndStairs(\r\n      (direction + 2) % 4,\r\n      false,\r\n      false,\r\n      true\r\n    );\r\n    nearCell.underCell.SetWallAndStairs(\r\n      (direction + 1) % 4,\r\n      true,\r\n      false,\r\n      false\r\n    );\r\n    nearCell.underCell.SetWallAndStairs(\r\n      (direction + 3) % 4,\r\n      true,\r\n      false,\r\n      false\r\n    );\r\n\r\n    farCell.SetWallAndStairs((direction + 2) % 4, false, true, false);\r\n\r\n    nearCell.SetWallAndStairs((direction + 1) % 4, false, true, false);\r\n    nearCell.SetWallAndStairs((direction + 3) % 4, false, true, false);\r\n\r\n    nearCell.adjacentCells[(direction + 3) % 4]?.SetWallAndStairs(\r\n      (direction + 1) % 4,\r\n      false,\r\n      false,\r\n      true\r\n    );\r\n    nearCell.adjacentCells[(direction + 1) % 4]?.SetWallAndStairs(\r\n      (direction + 3) % 4,\r\n      false,\r\n      false,\r\n      true\r\n    );\r\n  }\r\n\r\n  protected RemoveDeadEnds(): void {\r\n    if (this.baseProps.cullDeadEnds > 0) {\r\n      let mapCells: Cell[] = [];\r\n      for (let i: number = 0; i < this.baseProps.width; i++) {\r\n        for (let j: number = 0; j < this.baseProps.height; j++) {\r\n          if (!this.grid.cells[i][j].masked) {\r\n            mapCells.push(this.grid.cells[i][j]);\r\n          }\r\n        }\r\n      }\r\n\r\n      let numProcessed: number = 0;\r\n      let currentCell: Cell;\r\n      let nextCell: Cell;\r\n      let direction: number = 0;\r\n      do {\r\n        currentCell = mapCells.filter(\r\n          (a) => a.walls.filter((b) => b.isWall).length === 3\r\n        )[\r\n          this.random.GetInt(\r\n            mapCells.filter((a) => a.walls.filter((b) => b.isWall).length === 3)\r\n              .length\r\n          )\r\n        ];\r\n\r\n        direction = currentCell.walls.filter((a) => !a.isWall)[0].direction;\r\n        nextCell = currentCell.walls[direction].isStairsDown\r\n          ? ((currentCell.adjacentCells[direction] as Cell).underCell as Cell)\r\n          : (currentCell.adjacentCells[direction] as Cell);\r\n\r\n        currentCell.SetWallAndStairs(direction, true, false, false);\r\n        nextCell.SetWallAndStairs((direction + 2) % 4, true, false, false);\r\n\r\n        numProcessed++;\r\n      } while (\r\n        numProcessed < this.baseProps.cullDeadEnds &&\r\n        mapCells.filter((a) => a.walls.filter((b) => b.isWall).length === 3)\r\n          .length > 0\r\n      );\r\n\r\n      if (mapCells.filter((a) => a.underCell !== undefined).length > 0) {\r\n        mapCells\r\n          .filter((a) => a.underCell !== undefined)\r\n          .forEach((a) => {\r\n            if (\r\n              a.walls.filter((b) => b.isWall).length !== 2 ||\r\n              (a.underCell as Cell).walls.filter((b) => b.isWall).length !== 2\r\n            ) {\r\n              for (let k: number = 0; k < a.numCellSides; k++) {\r\n                (a.underCell as Cell).SetWallAndStairs(k, true, false, false);\r\n                (a.adjacentCells[k] as Cell).SetWallAndStairs(\r\n                  (k + 2) % 4,\r\n                  true,\r\n                  false,\r\n                  false\r\n                );\r\n              }\r\n              a.underCell = undefined;\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  protected MergeCells(currentCell: Cell, nextCell: Cell | undefined): void {\r\n    if (this.baseProps.numCellSides === 4) {\r\n      if (\r\n        currentCell.adjacentCells[0] !== undefined &&\r\n        currentCell.adjacentCells[0]?.x === nextCell?.x &&\r\n        currentCell.adjacentCells[0]?.y === nextCell?.y\r\n      ) {\r\n        currentCell.SetWall(0, false);\r\n        nextCell.SetWall(2, false);\r\n      } else if (\r\n        currentCell.adjacentCells[1] !== undefined &&\r\n        currentCell.adjacentCells[1]?.x === nextCell?.x &&\r\n        currentCell.adjacentCells[1]?.y === nextCell?.y\r\n      ) {\r\n        currentCell.SetWall(1, false);\r\n        nextCell.SetWall(3, false);\r\n      } else if (\r\n        currentCell.adjacentCells[2] !== undefined &&\r\n        currentCell.adjacentCells[2]?.x === nextCell?.x &&\r\n        currentCell.adjacentCells[2]?.y === nextCell?.y\r\n      ) {\r\n        currentCell.SetWall(2, false);\r\n        nextCell.SetWall(0, false);\r\n      } else if (\r\n        currentCell.adjacentCells[3] !== undefined &&\r\n        currentCell.adjacentCells[3]?.x === nextCell?.x &&\r\n        currentCell.adjacentCells[3]?.y === nextCell?.y\r\n      ) {\r\n        currentCell.SetWall(3, false);\r\n        nextCell.SetWall(1, false);\r\n      }\r\n    }\r\n  }\r\n\r\n  Display(dimension: number): Image {\r\n    return this.grid.Display(dimension);\r\n  }\r\n}\r\n","import { Cell } from '../maze-parts/cell';\r\nimport { Generator, GeneratorData } from './generator';\r\n\r\nexport class AldousBroderData {\r\n  [key: string]: any;\r\n  setStartPosition: boolean;\r\n  startPosX: number;\r\n  startPosY: number;\r\n\r\n  //Directional bias can be immplemented using either the cardinal directions\r\n  // or the direction to turn\r\n  directionBias: 'Cardinal' | 'Turn';\r\n  northChance: number;\r\n  eastChance: number;\r\n  southChance: number;\r\n  westChance: number;\r\n\r\n  forwardChance: number;\r\n  leftChance: number;\r\n  rightChance: number;\r\n  backwardChance: number; //Allowed because we aren't forced to not choose a previously visited cell\r\n\r\n  constructor() {\r\n    this.setStartPosition = false;\r\n    this.startPosX = 0;\r\n    this.startPosY = 0;\r\n\r\n    this.setVisitedStartPosition = false;\r\n    this.startVisitedPosX = 0;\r\n    this.startVisitedPosY = 0;\r\n\r\n    this.directionBias = 'Cardinal';\r\n    this.northChance = 25;\r\n    this.eastChance = 25;\r\n    this.southChance = 25;\r\n    this.westChance = 25;\r\n\r\n    this.forwardChance = 25;\r\n    this.leftChance = 25;\r\n    this.rightChance = 25;\r\n    this.backwardChance = 25;\r\n  }\r\n}\r\n\r\nexport class AldousBroder extends Generator {\r\n  props: AldousBroderData;\r\n\r\n  constructor(baseProps: GeneratorData, props: AldousBroderData) {\r\n    super(baseProps);\r\n    this.props = props;\r\n  }\r\n\r\n  Generate(): void {\r\n    let adjacentCount: number = 0;\r\n    let mapCells: Cell[] = [];\r\n    let currentCell: Cell;\r\n    let nextCell: Cell | undefined;\r\n    let previousCell: Cell | undefined;\r\n\r\n    for (let i: number = 0; i < this.baseProps.width; i++) {\r\n      for (let j: number = 0; j < this.baseProps.height; j++) {\r\n        if (!this.grid.cells[i][j].masked) {\r\n          mapCells.push(this.grid.cells[i][j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.props.setStartPosition &&\r\n      mapCells.some(\r\n        (a) => a.x === this.props.startPosX && a.y === this.props.startPosY\r\n      )\r\n    ) {\r\n      currentCell = mapCells.filter(\r\n        (a) => a.x === this.props.startPosX && a.y === this.props.startPosY\r\n      )[0];\r\n    } else {\r\n      currentCell = mapCells[this.random.GetInt(mapCells.length)];\r\n    }\r\n\r\n    do {\r\n      currentCell.visited = true;\r\n      nextCell = this.pickNextCell(currentCell, previousCell);\r\n      if (!nextCell?.visited) {\r\n        this.MergeCells(currentCell, nextCell);\r\n      }\r\n      previousCell = currentCell;\r\n      currentCell = nextCell as Cell;\r\n      nextCell = undefined;\r\n    } while (mapCells.some((a) => !a.visited));\r\n  }\r\n\r\n  private pickNextCell(\r\n    currentCell: Cell,\r\n    previousCell: Cell | undefined\r\n  ): Cell {\r\n    let nextCell: Cell;\r\n    let randomMax: number = 0;\r\n\r\n    const adjacentCells = currentCell.adjacentCells.filter(\r\n      (a) => a !== undefined\r\n    );\r\n\r\n    if (this.props.directionBias === 'Cardinal') {\r\n      if (previousCell !== undefined) {\r\n        let northMax = 0;\r\n        let eastMax = 0;\r\n        let southMax = 0;\r\n        let westMax = 0;\r\n        if (currentCell.adjacentCells[0] !== undefined) {\r\n          northMax = this.props.northChance - 1;\r\n          randomMax += this.props.northChance;\r\n        }\r\n        if (currentCell.adjacentCells[1] !== undefined) {\r\n          eastMax = randomMax + this.props.eastChance - 1;\r\n          randomMax += this.props.eastChance;\r\n        }\r\n        if (currentCell.adjacentCells[2] !== undefined) {\r\n          southMax = randomMax + this.props.southChance - 1;\r\n          randomMax += this.props.southChance;\r\n        }\r\n        if (currentCell.adjacentCells[3] !== undefined) {\r\n          westMax = randomMax + this.props.westChance - 1;\r\n          randomMax += this.props.westChance;\r\n        }\r\n\r\n        let randomValue = this.random.GetInt(randomMax);\r\n\r\n        if (northMax > 0 && randomValue <= northMax) {\r\n          nextCell = currentCell.adjacentCells[0] as Cell;\r\n        } else if (\r\n          eastMax > northMax &&\r\n          (northMax === 0 || randomValue > northMax) &&\r\n          randomValue <= eastMax\r\n        ) {\r\n          nextCell = currentCell.adjacentCells[1] as Cell;\r\n        } else if (\r\n          southMax > eastMax &&\r\n          (eastMax === 0 || randomValue > eastMax) &&\r\n          randomValue <= southMax\r\n        ) {\r\n          nextCell = currentCell.adjacentCells[2] as Cell;\r\n        } else {\r\n          nextCell = currentCell.adjacentCells[3] as Cell;\r\n        }\r\n      } else {\r\n        nextCell = adjacentCells[\r\n          this.random.GetInt(adjacentCells.length)\r\n        ] as Cell;\r\n      }\r\n    } else {\r\n      if (previousCell !== undefined) {\r\n        let previousCellIndex = currentCell.adjacentCells.indexOf(previousCell);\r\n        let forwardIndex = (previousCellIndex + 2) % 4;\r\n        let forwardMax = 0;\r\n        let leftIndex = (previousCellIndex + 1) % 4;\r\n        let leftMax = 0;\r\n        let rightIndex = (previousCellIndex + 3) % 4;\r\n        let rightMax = 0;\r\n        let backwardIndex = previousCellIndex;\r\n        let backwardMax = 0;\r\n\r\n        if (currentCell.adjacentCells[forwardIndex] !== undefined) {\r\n          forwardMax = this.props.forwardChance - 1;\r\n          randomMax += this.props.forwardChance;\r\n        }\r\n        if (currentCell.adjacentCells[leftIndex] !== undefined) {\r\n          leftMax = randomMax + this.props.leftChance - 1;\r\n          randomMax += this.props.leftChance;\r\n        }\r\n        if (currentCell.adjacentCells[rightIndex] !== undefined) {\r\n          rightMax = randomMax + this.props.rightChance - 1;\r\n          randomMax += this.props.rightChance;\r\n        }\r\n        if (currentCell.adjacentCells[backwardIndex] !== undefined) {\r\n          backwardMax = randomMax + this.props.backwardChance - 1;\r\n          randomMax += this.props.backwardChance;\r\n        }\r\n\r\n        let randomValue = this.random.GetInt(randomMax);\r\n\r\n        if (forwardMax > 0 && randomValue <= forwardMax) {\r\n          nextCell = currentCell.adjacentCells[forwardIndex] as Cell;\r\n        } else if (\r\n          leftMax > forwardMax &&\r\n          (forwardMax === 0 || randomValue > forwardMax) &&\r\n          randomValue <= leftMax\r\n        ) {\r\n          nextCell = currentCell.adjacentCells[leftIndex] as Cell;\r\n        } else if (\r\n          rightMax > leftMax &&\r\n          (leftMax === 0 || randomValue > leftMax) &&\r\n          randomValue <= rightMax\r\n        ) {\r\n          nextCell = currentCell.adjacentCells[rightIndex] as Cell;\r\n        } else {\r\n          nextCell = currentCell.adjacentCells[backwardIndex] as Cell;\r\n        }\r\n      } else {\r\n        nextCell = adjacentCells[\r\n          this.random.GetInt(adjacentCells.length)\r\n        ] as Cell;\r\n      }\r\n    }\r\n\r\n    return nextCell;\r\n  }\r\n}\r\n","import { Generator, GeneratorData } from './generator';\r\n\r\nexport class BinaryTreeData {\r\n  [key: string]: any;\r\n  direction: number; //1 = NE, 2 = SE, 3 = SW, 4 = NW\r\n  chanceVertical: number; //1 - 99\r\n\r\n  constructor() {\r\n    this.direction = 1;\r\n    this.chanceVertical = 50;\r\n  }\r\n}\r\n\r\nexport class BinaryTree extends Generator {\r\n  props: BinaryTreeData;\r\n\r\n  constructor(baseProps: GeneratorData, props: BinaryTreeData) {\r\n    super(baseProps);\r\n    this.props = props;\r\n  }\r\n\r\n  Generate(): void {\r\n    let randResult: number = 0;\r\n    const verticalCell: number =\r\n      this.props.direction === 1 || this.props.direction === 4 ? 0 : 2;\r\n    const horizontalCell: number =\r\n      this.props.direction === 1 || this.props.direction === 2 ? 1 : 3;\r\n\r\n    for (let i: number = 0; i < this.baseProps.width; i++) {\r\n      for (let j: number = 0; j < this.baseProps.height; j++) {\r\n        if (this.baseProps.numCellSides === 4) {\r\n          if (\r\n            this.grid.cells[i][j]?.adjacentCells[verticalCell] !== undefined &&\r\n            this.grid.cells[i][j]?.adjacentCells[horizontalCell] !== undefined\r\n          ) {\r\n            randResult = this.random.GetInt(100);\r\n            if (randResult < this.props.chanceVertical) {\r\n              this.MergeCells(\r\n                this.grid.cells[i][j],\r\n                this.grid.cells[i][j].adjacentCells[verticalCell]\r\n              );\r\n            } else {\r\n              this.MergeCells(\r\n                this.grid.cells[i][j],\r\n                this.grid.cells[i][j].adjacentCells[horizontalCell]\r\n              );\r\n            }\r\n          } else if (\r\n            this.grid.cells[i][j]?.adjacentCells[verticalCell] !== undefined\r\n          ) {\r\n            this.MergeCells(\r\n              this.grid.cells[i][j],\r\n              this.grid.cells[i][j].adjacentCells[verticalCell]\r\n            );\r\n          } else if (\r\n            this.grid.cells[i][j]?.adjacentCells[horizontalCell] !== undefined\r\n          ) {\r\n            this.MergeCells(\r\n              this.grid.cells[i][j],\r\n              this.grid.cells[i][j].adjacentCells[horizontalCell]\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Cell } from '../maze-parts/cell';\r\nimport { Generator, GeneratorData } from './generator';\r\n\r\nexport class GrowingTreeData {\r\n  [key: string]: any;\r\n  setStartPosition: boolean;\r\n  startPosX: number;\r\n  startPosY: number;\r\n  treeGrammar: string;\r\n\r\n  //Directional bias can be immplemented using either the cardinal directions\r\n  // or the direction to turn\r\n  directionBias: 'Cardinal' | 'Turn';\r\n  northChance: number;\r\n  eastChance: number;\r\n  southChance: number;\r\n  westChance: number;\r\n\r\n  forwardChance: number;\r\n  leftChance: number;\r\n  rightChance: number;\r\n\r\n  constructor() {\r\n    this.setStartPosition = false;\r\n    this.startPosX = 0;\r\n    this.startPosY = 0;\r\n    this.treeGrammar = 'R';\r\n\r\n    this.directionBias = 'Cardinal';\r\n    this.northChance = 25;\r\n    this.eastChance = 25;\r\n    this.southChance = 25;\r\n    this.westChance = 25;\r\n\r\n    this.forwardChance = 34;\r\n    this.leftChance = 33;\r\n    this.rightChance = 33;\r\n  }\r\n}\r\n\r\nexport class GrowingTree extends Generator {\r\n  props: GrowingTreeData;\r\n\r\n  constructor(baseProps: GeneratorData, props: GrowingTreeData) {\r\n    super(baseProps);\r\n    this.props = props;\r\n  }\r\n\r\n  Generate(): void {\r\n    let mapCells: Cell[] = [];\r\n    let usedCells: Cell[] = [];\r\n    let currentCell: Cell;\r\n    let nextCell: Cell | undefined;\r\n    let pickCount: number;\r\n    let grammarPosition: number = 0;\r\n    let firstCell: Cell;\r\n\r\n    for (let i: number = 0; i < this.baseProps.width; i++) {\r\n      for (let j: number = 0; j < this.baseProps.height; j++) {\r\n        if (!this.grid.cells[i][j].masked) {\r\n          mapCells.push(this.grid.cells[i][j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.props.setStartPosition &&\r\n      mapCells.some(\r\n        (a) =>\r\n          a.x.toString() === this.props.startPosX.toString() &&\r\n          a.y.toString() === this.props.startPosY.toString()\r\n      )\r\n    ) {\r\n      currentCell = mapCells.filter(\r\n        (a) =>\r\n          a.x.toString() === this.props.startPosX.toString() &&\r\n          a.y.toString() === this.props.startPosY.toString()\r\n      )[0];\r\n    } else {\r\n      currentCell = mapCells[this.random.GetInt(mapCells.length)];\r\n    }\r\n    firstCell = currentCell;\r\n    currentCell.visited = true;\r\n    usedCells.push(currentCell);\r\n    do {\r\n      do {\r\n        pickCount = usedCells.filter((a) =>\r\n          a.adjacentCells.some((b) => b !== undefined && !b.visited)\r\n        ).length;\r\n\r\n        //First\r\n        if (this.props.treeGrammar[grammarPosition] === 'F') {\r\n          currentCell = usedCells.filter((a) =>\r\n            a.adjacentCells.some((b) => b !== undefined && !b.visited)\r\n          )[0];\r\n        }\r\n        //Last\r\n        else if (this.props.treeGrammar[grammarPosition] === 'L') {\r\n          currentCell = usedCells.filter((a) =>\r\n            a.adjacentCells.some((b) => b !== undefined && !b.visited)\r\n          )[pickCount - 1];\r\n        } //Fallthrough for case R (Random)\r\n        else {\r\n          currentCell = usedCells.filter((a) =>\r\n            a.adjacentCells.some((b) => b !== undefined && !b.visited)\r\n          )[this.random.GetInt(pickCount)];\r\n        }\r\n      } while (\r\n        !currentCell.adjacentCells.some((a) => a !== undefined && !a.visited)\r\n      );\r\n\r\n      let cellIndex: number = -1;\r\n      let cellDist: number = 9999;\r\n      for (let i: number = 0; i < currentCell.numCellSides; i++) {\r\n        if (\r\n          currentCell.adjacentCells[i] !== undefined &&\r\n          (currentCell.adjacentCells[i] as Cell).visited\r\n        ) {\r\n          if (cellIndex === -1) {\r\n            cellIndex = i;\r\n            cellDist =\r\n              Math.pow(\r\n                (currentCell.adjacentCells[i] as Cell).x - firstCell.x,\r\n                2\r\n              ) +\r\n              Math.pow(\r\n                (currentCell.adjacentCells[i] as Cell).y - firstCell.y,\r\n                2\r\n              );\r\n          } else {\r\n            let newCellDist: number =\r\n              Math.pow(\r\n                (currentCell.adjacentCells[i] as Cell).x - firstCell.x,\r\n                2\r\n              ) +\r\n              Math.pow(\r\n                (currentCell.adjacentCells[i] as Cell).y - firstCell.y,\r\n                2\r\n              );\r\n            if (newCellDist < cellDist) {\r\n              cellDist = newCellDist;\r\n              cellIndex = i;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      nextCell = this.pickNextCell(\r\n        currentCell,\r\n        currentCell.adjacentCells[cellIndex]\r\n      );\r\n\r\n      grammarPosition = (grammarPosition + 1) % this.props.treeGrammar.length;\r\n\r\n      (nextCell as Cell).visited = true;\r\n      this.MergeCells(currentCell, nextCell);\r\n      usedCells.push(nextCell as Cell);\r\n    } while (mapCells.some((a) => !a.visited));\r\n  }\r\n\r\n  private pickNextCell(\r\n    currentCell: Cell,\r\n    previousCell: Cell | undefined\r\n  ): Cell {\r\n    let nextCell: Cell;\r\n    let randomMax: number = 0;\r\n    const adjacentCells = currentCell.adjacentCells.filter(\r\n      (a) => a !== undefined && !a.visited\r\n    );\r\n\r\n    if (this.props.directionBias === 'Cardinal') {\r\n      if (adjacentCells.length === 1) {\r\n        nextCell = adjacentCells[0] as Cell;\r\n      } else if (previousCell !== undefined) {\r\n        let northMax = 0;\r\n        let eastMax = 0;\r\n        let southMax = 0;\r\n        let westMax = 0;\r\n\r\n        if (\r\n          currentCell.adjacentCells[0] !== undefined &&\r\n          !(currentCell.adjacentCells[0] as Cell).visited\r\n        ) {\r\n          northMax = this.props.northChance - 1;\r\n          randomMax += this.props.northChance;\r\n        }\r\n        if (\r\n          currentCell.adjacentCells[1] !== undefined &&\r\n          !(currentCell.adjacentCells[1] as Cell).visited\r\n        ) {\r\n          eastMax = randomMax + this.props.eastChance - 1;\r\n          randomMax += this.props.eastChance;\r\n        }\r\n        if (\r\n          currentCell.adjacentCells[2] !== undefined &&\r\n          !(currentCell.adjacentCells[2] as Cell).visited\r\n        ) {\r\n          southMax = randomMax + this.props.southChance - 1;\r\n          randomMax += this.props.southChance;\r\n        }\r\n        if (\r\n          currentCell.adjacentCells[3] !== undefined &&\r\n          !(currentCell.adjacentCells[3] as Cell).visited\r\n        ) {\r\n          westMax = randomMax + this.props.westChance - 1;\r\n          randomMax += this.props.westChance;\r\n        }\r\n\r\n        let randomValue = this.random.GetInt(randomMax);\r\n\r\n        if (northMax > 0 && randomValue <= northMax) {\r\n          nextCell = currentCell.adjacentCells[0] as Cell;\r\n        } else if (\r\n          eastMax > northMax &&\r\n          (northMax === 0 || randomValue > northMax) &&\r\n          randomValue <= eastMax\r\n        ) {\r\n          nextCell = currentCell.adjacentCells[1] as Cell;\r\n        } else if (\r\n          southMax > eastMax &&\r\n          (eastMax === 0 || randomValue > eastMax) &&\r\n          randomValue <= southMax\r\n        ) {\r\n          nextCell = currentCell.adjacentCells[2] as Cell;\r\n        } else {\r\n          nextCell = currentCell.adjacentCells[3] as Cell;\r\n        }\r\n      } else {\r\n        nextCell = adjacentCells[\r\n          this.random.GetInt(adjacentCells.length)\r\n        ] as Cell;\r\n      }\r\n    } else {\r\n      if (adjacentCells.length === 1) {\r\n        nextCell = adjacentCells[0] as Cell;\r\n      } else if (previousCell !== undefined) {\r\n        let previousCellIndex = currentCell.adjacentCells.indexOf(previousCell);\r\n        let forwardIndex = (previousCellIndex + 2) % 4;\r\n        let forwardMax = 0;\r\n        let leftIndex = (previousCellIndex + 1) % 4;\r\n        let leftMax = 0;\r\n        let rightIndex = (previousCellIndex + 3) % 4;\r\n        let rightMax = 0;\r\n\r\n        if (\r\n          currentCell.adjacentCells[forwardIndex] !== undefined &&\r\n          !(currentCell.adjacentCells[forwardIndex] as Cell).visited\r\n        ) {\r\n          forwardMax = this.props.forwardChance - 1;\r\n          randomMax += this.props.forwardChance;\r\n        }\r\n        if (\r\n          currentCell.adjacentCells[leftIndex] !== undefined &&\r\n          !(currentCell.adjacentCells[leftIndex] as Cell).visited\r\n        ) {\r\n          leftMax = randomMax + this.props.leftChance - 1;\r\n          randomMax += this.props.leftChance;\r\n        }\r\n        if (\r\n          currentCell.adjacentCells[rightIndex] !== undefined &&\r\n          !(currentCell.adjacentCells[rightIndex] as Cell).visited\r\n        ) {\r\n          rightMax = randomMax + this.props.rightChance - 1;\r\n\r\n          randomMax += this.props.rightChance;\r\n        }\r\n\r\n        let randomValue = this.random.GetInt(randomMax);\r\n\r\n        if (forwardMax > 0 && randomValue <= forwardMax) {\r\n          nextCell = currentCell.adjacentCells[forwardIndex] as Cell;\r\n        } else if (\r\n          leftMax > forwardMax &&\r\n          (forwardMax === 0 || randomValue > forwardMax) &&\r\n          randomValue <= leftMax\r\n        ) {\r\n          nextCell = currentCell.adjacentCells[leftIndex] as Cell;\r\n        } /*if (\r\n          (leftMax === 0 || randomValue > leftMax) &&\r\n          randomValue <= rightMax\r\n        ) */ else {\r\n          nextCell = currentCell.adjacentCells[rightIndex] as Cell;\r\n        }\r\n      } else {\r\n        nextCell = adjacentCells[\r\n          this.random.GetInt(adjacentCells.length)\r\n        ] as Cell;\r\n      }\r\n    }\r\n\r\n    return nextCell;\r\n  }\r\n}\r\n","import { Cell } from '../maze-parts/cell';\r\nimport { Generator, GeneratorData } from './generator';\r\n\r\nexport class HuntAndKillData {\r\n  [key: string]: any;\r\n  setStartPosition: boolean;\r\n  startPosX: number;\r\n  startPosY: number;\r\n\r\n  //Directional bias can be immplemented using either the cardinal directions\r\n  // or the direction to turn\r\n  directionBias: 'Cardinal' | 'Turn';\r\n  northChance: number;\r\n  eastChance: number;\r\n  southChance: number;\r\n  westChance: number;\r\n\r\n  forwardChance: number;\r\n  leftChance: number;\r\n  rightChance: number;\r\n  backwardChance: number; //Allowed because we aren't forced to not choose a previously visited cell\r\n\r\n  //LRTB - Left to Right, then Top to Bottom\r\n  //RLTB - Right to Left, then Top to Bottom\r\n  //LRBT - Left to Right, then Bottom to Top\r\n  //RLBT - Right to Left, then Bottom to Top\r\n  //TBLR - Top to Bottom, then Left to Right\r\n  //BTLR - Bottom to Top, then Left to Right\r\n  //TBRL - Top to Bottom, then Right to Left\r\n  //BTRL - Bottom to Top, then Right to Left\r\n  //R - Random\r\n  searchPattern: 'LRTB' | 'RLTB' | 'LRBT' | 'RLBT' | 'TBLR' | 'BTLR' | 'TBRL' | 'BTRL' | 'R';\r\n\r\n  constructor() {\r\n    this.setStartPosition = false;\r\n    this.startPosX = 0;\r\n    this.startPosY = 0;\r\n\r\n    this.directionBias = 'Cardinal';\r\n    this.northChance = 25;\r\n    this.eastChance = 25;\r\n    this.southChance = 25;\r\n    this.westChance = 25;\r\n\r\n    this.forwardChance = 25;\r\n    this.leftChance = 25;\r\n    this.rightChance = 25;\r\n    this.backwardChance = 25;\r\n\r\n    this.searchPattern = 'R';\r\n  }\r\n}\r\n\r\nexport class HuntAndKill extends Generator {\r\n  props: HuntAndKillData;\r\n\r\n  constructor(baseProps: GeneratorData, props: HuntAndKillData) {\r\n    super(baseProps);\r\n    this.props = props;\r\n  }\r\n\r\n  Generate(): void {\r\n    let mapCells: Cell[] = [];\r\n    let currentCell: Cell | undefined;\r\n    let nextCell: Cell | undefined;\r\n    let previousCell: Cell | undefined;\r\n\r\n    for (let i: number = 0; i < this.baseProps.width; i++) {\r\n      for (let j: number = 0; j < this.baseProps.height; j++) {\r\n        if (!this.grid.cells[i][j].masked) {\r\n          mapCells.push(this.grid.cells[i][j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.props.setStartPosition &&\r\n      mapCells.some((a) => a.x === this.props.startPosX && a.y === this.props.startPosY)\r\n    ) {\r\n      currentCell = mapCells.filter((a) => a.x === this.props.startPosX && a.y === this.props.startPosY)[0];\r\n    } else {\r\n      currentCell = mapCells[this.random.GetInt(mapCells.length)];\r\n    }\r\n\r\n    currentCell.visited = true;\r\n\r\n    do {\r\n      nextCell = this.pickNextCell(currentCell as Cell, previousCell);\r\n\r\n      if (!nextCell.visited) {\r\n        previousCell = currentCell;\r\n        this.MergeCells(currentCell as Cell, nextCell);\r\n        currentCell = nextCell;\r\n        currentCell.visited = true;\r\n      } else {\r\n        currentCell = undefined;\r\n\r\n        if (this.props.searchPattern === 'R') {\r\n          let cellsToChooseFrom = mapCells.filter(\r\n            (a) => !a.visited && a.adjacentCells.some((b) => b !== undefined && b.visited)\r\n          );\r\n          currentCell = cellsToChooseFrom[this.random.GetInt(cellsToChooseFrom.length)];\r\n\r\n          previousCell = undefined;\r\n\r\n          this.MergeCells(\r\n            currentCell as Cell,\r\n            (currentCell as Cell).adjacentCells.filter((a) => a !== undefined && a.visited)[0]\r\n          );\r\n          (currentCell as Cell).visited = true;\r\n        } else {\r\n          let iIncrement = -1;\r\n          let jIncrement = -1;\r\n\r\n          let i = this.baseProps.width - 1;\r\n          let j = this.baseProps.height - 1;\r\n\r\n          let iStart = this.baseProps.width - 1;\r\n          let jStart = this.baseProps.height - 1;\r\n\r\n          let iEnd = 0;\r\n          let jEnd = 0;\r\n\r\n          switch (this.props.searchPattern) {\r\n            case 'LRTB':\r\n            case 'TBLR':\r\n              i = 0;\r\n              j = this.baseProps.height - 1;\r\n              iIncrement = 1;\r\n              jIncrement = -1;\r\n              iStart = i;\r\n              jStart = j;\r\n              iEnd = this.baseProps.width - 1;\r\n              jEnd = 0;\r\n              break;\r\n            case 'RLTB':\r\n            case 'TBRL':\r\n              i = this.baseProps.width - 1;\r\n              j = this.baseProps.height - 1;\r\n              iIncrement = -1;\r\n              jIncrement = -1;\r\n              iStart = i;\r\n              jStart = j;\r\n              iEnd = 0;\r\n              jEnd = 0;\r\n              break;\r\n            case 'LRBT':\r\n            case 'BTLR':\r\n              i = 0;\r\n              j = 0;\r\n              iIncrement = 1;\r\n              jIncrement = 1;\r\n              iStart = i;\r\n              jStart = j;\r\n              iEnd = 0;\r\n              jEnd = 0;\r\n              break;\r\n            case 'RLBT':\r\n            case 'BTRL':\r\n              i = this.baseProps.width - 1;\r\n              j = 0;\r\n              iIncrement = -1;\r\n              jIncrement = 1;\r\n              iStart = i;\r\n              jStart = j;\r\n              iEnd = 0;\r\n              jEnd = this.baseProps.height - 1;\r\n              break;\r\n          }\r\n\r\n          if (\r\n            this.props.searchPattern === 'LRTB' ||\r\n            this.props.searchPattern === 'RLTB' ||\r\n            this.props.searchPattern === 'LRBT' ||\r\n            this.props.searchPattern === 'RLBT'\r\n          ) {\r\n            do {\r\n              i = iStart;\r\n              do {\r\n                if (\r\n                  !this.grid.cells[i][j].masked &&\r\n                  !this.grid.cells[i][j].visited &&\r\n                  this.grid.cells[i][j].adjacentCells.some((a) => a !== undefined && a.visited)\r\n                ) {\r\n                  currentCell = this.grid.cells[i][j];\r\n                }\r\n                i += iIncrement;\r\n              } while (currentCell === undefined && i * iIncrement <= iEnd * iIncrement);\r\n              j += jIncrement;\r\n            } while (currentCell === undefined && j * jIncrement <= jEnd * jIncrement);\r\n          } else {\r\n            do {\r\n              j = jStart;\r\n              do {\r\n                if (\r\n                  !this.grid.cells[i][j].masked &&\r\n                  !this.grid.cells[i][j].visited &&\r\n                  this.grid.cells[i][j].adjacentCells.some((a) => a !== undefined && a.visited)\r\n                ) {\r\n                  currentCell = this.grid.cells[i][j];\r\n                  alert(currentCell.ToString());\r\n                }\r\n                j += jIncrement;\r\n              } while (currentCell === undefined && j * jIncrement <= jEnd * jIncrement);\r\n              i += iIncrement;\r\n            } while (currentCell === undefined && i * iIncrement <= iEnd * iIncrement);\r\n          }\r\n\r\n          previousCell = undefined;\r\n\r\n          this.MergeCells(\r\n            currentCell as Cell,\r\n            (currentCell as Cell).adjacentCells.filter((a) => a !== undefined && a.visited)[0]\r\n          );\r\n          (currentCell as Cell).visited = true;\r\n        }\r\n      }\r\n    } while (mapCells.some((a) => !a.visited));\r\n  }\r\n\r\n  private pickNextCell(currentCell: Cell, previousCell: Cell | undefined): Cell {\r\n    let nextCell: Cell;\r\n    let randomMax: number = 0;\r\n\r\n    const adjacentCells = currentCell.adjacentCells.filter((a) => a !== undefined);\r\n\r\n    if (this.props.directionBias === 'Cardinal') {\r\n      if (previousCell !== undefined) {\r\n        let northMax = 0;\r\n        let eastMax = 0;\r\n        let southMax = 0;\r\n        let westMax = 0;\r\n        if (currentCell.adjacentCells[0] !== undefined) {\r\n          northMax = this.props.northChance - 1;\r\n          randomMax += this.props.northChance;\r\n        }\r\n        if (currentCell.adjacentCells[1] !== undefined) {\r\n          eastMax = randomMax + this.props.eastChance - 1;\r\n          randomMax += this.props.eastChance;\r\n        }\r\n        if (currentCell.adjacentCells[2] !== undefined) {\r\n          southMax = randomMax + this.props.southChance - 1;\r\n          randomMax += this.props.southChance;\r\n        }\r\n        if (currentCell.adjacentCells[3] !== undefined) {\r\n          westMax = randomMax + this.props.westChance - 1;\r\n          randomMax += this.props.westChance;\r\n        }\r\n\r\n        let randomValue = this.random.GetInt(randomMax);\r\n\r\n        if (northMax > 0 && randomValue <= northMax) {\r\n          nextCell = currentCell.adjacentCells[0] as Cell;\r\n        } else if (eastMax > northMax && (northMax === 0 || randomValue > northMax) && randomValue <= eastMax) {\r\n          nextCell = currentCell.adjacentCells[1] as Cell;\r\n        } else if (southMax > eastMax && (eastMax === 0 || randomValue > eastMax) && randomValue <= southMax) {\r\n          nextCell = currentCell.adjacentCells[2] as Cell;\r\n        } else {\r\n          nextCell = currentCell.adjacentCells[3] as Cell;\r\n        }\r\n      } else {\r\n        nextCell = adjacentCells[this.random.GetInt(adjacentCells.length)] as Cell;\r\n      }\r\n    } else {\r\n      if (previousCell !== undefined) {\r\n        let previousCellIndex = currentCell.adjacentCells.indexOf(previousCell);\r\n        let forwardIndex = (previousCellIndex + 2) % 4;\r\n        let forwardMax = 0;\r\n        let leftIndex = (previousCellIndex + 1) % 4;\r\n        let leftMax = 0;\r\n        let rightIndex = (previousCellIndex + 3) % 4;\r\n        let rightMax = 0;\r\n        let backwardIndex = previousCellIndex;\r\n        let backwardMax = 0;\r\n\r\n        if (currentCell.adjacentCells[forwardIndex] !== undefined) {\r\n          forwardMax = this.props.forwardChance - 1;\r\n          randomMax += this.props.forwardChance;\r\n        }\r\n        if (currentCell.adjacentCells[leftIndex] !== undefined) {\r\n          leftMax = randomMax + this.props.leftChance - 1;\r\n          randomMax += this.props.leftChance;\r\n        }\r\n        if (currentCell.adjacentCells[rightIndex] !== undefined) {\r\n          rightMax = randomMax + this.props.rightChance - 1;\r\n          randomMax += this.props.rightChance;\r\n        }\r\n        if (currentCell.adjacentCells[backwardIndex] !== undefined) {\r\n          backwardMax = randomMax + this.props.backwardChance - 1;\r\n          randomMax += this.props.backwardChance;\r\n        }\r\n\r\n        let randomValue = this.random.GetInt(randomMax);\r\n\r\n        if (forwardMax > 0 && randomValue <= forwardMax) {\r\n          nextCell = currentCell.adjacentCells[forwardIndex] as Cell;\r\n        } else if (leftMax > forwardMax && (forwardMax === 0 || randomValue > forwardMax) && randomValue <= leftMax) {\r\n          nextCell = currentCell.adjacentCells[leftIndex] as Cell;\r\n        } else if (rightMax > leftMax && (leftMax === 0 || randomValue > leftMax) && randomValue <= rightMax) {\r\n          nextCell = currentCell.adjacentCells[rightIndex] as Cell;\r\n        } else {\r\n          nextCell = currentCell.adjacentCells[backwardIndex] as Cell;\r\n        }\r\n      } else {\r\n        nextCell = adjacentCells[this.random.GetInt(adjacentCells.length)] as Cell;\r\n      }\r\n    }\r\n\r\n    return nextCell;\r\n  }\r\n}\r\n","import { Cell } from '../';\r\nimport { Generator, GeneratorData } from './generator';\r\n\r\nexport class KruskalData {\r\n  direction: number; //1 = NE, 2 = SE, 3 = SW, 4 = NW\r\n  chanceVertical: number; //1 - 99\r\n\r\n  constructor() {\r\n    this.direction = 1;\r\n    this.chanceVertical = 50;\r\n  }\r\n}\r\n\r\nexport class Kruskal extends Generator {\r\n  props: KruskalData;\r\n\r\n  constructor(baseProps: GeneratorData, props: KruskalData) {\r\n    super(baseProps);\r\n    this.props = props;\r\n  }\r\n\r\n  Generate(): void {\r\n    let mapCells: Cell[] = [];\r\n    let currentCell: Cell | undefined;\r\n    let nextCell: Cell | undefined;\r\n    let currentWeight: number = 1;\r\n    let nextSetNumber: number = 1;\r\n    let direction: number;\r\n\r\n    for (let i: number = 0; i < this.baseProps.width; i++) {\r\n      for (let j: number = 0; j < this.baseProps.height; j++) {\r\n        if (!this.grid.cells[i][j].masked) {\r\n          for (let k: number = 0; k < this.grid.numCellSides; k++) {\r\n            if (\r\n              this.grid.cells[i][j].adjacentCells[k] !== undefined &&\r\n              this.grid.cells[i][j].walls[k].weight === 0\r\n            ) {\r\n              let weight = this.random.GetIntInRange(1, 100);\r\n              this.grid.cells[i][j].walls[k].weight = weight;\r\n              (this.grid.cells[i][j].adjacentCells[k] as Cell).walls[\r\n                (k + this.grid.numCellSides / 2) % this.grid.numCellSides\r\n              ].weight = weight;\r\n            }\r\n          }\r\n          mapCells.push(this.grid.cells[i][j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    do {\r\n      while (\r\n        mapCells.some((a) => a.walls.some((b) => b.weight === currentWeight))\r\n      ) {\r\n        currentCell = mapCells.filter((a) =>\r\n          a.walls.some((b) => b.weight === currentWeight)\r\n        )[0];\r\n\r\n        nextCell = currentCell.adjacentCells.filter(\r\n          (a) =>\r\n            a !== undefined &&\r\n            a.walls.some(\r\n              (b) =>\r\n                b.weight === currentWeight &&\r\n                b.direction ===\r\n                  ((currentCell as Cell).GetWeightDirection(currentWeight) +\r\n                    this.grid.numCellSides / 2) %\r\n                    this.grid.numCellSides\r\n            )\r\n        )[0];\r\n\r\n        if (currentCell.set === 0 || (nextCell as Cell).set === 0) {\r\n          if (currentCell.set === 0 && (nextCell as Cell).set === 0) {\r\n            currentCell.set = nextSetNumber;\r\n            (nextCell as Cell).set = nextSetNumber;\r\n            nextSetNumber++;\r\n          } else if (currentCell.set === 0 && (nextCell as Cell).set > 0) {\r\n            currentCell.set = (nextCell as Cell).set;\r\n          } else if (currentCell.set > 0 && (nextCell as Cell).set === 0) {\r\n            (nextCell as Cell).set = currentCell.set;\r\n          }\r\n\r\n          this.MergeCells(currentCell, nextCell);\r\n          direction = currentCell.GetCellDirection(nextCell as Cell);\r\n\r\n          currentCell.walls[direction].weight = 9999;\r\n          (nextCell as Cell).walls[\r\n            (direction + this.grid.numCellSides / 2) % this.grid.numCellSides\r\n          ].weight = 9999;\r\n        } else {\r\n          if (currentCell.set === (nextCell as Cell).set) {\r\n            direction = currentCell.GetCellDirection(nextCell as Cell);\r\n\r\n            currentCell.walls[direction].weight = 9999;\r\n            (nextCell as Cell).walls[\r\n              (direction + this.grid.numCellSides / 2) % this.grid.numCellSides\r\n            ].weight = 9999;\r\n          } else {\r\n            this.MergeCells(currentCell, nextCell);\r\n\r\n            direction = currentCell.GetCellDirection(nextCell as Cell);\r\n\r\n            currentCell.walls[direction].weight = 9999;\r\n            (nextCell as Cell).walls[\r\n              (direction + this.grid.numCellSides / 2) % this.grid.numCellSides\r\n            ].weight = 9999;\r\n\r\n            let filterSet: number, mapSet: number;\r\n            if (currentCell.set < (nextCell as Cell).set) {\r\n              filterSet = (nextCell as Cell).set;\r\n              mapSet = (currentCell as Cell).set;\r\n              mapCells\r\n                .filter((a) => a.set === filterSet)\r\n                .forEach((a) => (a.set = mapSet));\r\n            } else {\r\n              filterSet = (currentCell as Cell).set;\r\n              mapSet = (nextCell as Cell).set;\r\n              mapCells\r\n                .filter((a) => a.set === filterSet)\r\n                .forEach((a) => (a.set = mapSet));\r\n            }\r\n          }\r\n        }\r\n      }\r\n      currentWeight++;\r\n    } while (mapCells.filter((a) => a.set === 1).length < mapCells.length);\r\n  }\r\n}\r\n","import { Cell } from '../';\r\nimport { Generator, GeneratorData } from './generator';\r\nimport { Wall } from '../';\r\n\r\nexport class PrimData {\r\n  direction: number; //1 = NE, 2 = SE, 3 = SW, 4 = NW\r\n  chanceVertical: number; //1 - 99\r\n\r\n  constructor() {\r\n    this.direction = 1;\r\n    this.chanceVertical = 50;\r\n  }\r\n}\r\n\r\nexport class Prim extends Generator {\r\n  props: PrimData;\r\n\r\n  constructor(baseProps: GeneratorData, props: PrimData) {\r\n    super(baseProps);\r\n    this.props = props;\r\n  }\r\n\r\n  Generate(): void {\r\n    let mapCells: Cell[] = [];\r\n    let usedCells: Cell[] = [];\r\n    let currentCell: Cell | undefined;\r\n    let nextCell: Cell | undefined;\r\n    let direction: number = 0;\r\n\r\n    for (let i: number = 0; i < this.baseProps.width; i++) {\r\n      for (let j: number = 0; j < this.baseProps.height; j++) {\r\n        if (!this.grid.cells[i][j].masked) {\r\n          for (let k: number = 0; k < this.grid.numCellSides; k++) {\r\n            if (\r\n              this.grid.cells[i][j].adjacentCells[k] !== undefined &&\r\n              this.grid.cells[i][j].walls[k].weight === 0\r\n            ) {\r\n              let weight = this.random.GetIntInRange(1, 100);\r\n              this.grid.cells[i][j].walls[k].weight = weight;\r\n              (this.grid.cells[i][j].adjacentCells[k] as Cell).walls[\r\n                (k + this.grid.numCellSides / 2) % this.grid.numCellSides\r\n              ].weight = weight;\r\n            }\r\n          }\r\n          mapCells.push(this.grid.cells[i][j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    currentCell = mapCells[this.random.GetInt(mapCells.length)];\r\n    usedCells.push(currentCell);\r\n    do {\r\n      currentCell = usedCells[0];\r\n      for (let i: number = 0; i < usedCells.length; i++) {\r\n        if (\r\n          usedCells[i].x !== currentCell.x ||\r\n          usedCells[i].y !== currentCell.y\r\n        ) {\r\n          if (\r\n            usedCells[i].walls\r\n              .filter((a) => a.weight > 0)\r\n              .sort((a, b) => this.compareWeights(a, b))[0].weight <\r\n            currentCell.walls\r\n              .filter((a) => a.weight > 0)\r\n              .sort((a, b) => this.compareWeights(a, b))[0].weight\r\n          ) {\r\n            currentCell = usedCells[i];\r\n          }\r\n        }\r\n      }\r\n\r\n      direction = currentCell.GetWeightDirection(\r\n        currentCell.walls\r\n          .filter((a) => a.weight > 0)\r\n          .sort((a, b) => this.compareWeights(a, b))[0].weight\r\n      );\r\n\r\n      nextCell = currentCell.adjacentCells[direction];\r\n      if (usedCells.indexOf(nextCell as Cell) === -1) {\r\n        this.MergeCells(currentCell, nextCell);\r\n        usedCells.push(nextCell as Cell);\r\n      }\r\n\r\n      currentCell.walls[direction].weight = 9999;\r\n      (nextCell as Cell).walls[\r\n        (direction + this.grid.numCellSides / 2) % this.grid.numCellSides\r\n      ].weight = 9999;\r\n    } while (usedCells.length < mapCells.length);\r\n  }\r\n\r\n  private compareWeights(a: Wall, b: Wall) {\r\n    return a.weight === b.weight ? 0 : a.weight < b.weight ? -1 : 1;\r\n  }\r\n}\r\n","import { Cell } from '../';\r\nimport { Generator, GeneratorData } from './generator';\r\n\r\nexport class RecursiveBacktrackerData {\r\n  [key: string]: any;\r\n  setStartPosition: boolean;\r\n  startPosX: number;\r\n  startPosY: number;\r\n\r\n  //Directional bias can be immplemented using either the cardinal directions\r\n  // or the direction to turn\r\n  directionBias: 'Cardinal' | 'Turn';\r\n  northChance: number;\r\n  eastChance: number;\r\n  southChance: number;\r\n  westChance: number;\r\n\r\n  forwardChance: number;\r\n  leftChance: number;\r\n  rightChance: number;\r\n\r\n  constructor() {\r\n    this.setStartPosition = false;\r\n    this.startPosX = 0;\r\n    this.startPosY = 0;\r\n\r\n    this.directionBias = 'Cardinal';\r\n    this.northChance = 25;\r\n    this.eastChance = 25;\r\n    this.southChance = 25;\r\n    this.westChance = 25;\r\n\r\n    this.forwardChance = 34;\r\n    this.leftChance = 33;\r\n    this.rightChance = 33;\r\n  }\r\n}\r\n\r\nexport class RecursiveBacktracker extends Generator {\r\n  props: RecursiveBacktrackerData;\r\n\r\n  constructor(baseProps: GeneratorData, props: RecursiveBacktrackerData) {\r\n    super(baseProps);\r\n    this.props = props;\r\n  }\r\n\r\n  Generate(): void {\r\n    let mapCells: Cell[] = [];\r\n    let currentSet: Cell[] = [];\r\n    let currentCell: Cell;\r\n    let nextCell: Cell | undefined;\r\n    let previousCell: Cell | undefined = undefined;\r\n    let adjacentCount: number = 0;\r\n\r\n    for (let i: number = 0; i < this.baseProps.width; i++) {\r\n      for (let j: number = 0; j < this.baseProps.height; j++) {\r\n        if (!this.grid.cells[i][j].masked) {\r\n          mapCells.push(this.grid.cells[i][j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.props.setStartPosition &&\r\n      mapCells.some(\r\n        (a) => a.x === this.props.startPosX && a.y === this.props.startPosY\r\n      )\r\n    ) {\r\n      currentCell = mapCells.filter(\r\n        (a) => a.x === this.props.startPosX && a.y === this.props.startPosY\r\n      )[0];\r\n    } else {\r\n      currentCell = mapCells[this.random.GetInt(mapCells.length)];\r\n    }\r\n\r\n    currentCell.visited = true;\r\n    currentSet.push(currentCell);\r\n\r\n    do {\r\n      adjacentCount = (currentCell as Cell).adjacentCells.filter(\r\n        (a) => a !== undefined && !a.visited\r\n      ).length;\r\n\r\n      if (adjacentCount === 0) {\r\n        currentSet.pop();\r\n        currentCell = currentSet[currentSet.length - 1];\r\n        if (currentSet.length > 1) {\r\n          previousCell = currentSet[currentSet.length - 2];\r\n        } else {\r\n          previousCell = undefined;\r\n        }\r\n      } else {\r\n        nextCell = this.pickNextCell(currentCell, previousCell);\r\n        this.MergeCells(currentCell, nextCell);\r\n        previousCell = currentCell;\r\n        currentCell = nextCell;\r\n        currentCell.visited = true;\r\n        currentSet.push(currentCell);\r\n      }\r\n    } while (currentSet.length > 0);\r\n  }\r\n\r\n  private pickNextCell(\r\n    currentCell: Cell,\r\n    previousCell: Cell | undefined\r\n  ): Cell {\r\n    let nextCell: Cell;\r\n    let randomMax: number = 0;\r\n    const adjacentCells = currentCell.adjacentCells.filter(\r\n      (a) => a !== undefined && !a.visited\r\n    );\r\n\r\n    if (this.props.directionBias === 'Cardinal') {\r\n      if (adjacentCells.length === 1) {\r\n        nextCell = adjacentCells[0] as Cell;\r\n      } else if (previousCell !== undefined) {\r\n        let northMax = 0;\r\n        let eastMax = 0;\r\n        let southMax = 0;\r\n        let westMax = 0;\r\n\r\n        if (\r\n          currentCell.adjacentCells[0] !== undefined &&\r\n          !(currentCell.adjacentCells[0] as Cell).visited\r\n        ) {\r\n          northMax = this.props.northChance - 1;\r\n          randomMax += this.props.northChance;\r\n        }\r\n        if (\r\n          currentCell.adjacentCells[1] !== undefined &&\r\n          !(currentCell.adjacentCells[1] as Cell).visited\r\n        ) {\r\n          eastMax = randomMax + this.props.eastChance - 1;\r\n          randomMax += this.props.eastChance;\r\n        }\r\n        if (\r\n          currentCell.adjacentCells[2] !== undefined &&\r\n          !(currentCell.adjacentCells[2] as Cell).visited\r\n        ) {\r\n          southMax = randomMax + this.props.southChance - 1;\r\n          randomMax += this.props.southChance;\r\n        }\r\n        if (\r\n          currentCell.adjacentCells[3] !== undefined &&\r\n          !(currentCell.adjacentCells[3] as Cell).visited\r\n        ) {\r\n          westMax = randomMax + this.props.westChance - 1;\r\n          randomMax += this.props.westChance;\r\n        }\r\n\r\n        let randomValue = this.random.GetInt(randomMax);\r\n\r\n        if (northMax > 0 && randomValue <= northMax) {\r\n          nextCell = currentCell.adjacentCells[0] as Cell;\r\n        } else if (\r\n          eastMax > northMax &&\r\n          (northMax === 0 || randomValue > northMax) &&\r\n          randomValue <= eastMax\r\n        ) {\r\n          nextCell = currentCell.adjacentCells[1] as Cell;\r\n        } else if (\r\n          southMax > eastMax &&\r\n          (eastMax === 0 || randomValue > eastMax) &&\r\n          randomValue <= southMax\r\n        ) {\r\n          nextCell = currentCell.adjacentCells[2] as Cell;\r\n        } else {\r\n          nextCell = currentCell.adjacentCells[3] as Cell;\r\n        }\r\n      } else {\r\n        nextCell = adjacentCells[\r\n          this.random.GetInt(adjacentCells.length)\r\n        ] as Cell;\r\n      }\r\n    } else {\r\n      if (adjacentCells.length === 1) {\r\n        nextCell = adjacentCells[0] as Cell;\r\n      } else if (previousCell !== undefined) {\r\n        let previousCellIndex = currentCell.adjacentCells.indexOf(previousCell);\r\n        let forwardIndex = (previousCellIndex + 2) % 4;\r\n        let forwardMax = 0;\r\n        let leftIndex = (previousCellIndex + 1) % 4;\r\n        let leftMax = 0;\r\n        let rightIndex = (previousCellIndex + 3) % 4;\r\n        let rightMax = 0;\r\n\r\n        if (\r\n          currentCell.adjacentCells[forwardIndex] !== undefined &&\r\n          !(currentCell.adjacentCells[forwardIndex] as Cell).visited\r\n        ) {\r\n          forwardMax = this.props.forwardChance - 1;\r\n          randomMax += this.props.forwardChance;\r\n        }\r\n        if (\r\n          currentCell.adjacentCells[leftIndex] !== undefined &&\r\n          !(currentCell.adjacentCells[leftIndex] as Cell).visited\r\n        ) {\r\n          leftMax = randomMax + this.props.leftChance - 1;\r\n          randomMax += this.props.leftChance;\r\n        }\r\n        if (\r\n          currentCell.adjacentCells[rightIndex] !== undefined &&\r\n          !(currentCell.adjacentCells[rightIndex] as Cell).visited\r\n        ) {\r\n          rightMax = randomMax + this.props.rightChance - 1;\r\n\r\n          randomMax += this.props.rightChance;\r\n        }\r\n\r\n        let randomValue = this.random.GetInt(randomMax);\r\n\r\n        if (forwardMax > 0 && randomValue <= forwardMax) {\r\n          nextCell = currentCell.adjacentCells[forwardIndex] as Cell;\r\n        } else if (\r\n          leftMax > forwardMax &&\r\n          (forwardMax === 0 || randomValue > forwardMax) &&\r\n          randomValue <= leftMax\r\n        ) {\r\n          nextCell = currentCell.adjacentCells[leftIndex] as Cell;\r\n        } /*if (\r\n          (leftMax === 0 || randomValue > leftMax) &&\r\n          randomValue <= rightMax\r\n        ) */ else {\r\n          nextCell = currentCell.adjacentCells[rightIndex] as Cell;\r\n        }\r\n      } else {\r\n        nextCell = adjacentCells[\r\n          this.random.GetInt(adjacentCells.length)\r\n        ] as Cell;\r\n      }\r\n    }\r\n\r\n    return nextCell;\r\n  }\r\n}\r\n","import { Generator, GeneratorData } from './generator';\r\nimport { Cell } from '../';\r\n\r\nexport class SidewinderData {\r\n  [key: string]: any;\r\n  sideDirection: number;\r\n  windDirection: number;\r\n  chanceWind: number; //1 - 99\r\n\r\n  constructor() {\r\n    this.sideDirection = 1;\r\n    this.windDirection = 0;\r\n    this.chanceWind = 50;\r\n  }\r\n}\r\n\r\nexport class Sidewinder extends Generator {\r\n  props: SidewinderData;\r\n\r\n  constructor(baseProps: GeneratorData, props: SidewinderData) {\r\n    super(baseProps);\r\n    this.props = props;\r\n  }\r\n\r\n  Generate(): void {\r\n    let cellRun: Cell[] = [];\r\n    let randResult: number = 0;\r\n\r\n    let iStart = 0,\r\n      iMax = this.baseProps.width,\r\n      iStep = 1;\r\n    let jStart = 0,\r\n      jMax = this.baseProps.height,\r\n      jStep = 1;\r\n\r\n    switch (this.props.sideDirection) {\r\n      case 0:\r\n        jStart = 0;\r\n        jMax = this.baseProps.height;\r\n        jStep = 1;\r\n        break;\r\n      case 1:\r\n        iStart = 0;\r\n        iMax = this.baseProps.width;\r\n        iStep = 1;\r\n        break;\r\n      case 2:\r\n        jStart = this.baseProps.height - 1;\r\n        jMax = 0;\r\n        jStep = -1;\r\n        break;\r\n      case 3:\r\n        iStart = this.baseProps.width - 1;\r\n        iMax = 0;\r\n        iStep = -1;\r\n        break;\r\n    }\r\n\r\n    switch (this.props.windDirection) {\r\n      case 0:\r\n        jStart = 0;\r\n        jMax = this.baseProps.height;\r\n        jStep = 1;\r\n        break;\r\n      case 1:\r\n        iStart = 0;\r\n        iMax = this.baseProps.width;\r\n        iStep = 1;\r\n        break;\r\n      case 2:\r\n        jStart = this.baseProps.height - 1;\r\n        jMax = 0;\r\n        jStep = -1;\r\n        break;\r\n      case 3:\r\n        iStart = this.baseProps.width - 1;\r\n        iMax = 0;\r\n        iStep = -1;\r\n        break;\r\n    }\r\n\r\n    //E and W\r\n    if (this.props.sideDirection === 1 || this.props.sideDirection === 3) {\r\n      for (\r\n        let j: number = jStart;\r\n        jStart === 0 ? j < jMax : j >= jMax;\r\n        j += jStep\r\n      ) {\r\n        for (\r\n          let i: number = iStart;\r\n          iStart === 0 ? i < iMax : i >= iMax;\r\n          i += iStep\r\n        ) {\r\n          if (this.baseProps.numCellSides === 4) {\r\n            cellRun.push(this.grid.cells[i][j]);\r\n            randResult = this.random.GetInt(100);\r\n\r\n            if (\r\n              this.grid.cells[i][j].adjacentCells[this.props.sideDirection] ===\r\n                undefined ||\r\n              (this.grid.cells[i][j].adjacentCells[this.props.windDirection] !==\r\n                undefined &&\r\n                randResult < this.props.chanceWind)\r\n            ) {\r\n              randResult = this.random.GetInt(cellRun.length);\r\n              if (\r\n                cellRun[randResult].adjacentCells[this.props.windDirection] !==\r\n                undefined\r\n              ) {\r\n                this.MergeCells(\r\n                  cellRun[randResult],\r\n                  cellRun[randResult].adjacentCells[this.props.windDirection]\r\n                );\r\n              }\r\n              cellRun = [];\r\n            } else {\r\n              this.MergeCells(\r\n                this.grid.cells[i][j],\r\n                this.grid.cells[i][j].adjacentCells[this.props.sideDirection]\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n      cellRun = [];\r\n    }\r\n\r\n    //N and S\r\n    else {\r\n      for (\r\n        let i: number = iStart;\r\n        iStart === 0 ? i < iMax : i >= iMax;\r\n        i += iStep\r\n      ) {\r\n        for (\r\n          let j: number = jStart;\r\n          jStart === 0 ? j < jMax : j >= jMax;\r\n          j += jStep\r\n        ) {\r\n          if (this.baseProps.numCellSides === 4) {\r\n            cellRun.push(this.grid.cells[i][j]);\r\n            randResult = this.random.GetInt(100);\r\n\r\n            if (\r\n              this.grid.cells[i][j].adjacentCells[this.props.sideDirection] ===\r\n                undefined ||\r\n              (this.grid.cells[i][j].adjacentCells[this.props.windDirection] !==\r\n                undefined &&\r\n                randResult < this.props.chanceWind)\r\n            ) {\r\n              randResult = this.random.GetInt(cellRun.length);\r\n              if (\r\n                cellRun[randResult].adjacentCells[this.props.windDirection] !==\r\n                undefined\r\n              ) {\r\n                this.MergeCells(\r\n                  cellRun[randResult],\r\n                  cellRun[randResult].adjacentCells[this.props.windDirection]\r\n                );\r\n              }\r\n              cellRun = [];\r\n            } else {\r\n              this.MergeCells(\r\n                this.grid.cells[i][j],\r\n                this.grid.cells[i][j].adjacentCells[this.props.sideDirection]\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n      cellRun = [];\r\n    }\r\n  }\r\n}\r\n","import { Cell } from '../';\r\nimport { Generator, GeneratorData } from './generator';\r\n\r\nexport class WilsonData {\r\n  [key: string]: any;\r\n  setStartPosition: boolean;\r\n  startPosX: number;\r\n  startPosY: number;\r\n\r\n  setVisitedStartPosition: boolean;\r\n  startVisitedPosX: number;\r\n  startVisitedPosY: number;\r\n\r\n  //Directional bias can be immplemented using either the cardinal directions\r\n  // or the direction to turn\r\n  directionBias: 'Cardinal' | 'Turn';\r\n  northChance: number;\r\n  eastChance: number;\r\n  southChance: number;\r\n  westChance: number;\r\n\r\n  forwardChance: number;\r\n  leftChance: number;\r\n  rightChance: number;\r\n  backwardChance: number; //Allowed because we aren't forced to not choose a previously visited cell\r\n\r\n  constructor() {\r\n    this.setStartPosition = false;\r\n    this.startPosX = 0;\r\n    this.startPosY = 0;\r\n\r\n    this.setVisitedStartPosition = false;\r\n    this.startVisitedPosX = 0;\r\n    this.startVisitedPosY = 0;\r\n\r\n    this.directionBias = 'Cardinal';\r\n    this.northChance = 25;\r\n    this.eastChance = 25;\r\n    this.southChance = 25;\r\n    this.westChance = 25;\r\n\r\n    this.forwardChance = 25;\r\n    this.leftChance = 25;\r\n    this.rightChance = 25;\r\n    this.backwardChance = 25;\r\n  }\r\n}\r\n\r\nexport class Wilson extends Generator {\r\n  props: WilsonData;\r\n\r\n  constructor(baseProps: GeneratorData, props: WilsonData) {\r\n    super(baseProps);\r\n    this.props = props;\r\n  }\r\n\r\n  Generate(): void {\r\n    let mapCells: Cell[] = [];\r\n    let currentLoop: Cell[] = []; //functions as stack\r\n    let currentCell: Cell;\r\n    let previousCell: Cell | undefined;\r\n    let copyCell: Cell | undefined;\r\n    let firstLoop: boolean = false;\r\n\r\n    for (let i: number = 0; i < this.baseProps.width; i++) {\r\n      for (let j: number = 0; j < this.baseProps.height; j++) {\r\n        if (!this.grid.cells[i][j].masked) {\r\n          mapCells.push(this.grid.cells[i][j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.props.setVisitedStartPosition &&\r\n      mapCells.some(\r\n        (a) =>\r\n          a.x === this.props.startVisitedPosX &&\r\n          a.y === this.props.startVisitedPosY\r\n      )\r\n    ) {\r\n      mapCells.filter(\r\n        (a) =>\r\n          a.x === this.props.startVisitedPosX &&\r\n          a.y === this.props.startVisitedPosY\r\n      )[0].visited = true;\r\n    } else {\r\n      mapCells[this.random.GetInt(mapCells.length)].visited = true;\r\n    }\r\n\r\n    do {\r\n      currentLoop = [];\r\n      if (firstLoop) {\r\n        if (\r\n          this.props.setStartPosition &&\r\n          mapCells.some(\r\n            (a) =>\r\n              a.x === this.props.startPosX &&\r\n              a.y === this.props.startPosY &&\r\n              !a.visited\r\n          )\r\n        ) {\r\n          currentCell = mapCells.filter(\r\n            (a) => a.x === this.props.startPosX && a.y === this.props.startPosY\r\n          )[0];\r\n        } else {\r\n          currentCell = mapCells[this.random.GetInt(mapCells.length)];\r\n        }\r\n      } else {\r\n        let unvisitedCount = mapCells.filter((a) => !a.visited).length;\r\n        currentCell = mapCells.filter((a) => !a.visited)[\r\n          this.random.GetInt(unvisitedCount)\r\n        ];\r\n      }\r\n      currentLoop.push(currentCell);\r\n      while (!currentCell.visited) {\r\n        copyCell = currentCell;\r\n        currentCell = this.pickNextCell(currentCell, previousCell);\r\n        previousCell = copyCell;\r\n        let x = currentCell.x,\r\n          y = currentCell.y;\r\n        if (currentLoop.some((a) => a.x === x && a.y === y)) {\r\n          while (\r\n            currentLoop[currentLoop.length - 1].x !== x ||\r\n            currentLoop[currentLoop.length - 1].y !== y\r\n          ) {\r\n            currentLoop.pop();\r\n          }\r\n          currentCell = currentLoop[currentLoop.length - 1];\r\n          if (currentLoop.length > 1) {\r\n            previousCell = currentLoop[currentLoop.length - 2];\r\n          } else {\r\n            previousCell = undefined;\r\n          }\r\n        } else {\r\n          currentLoop.push(currentCell);\r\n        }\r\n      }\r\n\r\n      for (let i: number = 0; i < currentLoop.length - 1; i++) {\r\n        this.MergeCells(currentLoop[i], currentLoop[i + 1]);\r\n        currentLoop[i].visited = true;\r\n      }\r\n      currentLoop[currentLoop.length - 1].visited = true;\r\n    } while (mapCells.some((a) => !a.visited));\r\n  }\r\n\r\n  private pickNextCell(\r\n    currentCell: Cell,\r\n    previousCell: Cell | undefined\r\n  ): Cell {\r\n    let nextCell: Cell;\r\n    let randomMax: number = 0;\r\n\r\n    const adjacentCells = currentCell.adjacentCells.filter(\r\n      (a) => a !== undefined\r\n    );\r\n\r\n    if (this.props.directionBias === 'Cardinal') {\r\n      if (previousCell !== undefined) {\r\n        let northMax = 0;\r\n        let eastMax = 0;\r\n        let southMax = 0;\r\n        let westMax = 0;\r\n        if (currentCell.adjacentCells[0] !== undefined) {\r\n          northMax = this.props.northChance - 1;\r\n          randomMax += this.props.northChance;\r\n        }\r\n        if (currentCell.adjacentCells[1] !== undefined) {\r\n          eastMax = randomMax + this.props.eastChance - 1;\r\n          randomMax += this.props.eastChance;\r\n        }\r\n        if (currentCell.adjacentCells[2] !== undefined) {\r\n          southMax = randomMax + this.props.southChance - 1;\r\n          randomMax += this.props.southChance;\r\n        }\r\n        if (currentCell.adjacentCells[3] !== undefined) {\r\n          westMax = randomMax + this.props.westChance - 1;\r\n          randomMax += this.props.westChance;\r\n        }\r\n\r\n        let randomValue = this.random.GetInt(randomMax);\r\n\r\n        if (northMax > 0 && randomValue <= northMax) {\r\n          nextCell = currentCell.adjacentCells[0] as Cell;\r\n        } else if (\r\n          eastMax > northMax &&\r\n          (northMax === 0 || randomValue > northMax) &&\r\n          randomValue <= eastMax\r\n        ) {\r\n          nextCell = currentCell.adjacentCells[1] as Cell;\r\n        } else if (\r\n          southMax > eastMax &&\r\n          (eastMax === 0 || randomValue > eastMax) &&\r\n          randomValue <= southMax\r\n        ) {\r\n          nextCell = currentCell.adjacentCells[2] as Cell;\r\n        } else {\r\n          nextCell = currentCell.adjacentCells[3] as Cell;\r\n        }\r\n      } else {\r\n        nextCell = adjacentCells[\r\n          this.random.GetInt(adjacentCells.length)\r\n        ] as Cell;\r\n      }\r\n    } else {\r\n      if (previousCell !== undefined) {\r\n        let previousCellIndex = currentCell.adjacentCells.indexOf(previousCell);\r\n        let forwardIndex = (previousCellIndex + 2) % 4;\r\n        let forwardMax = 0;\r\n        let leftIndex = (previousCellIndex + 1) % 4;\r\n        let leftMax = 0;\r\n        let rightIndex = (previousCellIndex + 3) % 4;\r\n        let rightMax = 0;\r\n        let backwardIndex = previousCellIndex;\r\n        let backwardMax = 0;\r\n\r\n        if (currentCell.adjacentCells[forwardIndex] !== undefined) {\r\n          forwardMax = this.props.forwardChance - 1;\r\n          randomMax += this.props.forwardChance;\r\n        }\r\n        if (currentCell.adjacentCells[leftIndex] !== undefined) {\r\n          leftMax = randomMax + this.props.leftChance - 1;\r\n          randomMax += this.props.leftChance;\r\n        }\r\n        if (currentCell.adjacentCells[rightIndex] !== undefined) {\r\n          rightMax = randomMax + this.props.rightChance - 1;\r\n          randomMax += this.props.rightChance;\r\n        }\r\n        if (currentCell.adjacentCells[backwardIndex] !== undefined) {\r\n          backwardMax = randomMax + this.props.backwardChance - 1;\r\n          randomMax += this.props.backwardChance;\r\n        }\r\n\r\n        let randomValue = this.random.GetInt(randomMax);\r\n\r\n        if (forwardMax > 0 && randomValue <= forwardMax) {\r\n          nextCell = currentCell.adjacentCells[forwardIndex] as Cell;\r\n        } else if (\r\n          leftMax > forwardMax &&\r\n          (forwardMax === 0 || randomValue > forwardMax) &&\r\n          randomValue <= leftMax\r\n        ) {\r\n          nextCell = currentCell.adjacentCells[leftIndex] as Cell;\r\n        } else if (\r\n          rightMax > leftMax &&\r\n          (leftMax === 0 || randomValue > leftMax) &&\r\n          randomValue <= rightMax\r\n        ) {\r\n          nextCell = currentCell.adjacentCells[rightIndex] as Cell;\r\n        } else {\r\n          nextCell = currentCell.adjacentCells[backwardIndex] as Cell;\r\n        }\r\n      } else {\r\n        nextCell = adjacentCells[\r\n          this.random.GetInt(adjacentCells.length)\r\n        ] as Cell;\r\n      }\r\n    }\r\n\r\n    return nextCell;\r\n  }\r\n}\r\n","import { Cell } from '../';\r\nimport { Random } from './random';\r\n\r\nexport class MathUtils {\r\n  public static MaxX(mapCells: Cell[]): number {\r\n    let retVal: number = -Infinity;\r\n    for (let i: number = 0; i < mapCells.length; i++) {\r\n      retVal = mapCells[i].x > retVal ? mapCells[i].x : retVal;\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  public static MinX(mapCells: Cell[]): number {\r\n    let retVal: number = Infinity;\r\n    for (let i: number = 0; i < mapCells.length; i++) {\r\n      retVal = mapCells[i].x < retVal ? mapCells[i].x : retVal;\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  public static MaxY(mapCells: Cell[]): number {\r\n    let retVal: number = -Infinity;\r\n    for (let i: number = 0; i < mapCells.length; i++) {\r\n      retVal = mapCells[i].y > retVal ? mapCells[i].y : retVal;\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  public static MinY(mapCells: Cell[]): number {\r\n    let retVal: number = Infinity;\r\n    for (let i: number = 0; i < mapCells.length; i++) {\r\n      retVal = mapCells[i].y < retVal ? mapCells[i].y : retVal;\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  public static Shuffle<Type>(items: Type[], random: Random): Type[] {\r\n    let n: number = items.length;\r\n    while (n > 1) {\r\n      n--;\r\n      let k: number = random.GetInt(n + 1);\r\n      let item: Type = items[k];\r\n      items[k] = items[n];\r\n      items[n] = item;\r\n    }\r\n    return items;\r\n  }\r\n}\r\n","import { Cell } from '../maze-parts/cell';\r\nimport { Generator, GeneratorData } from './generator';\r\nimport { MathUtils } from '../utils/math';\r\n\r\nexport class EllerData {\r\n  [key: string]: any;\r\n  sidewaysDirection: number;\r\n  verticalDirection: number;\r\n\r\n  chanceMergeSideways: number;\r\n  chanceMergeDown: number;\r\n\r\n  constructor() {\r\n    this.sidewaysDirection = 1;\r\n    this.verticalDirection = 0;\r\n\r\n    this.chanceMergeSideways = 33;\r\n    this.chanceMergeDown = 33;\r\n  }\r\n}\r\n\r\nexport class Eller extends Generator {\r\n  props: EllerData;\r\n\r\n  constructor(baseProps: GeneratorData, props: EllerData) {\r\n    super(baseProps);\r\n    this.props = props;\r\n  }\r\n\r\n  Generate(): void {\r\n    let mapCells: Cell[] = [];\r\n    let currentRow: Cell[] = [];\r\n    let currentRowSet: Cell[] = [];\r\n    let row: number = 0;\r\n    let finalRow: number = 0;\r\n    let currentSet: number = 1;\r\n    let currentRowSets: number[] = [];\r\n    let rowIncrement: number = 0;\r\n\r\n    for (let i: number = 0; i < this.baseProps.width; i++) {\r\n      for (let j: number = 0; j < this.baseProps.height; j++) {\r\n        if (!this.grid.cells[i][j].masked) {\r\n          mapCells.push(this.grid.cells[i][j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    switch (this.props.verticalDirection) {\r\n      case 0:\r\n        row = MathUtils.MinY(mapCells);\r\n        finalRow = MathUtils.MaxY(mapCells);\r\n        rowIncrement = 1;\r\n        break;\r\n      case 1:\r\n        row = MathUtils.MinX(mapCells);\r\n        finalRow = MathUtils.MaxX(mapCells);\r\n        rowIncrement = 1;\r\n        break;\r\n      case 2:\r\n        row = MathUtils.MaxY(mapCells);\r\n        finalRow = MathUtils.MinY(mapCells);\r\n        rowIncrement = -1;\r\n        break;\r\n      case 3:\r\n        row = MathUtils.MaxX(mapCells);\r\n        finalRow = MathUtils.MinX(mapCells);\r\n        rowIncrement = -1;\r\n        break;\r\n    }\r\n\r\n    do {\r\n      currentRow = mapCells.filter((a) => a.y === row);\r\n      currentRow.forEach((a) => {\r\n        if (a.set === 0) {\r\n          a.set = currentSet;\r\n          currentSet++;\r\n        }\r\n      });\r\n\r\n      for (let i: number = 0; i < currentRow.length; i++) {\r\n        if (\r\n          currentRow[i].adjacentCells[this.props.sidewaysDirection] !== undefined &&\r\n          (currentRow[i].adjacentCells[this.props.sidewaysDirection] as Cell).set !== currentRow[i].set\r\n        ) {\r\n          if (this.random.GetInt(100) <= this.props.chanceMergeSideways) {\r\n            this.MergeCells(currentRow[i], currentRow[i].adjacentCells[this.props.sidewaysDirection]);\r\n            currentRowSet = mapCells.filter(\r\n              (a) => a.set === (currentRow[i].adjacentCells[this.props.sidewaysDirection] as Cell).set\r\n            );\r\n            for (let j: number = 0; j < currentRowSet.length; j++) {\r\n              currentRowSet[j].set = currentRow[i].set;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      currentRowSets = [];\r\n      for (let i: number = 0; i < currentRow.length; i++) {\r\n        if (currentRowSets.indexOf(currentRow[i].set) === -1) {\r\n          currentRowSets.push(currentRow[i].set);\r\n        }\r\n      }\r\n\r\n      for (let i: number = 0; i < currentRowSets.length; i++) {\r\n        currentRowSet = currentRow.filter((a) => a.set === currentRowSets[i]);\r\n        let rowMovedSouth: boolean = false;\r\n        for (let j: number = 0; j < currentRowSet.length; j++) {\r\n          if (\r\n            currentRowSet[j].adjacentCells[this.props.verticalDirection] !== undefined &&\r\n            (currentRowSet[j].adjacentCells[this.props.verticalDirection] as Cell).set !== currentRowSet[j].set\r\n          ) {\r\n            if (this.random.GetInt(100) <= this.props.chanceMergeDown) {\r\n              rowMovedSouth = true;\r\n              this.MergeCells(currentRowSet[j], currentRowSet[j].adjacentCells[this.props.verticalDirection]);\r\n              (currentRowSet[j].adjacentCells[this.props.verticalDirection] as Cell).set = currentRowSet[j].set;\r\n            }\r\n          }\r\n        }\r\n        if (!rowMovedSouth) {\r\n          for (let j: number = 0; j < currentRowSet.length; j++) {\r\n            if (\r\n              !rowMovedSouth &&\r\n              currentRowSet[j].adjacentCells[this.props.verticalDirection] !== undefined &&\r\n              (currentRowSet[j].adjacentCells[this.props.verticalDirection] as Cell).set !== currentRowSet[j].set\r\n            ) {\r\n              rowMovedSouth = true;\r\n              this.MergeCells(currentRowSet[j], currentRowSet[j].adjacentCells[this.props.verticalDirection]);\r\n              (currentRowSet[j].adjacentCells[this.props.verticalDirection] as Cell).set = currentRowSet[j].set;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      row += rowIncrement;\r\n    } while (row * rowIncrement <= finalRow * rowIncrement);\r\n\r\n    for (let i: number = 0; i < currentRow.length; i++) {\r\n      if (\r\n        currentRow[i].adjacentCells[this.props.sidewaysDirection] !== undefined &&\r\n        (currentRow[i].adjacentCells[this.props.sidewaysDirection] as Cell).set !== currentRow[i].set\r\n      ) {\r\n        this.MergeCells(currentRow[i], currentRow[i].adjacentCells[this.props.sidewaysDirection]);\r\n        currentRowSet = mapCells.filter(\r\n          (a) => a.set === (currentRow[i].adjacentCells[this.props.sidewaysDirection] as Cell).set\r\n        );\r\n        for (let j: number = 0; j < currentRowSet.length; j++) {\r\n          currentRowSet[j].set = currentRow[i].set;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Cell } from '../maze-parts/cell';\r\nimport { Generator, GeneratorData } from './generator';\r\nimport { MathUtils } from '../utils/math';\r\n\r\nexport class RecursiveSubdivisionData {\r\n  [key: string]: any;\r\n  maxRooms: number;\r\n  maxRoomWidth: number;\r\n  minRoomWidth: number;\r\n  maxRoomHeight: number;\r\n  minRoomHeight: number;\r\n  chanceForRoom: number;\r\n\r\n  constructor() {\r\n    this.maxRooms = 0;\r\n    this.maxRoomWidth = 1;\r\n    this.minRoomWidth = 1;\r\n    this.maxRoomHeight = 1;\r\n    this.minRoomHeight = 1;\r\n    this.chanceForRoom = 0;\r\n  }\r\n}\r\n\r\nexport class RecursiveSubdivision extends Generator {\r\n  props: RecursiveSubdivisionData;\r\n  private numRooms: number;\r\n  constructor(baseProps: GeneratorData, props: RecursiveSubdivisionData) {\r\n    super(baseProps);\r\n    this.props = props;\r\n    this.numRooms = 0;\r\n  }\r\n\r\n  Generate(): void {\r\n    let mapCells: Cell[] = [];\r\n    this.numRooms = 0;\r\n    let startX: number, startY: number, startWidth: number, startHeight: number;\r\n\r\n    for (let i: number = 0; i < this.baseProps.width; i++) {\r\n      for (let j: number = 0; j < this.baseProps.height; j++) {\r\n        if (!this.grid.cells[i][j].masked) {\r\n          mapCells.push(this.grid.cells[i][j]);\r\n          for (let k: number = 0; k < this.grid.numCellSides; k++) {\r\n            if (this.grid.cells[i][j].adjacentCells[k] !== undefined) {\r\n              this.grid.cells[i][j].SetWall(k, false);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    startX = MathUtils.MinX(mapCells);\r\n    startY = MathUtils.MinY(mapCells);\r\n    startWidth = MathUtils.MaxX(mapCells) - startX + 1;\r\n    startHeight = MathUtils.MaxY(mapCells) - startY + 1;\r\n\r\n    this.divide(mapCells, startX, startY, startHeight, startWidth);\r\n  }\r\n\r\n  private divide(\r\n    mapCells: Cell[],\r\n    row: number,\r\n    column: number,\r\n    height: number,\r\n    width: number\r\n  ): void {\r\n    if (height > 1 || width > 1) {\r\n      let divideContinue: boolean = true;\r\n      if (\r\n        this.props.chanceForRoom > 0 &&\r\n        (this.props.maxRooms === -1 || this.numRooms < this.props.maxRooms) &&\r\n        width >= this.props.minRoomWidth &&\r\n        width <= this.props.maxRoomWidth &&\r\n        height >= this.props.minRoomHeight &&\r\n        height <= this.props.maxRoomHeight\r\n      ) {\r\n        divideContinue = this.random.GetInt(100) >= this.props.chanceForRoom;\r\n      }\r\n      if (divideContinue) {\r\n        if (height > width) {\r\n          this.divideHorizontal(mapCells, row, column, height, width);\r\n        } else {\r\n          this.divideVertical(mapCells, row, column, height, width);\r\n        }\r\n      } else {\r\n        if (height > 1 && width > 1) {\r\n          this.numRooms++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private divideHorizontal(\r\n    mapCells: Cell[],\r\n    row: number,\r\n    column: number,\r\n    height: number,\r\n    width: number\r\n  ): void {\r\n    let divideSouthOf: number = this.random.GetInt(height - 1);\r\n    //alert('south: ' + divideSouthOf);\r\n    let affectedCells: Cell[] = mapCells\r\n      .filter(\r\n        (a) =>\r\n          a.y === row + divideSouthOf && a.x >= column && a.x < column + width\r\n      )\r\n      .sort((a, b) => this.compareElement(a, b, 'x'));\r\n    if (\r\n      affectedCells.length > 0 &&\r\n      affectedCells.some((a) => a.adjacentCells[0] !== undefined)\r\n    ) {\r\n      affectedCells.forEach((a) => {\r\n        if (a.adjacentCells[0] !== undefined) {\r\n          a.SetWall(0, true);\r\n          a.adjacentCells[0].SetWall(2, true);\r\n        }\r\n      });\r\n\r\n      if (row + divideSouthOf < MathUtils.MaxY(mapCells)) {\r\n        let passageCell: number = -1;\r\n        let affectedCellSection: Cell[] = [];\r\n        for (let i: number = 0; i < affectedCells.length; i++) {\r\n          if (\r\n            affectedCellSection.length === 0 ||\r\n            MathUtils.MaxX(affectedCellSection) - affectedCells[i].x === -1\r\n          ) {\r\n            affectedCellSection.push(affectedCells[i]);\r\n          } else {\r\n            if (\r\n              affectedCellSection.some((a) => a.adjacentCells[0] !== undefined)\r\n            ) {\r\n              do {\r\n                passageCell = this.random.GetInt(affectedCellSection.length);\r\n              } while (\r\n                affectedCellSection[passageCell].adjacentCells[0] === undefined\r\n              );\r\n              this.MergeCells(\r\n                affectedCellSection[passageCell],\r\n                affectedCellSection[passageCell].adjacentCells[0]\r\n              );\r\n              affectedCellSection = [];\r\n            }\r\n          }\r\n        }\r\n\r\n        if (affectedCellSection.some((a) => a.adjacentCells[0] !== undefined)) {\r\n          do {\r\n            passageCell = this.random.GetInt(affectedCellSection.length);\r\n          } while (\r\n            affectedCellSection[passageCell].adjacentCells[0] === undefined\r\n          );\r\n          this.MergeCells(\r\n            affectedCellSection[passageCell],\r\n            affectedCellSection[passageCell].adjacentCells[0]\r\n          );\r\n        }\r\n      }\r\n\r\n      this.divide(mapCells, row, column, divideSouthOf + 1, width);\r\n      this.divide(\r\n        mapCells,\r\n        row + divideSouthOf + 1,\r\n        column,\r\n        height - divideSouthOf - 1,\r\n        width\r\n      );\r\n    }\r\n  }\r\n\r\n  private divideVertical(\r\n    mapCells: Cell[],\r\n    row: number,\r\n    column: number,\r\n    height: number,\r\n    width: number\r\n  ): void {\r\n    let divideEastOf: number = this.random.GetInt(width - 1);\r\n    //alert('east: ' + divideEastOf);\r\n    let affectedCells: Cell[] = mapCells\r\n      .filter(\r\n        (a) => a.x === column + divideEastOf && a.y >= row && a.y < row + height\r\n      )\r\n      .sort((a, b) => this.compareElement(a, b, 'y'));\r\n    if (\r\n      affectedCells.length > 0 &&\r\n      affectedCells.some((a) => a.adjacentCells[1] !== undefined)\r\n    ) {\r\n      affectedCells.forEach((a) => {\r\n        if (a.adjacentCells[1] !== undefined) {\r\n          a.SetWall(1, true);\r\n          a.adjacentCells[1].SetWall(3, true);\r\n        }\r\n      });\r\n\r\n      if (column + divideEastOf < MathUtils.MaxX(mapCells)) {\r\n        let passageCell: number = -1;\r\n        let affectedCellSection: Cell[] = [];\r\n        for (let i: number = 0; i < affectedCells.length; i++) {\r\n          if (\r\n            affectedCellSection.length === 0 ||\r\n            MathUtils.MaxY(affectedCellSection) - affectedCells[i].y === -1\r\n          ) {\r\n            affectedCellSection.push(affectedCells[i]);\r\n          } else {\r\n            if (\r\n              affectedCellSection.some((a) => a.adjacentCells[1] !== undefined)\r\n            ) {\r\n              do {\r\n                passageCell = this.random.GetInt(affectedCellSection.length);\r\n              } while (\r\n                affectedCellSection[passageCell].adjacentCells[1] === undefined\r\n              );\r\n              this.MergeCells(\r\n                affectedCellSection[passageCell],\r\n                affectedCellSection[passageCell].adjacentCells[1]\r\n              );\r\n              affectedCellSection = [];\r\n            }\r\n          }\r\n        }\r\n\r\n        if (affectedCellSection.some((a) => a.adjacentCells[1] !== undefined)) {\r\n          do {\r\n            passageCell = this.random.GetInt(affectedCellSection.length);\r\n          } while (\r\n            affectedCellSection[passageCell].adjacentCells[1] === undefined\r\n          );\r\n          this.MergeCells(\r\n            affectedCellSection[passageCell],\r\n            affectedCellSection[passageCell].adjacentCells[1]\r\n          );\r\n        }\r\n      }\r\n\r\n      this.divide(mapCells, row, column, height, divideEastOf + 1);\r\n      this.divide(\r\n        mapCells,\r\n        row,\r\n        column + divideEastOf + 1,\r\n        height,\r\n        width - divideEastOf - 1\r\n      );\r\n    }\r\n  }\r\n\r\n  private compareElement<Type, Key extends keyof Type>(\r\n    a: Type,\r\n    b: Type,\r\n    key: Key\r\n  ): number {\r\n    return a[key] === b[key] ? 0 : a[key] < b[key] ? -1 : 1;\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport { Container, Text, Flex, Center, Wrap, WrapItem, Spacer } from '@chakra-ui/react';\r\nimport { Canvas, StyledButton, Card, CardHeader, CardBody, Paragraph, StyledTabs } from '../../../lib/components';\r\nimport { GeneratorProperties } from './components/generator-properties';\r\nimport { BinaryTreeProperties } from './components/binary-tree-properties';\r\nimport { SidewinderProperties } from './components/sidewinder-properties';\r\nimport { RecursiveBacktrackerProperties } from './components/recursive-backtracker-properties';\r\nimport { GrowingTreeProperties } from './components/growing-tree-properties';\r\nimport { RecursiveSubdivisionProperties } from './components/recursive-subdivision-properties';\r\nimport { AldousBroderProperties } from './components/aldous-broder-properties';\r\nimport { WilsonProperties } from './components/wilson-properties';\r\nimport { HuntAndKillProperties } from './components/hunt-and-kill-properties';\r\nimport { EllerProperties } from './components/eller-properties';\r\n\r\nimport {\r\n  Generator as MazeGenerator,\r\n  GeneratorData,\r\n  BinaryTree,\r\n  BinaryTreeData,\r\n  Sidewinder,\r\n  SidewinderData,\r\n  Image,\r\n  AldousBroder,\r\n  AldousBroderData,\r\n  Wilson,\r\n  WilsonData,\r\n  HuntAndKill,\r\n  HuntAndKillData,\r\n  RecursiveBacktracker,\r\n  RecursiveBacktrackerData,\r\n  Prim,\r\n  PrimData,\r\n  Kruskal,\r\n  KruskalData,\r\n  GrowingTree,\r\n  GrowingTreeData,\r\n  Eller,\r\n  EllerData,\r\n  RecursiveSubdivision,\r\n  RecursiveSubdivisionData,\r\n} from '../../../lib/mazes';\r\n\r\ninterface IGeneratorState {\r\n  imgData: Image;\r\n  generatorData: GeneratorData;\r\n  binaryTree: BinaryTreeData;\r\n  sidewinder: SidewinderData;\r\n  aldousBroder: AldousBroderData;\r\n  wilson: WilsonData;\r\n  huntAndKill: HuntAndKillData;\r\n  recursiveBacktracker: RecursiveBacktrackerData;\r\n  kruskal: KruskalData;\r\n  prim: PrimData;\r\n  growingTree: GrowingTreeData;\r\n  eller: EllerData;\r\n  recursiveSubdivision: RecursiveSubdivisionData;\r\n}\r\n\r\nexport class Generator extends React.Component<any, IGeneratorState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      imgData: new Image(1, 1),\r\n      generatorData: new GeneratorData(),\r\n      binaryTree: new BinaryTreeData(),\r\n      sidewinder: new SidewinderData(),\r\n      aldousBroder: new AldousBroderData(),\r\n      wilson: new WilsonData(),\r\n      huntAndKill: new HuntAndKillData(),\r\n      recursiveBacktracker: new RecursiveBacktrackerData(),\r\n      kruskal: new KruskalData(),\r\n      prim: new PrimData(),\r\n      growingTree: new GrowingTreeData(),\r\n      eller: new EllerData(),\r\n      recursiveSubdivision: new RecursiveSubdivisionData(),\r\n    };\r\n\r\n    this.handleGeneratorDataChange = this.handleGeneratorDataChange.bind(this);\r\n    this.handleBinaryTreeChange = this.handleBinaryTreeChange.bind(this);\r\n    this.handleSidewinderChange = this.handleSidewinderChange.bind(this);\r\n    this.handleRecursiveBacktrackerChange = this.handleRecursiveBacktrackerChange.bind(this);\r\n    this.handleGrowingTreeChange = this.handleGrowingTreeChange.bind(this);\r\n    this.handleRecursiveSubdivisionChange = this.handleRecursiveSubdivisionChange.bind(this);\r\n    this.handleAldousBroderChange = this.handleAldousBroderChange.bind(this);\r\n    this.handleWilsonChange = this.handleWilsonChange.bind(this);\r\n    this.handleHuntAndKillChange = this.handleHuntAndKillChange.bind(this);\r\n    this.handleEllerChange = this.handleEllerChange.bind(this);\r\n  }\r\n\r\n  resetToDefaults = () => {\r\n    let imgData = new Image(1, 1);\r\n    let generatorData = new GeneratorData();\r\n    let binaryTree = new BinaryTreeData();\r\n    let sidewinder = new SidewinderData();\r\n    let aldousBroder = new AldousBroderData();\r\n    let wilson = new WilsonData();\r\n    let huntAndKill = new HuntAndKillData();\r\n    let recursiveBacktracker = new RecursiveBacktrackerData();\r\n    let kruskal = new KruskalData();\r\n    let prim = new PrimData();\r\n    let growingTree = new GrowingTreeData();\r\n    let eller = new EllerData();\r\n    let recursiveSubdivision = new RecursiveSubdivisionData();\r\n\r\n    this.setState({\r\n      imgData: imgData,\r\n      generatorData: generatorData,\r\n      binaryTree: binaryTree,\r\n      sidewinder: sidewinder,\r\n      wilson: wilson,\r\n      aldousBroder: aldousBroder,\r\n      huntAndKill: huntAndKill,\r\n      recursiveBacktracker: recursiveBacktracker,\r\n      prim: prim,\r\n      kruskal: kruskal,\r\n      eller: eller,\r\n      growingTree: growingTree,\r\n      recursiveSubdivision: recursiveSubdivision,\r\n    });\r\n  };\r\n\r\n  generate = () => {\r\n    let maze: MazeGenerator;\r\n    const {\r\n      binaryTree,\r\n      sidewinder,\r\n      aldousBroder,\r\n      wilson,\r\n      huntAndKill,\r\n      recursiveBacktracker,\r\n      kruskal,\r\n      prim,\r\n      growingTree,\r\n      eller,\r\n      recursiveSubdivision,\r\n      generatorData,\r\n    } = this.state;\r\n\r\n    switch (generatorData.generator) {\r\n      case 1:\r\n        maze = new BinaryTree(generatorData, binaryTree);\r\n        break;\r\n      case 2:\r\n        maze = new Sidewinder(generatorData, sidewinder);\r\n        break;\r\n      case 3:\r\n        maze = new AldousBroder(generatorData, aldousBroder);\r\n        break;\r\n      case 4:\r\n        maze = new Wilson(generatorData, wilson);\r\n        break;\r\n      case 5:\r\n        maze = new HuntAndKill(generatorData, huntAndKill);\r\n        break;\r\n      case 6:\r\n        maze = new RecursiveBacktracker(generatorData, recursiveBacktracker);\r\n        break;\r\n      case 7:\r\n        maze = new Kruskal(generatorData, kruskal);\r\n        break;\r\n      case 8:\r\n        maze = new Prim(generatorData, prim);\r\n        break;\r\n      case 9:\r\n        maze = new GrowingTree(generatorData, growingTree);\r\n        break;\r\n      case 10:\r\n        maze = new Eller(generatorData, eller);\r\n        break;\r\n      case 11:\r\n        maze = new RecursiveSubdivision(generatorData, recursiveSubdivision);\r\n        break;\r\n      default:\r\n        maze = new BinaryTree(generatorData, binaryTree);\r\n        break;\r\n    }\r\n\r\n    maze.RunGenerator();\r\n    this.setState({ imgData: maze.Display(32) });\r\n  };\r\n\r\n  handleGeneratorDataChange(fieldName: string, value: number) {\r\n    let { generatorData } = this.state;\r\n    generatorData[fieldName] = value;\r\n    this.setState({ generatorData: generatorData });\r\n  }\r\n\r\n  getGeneratorPropertiesTabName(): string {\r\n    let retVal: string = '';\r\n    switch (this.state.generatorData.generator) {\r\n      case 1:\r\n        retVal = 'Binary Tree';\r\n        break;\r\n      case 2:\r\n        retVal = 'Sidewinder';\r\n        break;\r\n      case 3:\r\n        retVal = 'Aldous-Broder';\r\n        break;\r\n      case 4:\r\n        retVal = \"Wilson's\";\r\n        break;\r\n      case 5:\r\n        retVal = 'Hunt and Kill';\r\n        break;\r\n      case 6:\r\n        retVal = 'Recursive Backtracker';\r\n        break;\r\n      case 7:\r\n        retVal = \"Kruskal's\";\r\n        break;\r\n      case 8:\r\n        retVal = \"Prims's\";\r\n        break;\r\n      case 9:\r\n        retVal = 'Growing Tree';\r\n        break;\r\n      case 10:\r\n        retVal = \"Eller's\";\r\n        break;\r\n      case 11:\r\n        retVal = 'Recursive Subdivision';\r\n        break;\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  handleBinaryTreeChange(fieldName: string, value: number) {\r\n    let { binaryTree } = this.state;\r\n    binaryTree[fieldName] = value;\r\n    this.setState({ binaryTree: binaryTree });\r\n  }\r\n\r\n  handleSidewinderChange(fieldName: string, value: number) {\r\n    let { sidewinder } = this.state;\r\n    sidewinder[fieldName] = value;\r\n    this.setState({ sidewinder: sidewinder });\r\n  }\r\n\r\n  handleRecursiveBacktrackerChange(fieldName: string, value: any) {\r\n    let { recursiveBacktracker } = this.state;\r\n    recursiveBacktracker[fieldName] = value;\r\n    this.setState({ recursiveBacktracker: recursiveBacktracker });\r\n  }\r\n\r\n  handleGrowingTreeChange(fieldName: string, value: any) {\r\n    let { growingTree } = this.state;\r\n    growingTree[fieldName] = value;\r\n    this.setState({ growingTree: growingTree });\r\n  }\r\n\r\n  handleRecursiveSubdivisionChange(fieldName: string, value: number) {\r\n    let { recursiveSubdivision } = this.state;\r\n    recursiveSubdivision[fieldName] = value;\r\n    this.setState({ recursiveSubdivision: recursiveSubdivision });\r\n  }\r\n\r\n  handleAldousBroderChange(fieldName: string, value: any) {\r\n    let { aldousBroder } = this.state;\r\n    aldousBroder[fieldName] = value;\r\n    this.setState({ aldousBroder: aldousBroder });\r\n  }\r\n\r\n  handleWilsonChange(fieldName: string, value: any) {\r\n    let { wilson } = this.state;\r\n    wilson[fieldName] = value;\r\n    this.setState({ recursiveBacktracker: wilson });\r\n  }\r\n\r\n  handleHuntAndKillChange(fieldName: string, value: any) {\r\n    let { huntAndKill } = this.state;\r\n    huntAndKill[fieldName] = value;\r\n    this.setState({ huntAndKill: huntAndKill });\r\n  }\r\n\r\n  handleEllerChange(fieldName: string, value: any) {\r\n    let { eller } = this.state;\r\n    eller[fieldName] = value;\r\n    this.setState({ eller: eller });\r\n  }\r\n\r\n  getGeneratorSpecificPropertiesElement(): JSX.Element {\r\n    let retElement = <></>;\r\n    const { generatorData } = this.state;\r\n\r\n    switch (generatorData.generator) {\r\n      case 1:\r\n        retElement = <BinaryTreeProperties data={this.state.binaryTree} handleChange={this.handleBinaryTreeChange} />;\r\n        break;\r\n      case 2:\r\n        retElement = <SidewinderProperties data={this.state.sidewinder} handleChange={this.handleSidewinderChange} />;\r\n        break;\r\n      case 3:\r\n        retElement = (\r\n          <AldousBroderProperties data={this.state.aldousBroder} handleChange={this.handleAldousBroderChange} />\r\n        );\r\n        break;\r\n      case 4:\r\n        retElement = <WilsonProperties data={this.state.wilson} handleChange={this.handleWilsonChange} />;\r\n        break;\r\n      case 5:\r\n        retElement = (\r\n          <HuntAndKillProperties data={this.state.huntAndKill} handleChange={this.handleHuntAndKillChange} />\r\n        );\r\n        break;\r\n      case 6:\r\n        retElement = (\r\n          <RecursiveBacktrackerProperties\r\n            data={this.state.recursiveBacktracker}\r\n            handleChange={this.handleRecursiveBacktrackerChange}\r\n          />\r\n        );\r\n        break;\r\n      case 9:\r\n        retElement = (\r\n          <GrowingTreeProperties data={this.state.growingTree} handleChange={this.handleGrowingTreeChange} />\r\n        );\r\n        break;\r\n      case 10:\r\n        retElement = <EllerProperties data={this.state.eller} handleChange={this.handleEllerChange} />;\r\n        break;\r\n      case 11:\r\n        retElement = (\r\n          <RecursiveSubdivisionProperties\r\n            data={this.state.recursiveSubdivision}\r\n            handleChange={this.handleRecursiveSubdivisionChange}\r\n          />\r\n        );\r\n        break;\r\n      default:\r\n        retElement = (\r\n          <Wrap>\r\n            <WrapItem>\r\n              <Paragraph fontSize=\"md\">No special properties for this generator... yet.</Paragraph>\r\n            </WrapItem>\r\n          </Wrap>\r\n        );\r\n        break;\r\n    }\r\n\r\n    return retElement;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Card maxW=\"container.lg\" centered>\r\n          <CardHeader>Mazes - Generator</CardHeader>\r\n          <CardBody>\r\n            <Text textAlign=\"left\" padding=\"1em\">\r\n              <StyledTabs\r\n                tabData={[\r\n                  {\r\n                    label: 'General Properties',\r\n                    panel: (\r\n                      <GeneratorProperties\r\n                        data={this.state.generatorData}\r\n                        handleChange={this.handleGeneratorDataChange}\r\n                      />\r\n                    ),\r\n                  },\r\n                  {\r\n                    label: this.getGeneratorPropertiesTabName() + ' Properties',\r\n                    panel: this.getGeneratorSpecificPropertiesElement(),\r\n                  },\r\n                ]}\r\n              />\r\n            </Text>\r\n            <Flex>\r\n              <Spacer />\r\n              <StyledButton onClick={() => this.resetToDefaults()}>Reset to Defaults</StyledButton>\r\n              <Spacer />\r\n              <StyledButton onClick={() => this.generate()}>Generate</StyledButton>\r\n              <Spacer />\r\n            </Flex>\r\n          </CardBody>\r\n        </Card>\r\n        <Card maxW=\"container.lg\" centered visibility={this.state.imgData.width > 1 ? 'initial' : 'hidden'}>\r\n          <CardBody>\r\n            <Container\r\n              width=\"100%\"\r\n              maxHeight=\"512px\"\r\n              textAlign=\"center\"\r\n              overflow=\"scroll\"\r\n              padding=\"1em\"\r\n              css={{\r\n                WebkitOverflowScrolling: 'touch',\r\n                msOverflowStyle: '-ms-autohiding-scrollbar',\r\n              }}\r\n            >\r\n              <Center>\r\n                <Canvas id=\"mazeCanvas\" imgData={this.state.imgData}></Canvas>\r\n              </Center>\r\n            </Container>\r\n          </CardBody>\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport { Box, Heading, Text } from '@chakra-ui/react';\r\n\r\nexport const Algorithms: React.FC = () => {\r\n  return (\r\n    <Box padding=\"1em\">\r\n      <Heading paddingBottom=\"0.5em\">Mazes - Algorithms</Heading>\r\n\r\n      <Text>Texty text.</Text>\r\n    </Box>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Container } from '@chakra-ui/react';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Paragraph,\r\n  LinkButton,\r\n} from '../../lib/components';\r\n\r\nexport const Writing: React.FC = () => {\r\n  return (\r\n    <Card maxW=\"container.lg\" centered>\r\n      <CardHeader>Writing - Overview</CardHeader>\r\n      <CardBody>\r\n        <Container\r\n          textAlign=\"left\"\r\n          maxW=\"container.lg\"\r\n          padding=\"1em\"\r\n          fontSize=\"md\"\r\n        >\r\n          <Paragraph>\r\n            Ever since I was very young, I've loved reading books. My mother\r\n            volunteered at the library for many years, and I came along with her\r\n            all the time. Sometimes there was a story hour where I would listen\r\n            to her or one of the other librarians read 1-2 childrens books.\r\n            While I admit, I usually had a horrible time sitting still for these\r\n            sessions, I loved getting caught up in the stories and visualizing\r\n            what was going on in my imagination.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            As I grew a little older, story hours turned into me spending hours\r\n            reading books on my own. I sank a lot of time into series like\r\n            Animorphs, The Boxcar Children, The Magic Tree House Series, and all\r\n            things Wizard of Oz to name a few. Then in third grade I found Harry\r\n            Potter, which coincidentally only had the first three books out. In\r\n            preparation for the fourth, I read each of the first three at least\r\n            five times in the month before the release, and was likely all I\r\n            read at that point in time.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            When I made it to high school and college, much less time was spent\r\n            on reading because of sports and other interests taking priority,\r\n            but I still made room for good books I came across like Fight Club,\r\n            Running with the Buffalos, Once a Runner, and the Circle trilogy\r\n            (now quadrilogy) by Ted Dekker. In my adult life I've discovered\r\n            series like Sword Art Online, Ender's Game as well as Ender's\r\n            Shadow, Maze Runner, and Mortality Doctrine.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            I know that this is supposed to be the overview for writing, not\r\n            reading, so I'll try to get there soon. It's all about the journey,\r\n            right?\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Remember how I said that I loved getting caught up in stories and\r\n            visualizing what was going on? That never stopped. If I had a\r\n            quarter for every time I found my eyes glossing over words on the\r\n            page because something on the previous page made my mind wander, I'd\r\n            never have to work again. Sometimes it was thinking about if I was\r\n            in the main character's shoes, sometimes it was thinking about if I\r\n            was with the main characters, but most of the time it was imagining\r\n            the world and everything in it. After so much time reading and\r\n            imagining these things, I finally got the idea that I wanted to\r\n            write a story myself.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            My first foray into writing was a short story I wrote in sixth grade\r\n            about the Neon Man from Neptune. I think at this point the only\r\n            reason I still remember writing it is because I didn't want to tell\r\n            my parents I forgot to type up the final copy, so I spent an hour or\r\n            so after my bedtime writing the final copy in pen on loose leaf\r\n            paper because it was still an acceptable way to turn it in. I'm also\r\n            fairly certain I used the same premise for a short story assignment\r\n            a year or two later in an effort to make the story better. Neither\r\n            one was amazing, and the problems likely stemmed from me trying to\r\n            do too much in a small space.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Sometime in the months after my mother passed away, I decided I\r\n            wanted to write a novel. The two attempts from that time were\r\n            essentially stories where I was the main character and I was being\r\n            transported to some fantastical land that made me forget about all\r\n            my problems. One was a fun, but short lived attempt, while the other\r\n            made it through a change from first to third person and eventually\r\n            one finished draft of about 75k words my junior year of college.\r\n            I've tried several times to rewrite the story only to get writer's\r\n            block after 20-30 pages. Someday I'll hopefully be able to go back\r\n            and give that story justice.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            At the present, I have one story I'm actively working on called\r\n            \"When Worlds Collide\" (a working title) that's an urban fantasy as\r\n            well as one currently on the shelf called \"The Dangers of\r\n            Teleporting\" (also a working title) that's science fiction.\r\n          </Paragraph>\r\n        </Container>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Container } from '@chakra-ui/react';\r\nimport { Card, CardHeader, CardBody, Paragraph } from '../../../lib/components';\r\n\r\nexport const Chapter1WWC: React.FC = () => {\r\n  return (\r\n    <Card maxW=\"container.lg\" centered>\r\n      <CardHeader>Chapter 1 - Let's Go Hiking</CardHeader>\r\n      <CardBody>\r\n        <Container\r\n          maxW=\"container.lg\"\r\n          textAlign=\"left\"\r\n          padding=\"1em\"\r\n          fontSize=\"md\"\r\n        >\r\n          <Paragraph>\r\n            James leaned back against an old, yet sturdy wooden fence. The\r\n            previous night’s weather had draped a thin layer of snow across it,\r\n            and much more of the white powder covered the trail in front of him.\r\n            It was three inches at best since it wasn’t quite high enough to get\r\n            inside his shoes.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            In front of him, a little cream-colored Pomsky named Sparky ran\r\n            circles in the fresh snow. It amazed James how much energy the tiny\r\n            dog had after the couple miles he and his other companion, Ellie,\r\n            had already hiked. Back at the parking lot, he’d thought that if he\r\n            and Ellie were on the trails for more than an hour, Sparky would\r\n            need to be kept inside one of their jackets to stay warm.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Taking his mind off Sparky for a moment, he turned to his left to\r\n            see that Ellie’s dark blue eyes were frozen in focus on her phone.\r\n            James expected it, considering that she’d spent most of the drive to\r\n            the park talking about the fancy new camera attachment she’d just\r\n            bought a week ago. According to her, it was like carrying a DSLR in\r\n            her pocket for a fraction of the cost.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Directly on the other side of the fence was a few feet of ground\r\n            sitting underneath even more snow than the trail, but beyond that\r\n            was a sixty foot drop off the edge of a cliff. The valley below them\r\n            had a small pond that had long since frozen over for the winter, and\r\n            it was surrounded by multitude of trees that filled the area and\r\n            continued for a few miles to the north. Many of the trees held\r\n            several inches of snow that was still accumulating from the\r\n            thousands upon thousands of snowflakes falling from the sky. They\r\n            pranced, floated, and danced as though they were attending an\r\n            extravagant ball until they found a seat to wait and watch as the\r\n            rest of their friends followed.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Despite the attention Ellie had been giving her phone, she\r\n            apparently still noticed James’ gaze. “You can stop it with those\r\n            big, brown puppy dog eyes. I’m done taking pictures.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            James knelt down and pretended to scold Sparky. “You heard her, boy.\r\n            No more puppy dog eyes.” He stood back up and slid over next to\r\n            Ellie. “Was the camera attachment everything you told me it would\r\n            be?” Right when he looked down at the screen of her phone, he\r\n            noticed the slightest movement in Ellie’s finger followed by the\r\n            faint sound of a click.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “I think that selfie might be the best picture of the entire hike.”\r\n            She smirked at James, then pocketed her phone.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            James threw his hands in the air and started walking down the trail\r\n            with Sparky. “Fine, I’ll just look through the pictures at brunch.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Ellie quickly caught up and lightly ran into James’ shoulder. “I’ll\r\n            make another slice of French toast to make up for it. Some extra\r\n            blueberries too!”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            James looked down to see her puffing her lip up and pouting. “Any\r\n            extra slice you make is going to go straight into your sister’s\r\n            stomach. You know she’s going to be hungry after track practice is\r\n            over, so unless you have a whole loaf of bread to dedicate to this\r\n            meal, there’s no way you have enough food to feed everyone.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Ellie took a quarter turn towards James, stopped pouting, and put\r\n            her hand on her hips. “Lucky for you, I got a special loaf just for\r\n            the occasion.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “You mean you got the Stephanie loaf, because she’s going to devour\r\n            everything!”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            There were a few seconds of silence followed by loud laughter from\r\n            both of them. Sparky joined in with a few yips of his own.{' '}\r\n          </Paragraph>\r\n          <Paragraph>\r\n            In the midst of their laughing fit, James had found it necessary to\r\n            lean against the wooden fence yet again so he didn’t fall to the\r\n            ground. After regaining composure, he noticed some animal tracks on\r\n            the other side. They looked like dog prints, or at least a related\r\n            animal, except that they were all the same size. With all the time\r\n            he’d spent holding Sparky’s leash on the hike, he recognized that\r\n            front and back paws made different size prints.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Hey, come take a look at this.” James motioned Ellie over to the\r\n            fence and pointed out the odd tracks in the snow. “Have you ever\r\n            seen something like this before?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Ellie coughed a few times as she forced herself to stop laughing and\r\n            walked over to the fence. “They just look like animal prints to me.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Yeah, but they’re all the same size. Sparky’s front and back paws\r\n            leave different size prints, and I’m sure any other animal, like a\r\n            rabbit, a squirrel, or a wolf, all do the same thing.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Are you…” Elie stifled a laugh. “Are you trying to tell me that\r\n            there’s an animal that lives only in this park and always walks on\r\n            its hind legs?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Maybe whatever it is broke both its front legs and it had to learn\r\n            to do it to survive?” James suggested. “I kind of want to go find\r\n            it.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Right before the last spot you were talking about how hungry you\r\n            were. I seem to remember you complaining about how early it was and\r\n            that you hadn’t eaten anything yet today.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “I can wait a few more minutes to check this out.” James tilted his\r\n            head up to follow where the tracks went. “It looks like they go\r\n            around the edge of the cliff to the mouth of the valley. Even if we\r\n            don’t find whatever made the tracks, I bet you can at least get some\r\n            good camera shots out there.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Ellie looked up and pointed to the sky. “Because the camera can see\r\n            so far with even more snow falling.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            James hadn’t noticed, but realized she was right that it had started\r\n            snowing a little bit harder since the moved on from the last spot.\r\n            He tried to quickly come up with another excuse for her to go, only\r\n            to realize that it would require one thing that he disliked more\r\n            than any other. “Fine, I’ll take a real selfie with you if you come\r\n            along.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            With the mere mention of the word, selfie, Ellie almost instantly\r\n            covered the short distance between them. She turned James around so\r\n            she could him in the eye. “Really?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “<i>After</i> we get back to the car.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Immediately, a huge smile grew on Ellie’s face, filled with teeth\r\n            shinier than the snow around them. She then placed her gloved hands\r\n            on the top rail of the fence and vaulted herself over. “I hope for\r\n            your sake that the view is as awesome as you think it’s going to\r\n            be.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            James sighed, knowing there was likely no way she would forget the\r\n            deal he’d just made. He reached down, picked up Sparky, and\r\n            carefully climbed over the fence. Ellie led the way as they followed\r\n            the tracks through the snow. Being off the maintained trail, they\r\n            had to deal with some overgrown and unkempt bushes along with low\r\n            hanging tree branches, not all of which James saw before getting a\r\n            mouthful of snow. Once through there, they came to a stop underneath\r\n            a large maple tree standing around eight feet from the edge of the\r\n            cliff. Sparky, having spent the entirety of their brief trip\r\n            squirming and yipping to be freed, finally got his wish to be back\r\n            on the ground to continue his fluffy white adventures.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Ellie looked out over the edge, surveying their new vantage point\r\n            while fumbling to get her phone back out of her pocket. “This is…\r\n            absolutely amazing. Just look at how the cliffs forming the edge of\r\n            the valley start right here. It looks like a giant cupped its hands\r\n            around everything down there, and that pond is just like trying to\r\n            scoop water with your hand only for it to slowly trickle out the\r\n            bottom. It’s so beautiful here!”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “And <i>you</i> didn’t even want to explore over here.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Ellie shot a death glare at James before turning back towards the\r\n            cliff to start taking pictures. She brushed some snow away where she\r\n            was standing, then knelt down to get a more stable shot. James\r\n            watched her work her magic with the camera for the first photo until\r\n            his attention was redirected to Sparky tugging on his leash.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            James watched Sparky continue to enamor himself with the snow. Out\r\n            here away from the trail, Sparky was no longer limited to the little\r\n            bit of snow from overnight that was continuing to fall. Now he had\r\n            all the powder that had built up over the week, allowing him to jump\r\n            in and out of the snow like a little groundhog. He never once had to\r\n            pull Sparky back from the edge of the cliff, likely because the snow\r\n            wasn’t quite as deep there and wouldn’t have been nearly as much\r\n            fun.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Seeing that Sparky was entertained for the moment, James began\r\n            looking for the tracks they’d followed to find this spot. He assumed\r\n            that with Ellie leading that she had followed them, but they were no\r\n            where to be found. Their own footprints destroyed any chance of\r\n            going back and restarting the search. James sighed, knowing that\r\n            they may never get to see the one-of-a-kind creature walking on its\r\n            hind legs.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Suddenly, Sparky stopped prancing around and started sniffing\r\n            something near the base of the maple tree. At first glance, it\r\n            looked like a large pile of snow had fallen out of the tree. A\r\n            little tug on the leash didn’t deter Sparky’s investigation, so\r\n            James walked over to figure out what was going on.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            James squatted down next to where Sparky was burying his nose in the\r\n            snow. “I hope you didn’t find a dead animal. You know you’ll get\r\n            sick, right?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            When he moved his hands to pick Sparky up, he felt his glove graze\r\n            against something hard, much harder and heavier than he expected a\r\n            dead animal would feel even it had been frozen underneath the snow.\r\n            James began brushing away the snow to find a large, leather-bound\r\n            book. The white cover and silver writing across the front made it\r\n            blend in so well with the snow that if Sparky hadn’t found it, the\r\n            book may never have been found. He picked it up, shook the rest of\r\n            the snow off, and took his gloves off to begin examining it.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            The silver writing across the front was entirely made up of symbols\r\n            that he’d never seen before and made absolutely no sense. He began\r\n            flipping through pages of the book to see if there was something he\r\n            could understand. To his dismay, even though there were pictures\r\n            every few pages, there wasn’t a single thing he could comprehend in\r\n            the entire book.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “What are you and Sparky looking at?” James looked up to see Ellie\r\n            in the midst of a 360-degree panoramic shot.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Sparky found a book hiding underneath the snow. There’s some\r\n            pictures, but I can’t read any of it.” James stood up and held the\r\n            book open for her to see.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Ellie put her phone away and walked over to James to get a closer\r\n            look at the book. “I wonder who left it here?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Who knows? There’s no way anyone without a dog like Sparky would\r\n            ever find it in this weather. By the time they did, it’d probably be\r\n            ruined.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “That’s weird.” Ellie took one of her gloves off and moved her hand\r\n            to feel one of the pages. “It doesn’t even look like the pages are\r\n            wet from the snow.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            The moment that James and Ellie were both touching the book, they\r\n            were given a light electric shock. Ellie immediately pulled her hand\r\n            away while James bobbled the book a few times before regaining\r\n            control.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            James looked at Ellie and almost immediately burst out laughing.\r\n            “Your hair… Your hair is standing on end like you spent the last\r\n            five minutes rubbing it with a balloon.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Ellie reached her hands up to where her hair normally laid only to\r\n            find frizzy red strands pointed out in all directions except what\r\n            was pressed underneath her headband. She scrunched her eyebrows and\r\n            retorted, “The only reason your stupid hair isn’t doing it is\r\n            because you wore a hat!”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            James couldn’t stop laughing, and Sparky joined the raucous with his\r\n            yipping. The laughter stopped after he got pelted in the face with a\r\n            snowball. Ellie then pulled the leash out of his hand and began\r\n            walking back towards the trail. James picked the book up and quickly\r\n            followed.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “I’m sorry, I’m sorry,” James said as he walked behind Ellie. “Now,\r\n            I think I have an idea that might make you feel better.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “It had better be a good one, because there’s no way I’m taking a\r\n            selfie with you if my hair is still like this when we get back to\r\n            the car.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Who do we both know that’s a little annoying and could use a good\r\n            practical joke?” James lightly elbowed Ellie a few times. “You know\r\n            exactly who I’m thinking of, right?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Are you suggesting we shock my sister?” Ellie lightly chuckled.\r\n            “She’ll jump through the ceiling if we do that!”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “That’s why we <i>have</i> to do it! If it works as well as we think\r\n            it will on her, I’ll have to do it to my brother, Alex, too!”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Just before they got back to the fence, Ellie stopped and stared at\r\n            an oak tree next to their path. “Do you remember seeing this carved\r\n            on the tree earlier?” She pointed at a symbol on the tree at about\r\n            eye level. “It looks like one of those weird tribal symbols people\r\n            get as tattoos.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            James took a closer look at the symbol. “I don’t remember seeing it.\r\n            I think it looks like something from the book we just found. Maybe\r\n            the people who lost the book carved it?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Ellie took a photo of the symbol when James’ stomach made an audibly\r\n            loud grumble. “Is it time to go eat brunch yet?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Says the guy who said we just <i>had</i> to go exploring over\r\n            there.” She hopped over the fence started running down the trail\r\n            with Sparky in tow. “Last one back to the car has to do the dishes!”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            James yelled back, “That’s not fair of you taking advantage of my\r\n            freshman fifteen!”\r\n          </Paragraph>\r\n          <Paragraph>&nbsp;</Paragraph>\r\n          <Paragraph>\r\n            Ten minutes later, James caught up with Ellie back at the parking\r\n            lot. She’d already started the car and put Sparky in the back seat.\r\n            She was leaning against the trunk of the little sedan with crossed\r\n            arms and a smug look on your face. “I thought you were hungry.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            James hunched over to catch his breath. “Just because I’m tall\r\n            doesn’t mean I’m fast.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Maybe I’ll give you a head start next time. Now let’s go. If we\r\n            don’t get out of here soon, we’re going to find an angry Stephanie\r\n            at home waiting to devour us!”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “I thought you wanted selfie, or are you miraculously letting me go\r\n            this time?” James realized the stupidity of his statement as soon as\r\n            it came out of his mouth.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “You think I’m going to take a selfie with my hair like this?” She\r\n            pointed at her hair that was still standing on end, although it had\r\n            settled a bit and looked a little windblown from running. “I guess\r\n            it doesn’t make a difference anyway. It’s not like you’ve taken a\r\n            good picture with me since we were in middle school.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            James stood up and leaned against the car next to Ellie. She leaned\r\n            into his side and snapped several shots.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Ellie sighed. “Stupid book ruining my chance for the perfect\r\n            post-hike selfie. I may never have a chance again.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            James looked down at Ellie’s hands doing things with her phone when\r\n            he realized that she only had one glove on. “What happened to your\r\n            other glove?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Ellie paused what she was doing, then contorted her face in all\r\n            sorts of ways while she thought. “I took one off when you showed me\r\n            the book. I must have forgotten it up by the tree. It doesn’t matter\r\n            anyway, it’s just a glove.”\r\n          </Paragraph>\r\n        </Container>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Container } from '@chakra-ui/react';\r\nimport { Card, CardHeader, CardBody, Paragraph } from '../../../lib/components';\r\n\r\nexport const Chapter1DOT: React.FC = () => {\r\n  return (\r\n    <Card maxW=\"container.lg\" centered>\r\n      <CardHeader>Chapter 1 - The First Day</CardHeader>\r\n      <CardBody>\r\n        <Container\r\n          maxW=\"container.lg\"\r\n          textAlign=\"left\"\r\n          padding=\"1em\"\r\n          fontSize=\"md\"\r\n        >\r\n          <Paragraph>\r\n            Adam tightened his navy-blue tie as he hurried along the sidewalk.\r\n            He stared up at the tall, ivory building before walking in through\r\n            the revolving door. It was his first day at Omni Artisan Systems and\r\n            the last thing he wanted to do was be late to meet his boss.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Omni Artisan Systems, OAS for short, was an up and coming technology\r\n            company that had just announced that they were a few months away\r\n            from releasing the True VR headset, a device that could send data\r\n            directly to and from the human brain. The medical community was in\r\n            an uproar. The possibility of creating a virtual environment for\r\n            terminally ill patients to enjoy themselves was the most popular\r\n            idea so far. Another idea was to send signals to a comatose\r\n            patient’s mind to wake them up and bring them back to the real\r\n            world. The most ambitious idea to date was try and rewrite portions\r\n            of our subconscious brain processes to eliminate diseases\r\n            altogether. It was this kind of innovation to help people that had\r\n            drawn Adam to want to work for OAS.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Adam’s last job was designing and optimizing systems for factory\r\n            line processes. Somebody would analyze a system to determine if any\r\n            bottlenecks existed. Adam was given the resulting information and he\r\n            would design a new machine that would reduce the bottleneck or\r\n            eliminate it entirely. It was partially fulfilling because it was\r\n            fun for Adam to solve a challenge, but not completely because he\r\n            knew that it only meant that someone could manufacture their product\r\n            ten times faster than before.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Hello,” Adam gasped as he reached the front desk of OAS. “My name\r\n            is Adam Cloud and this is my first day here at OAS.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Oh, hello dear,” the receptionist replied. “Jerry told me to be\r\n            expecting you this morning. Let me ping him so he can come down here\r\n            to meet you. You can sit in wait in one of the chairs over there. It\r\n            should only be a few minutes.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Thank you,” Adam replied as he turned and headed to take a seat.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Adam couldn’t quite figure out why he was so nervous. He couldn’t\r\n            remember being like this when he started his last job, or even his\r\n            first real job out of college. He knew that he should be more\r\n            confidant with his level of experience, but he was still in\r\n            disbelief that he had gotten the job.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            When Adam was still in the interview process, he knew that the bulk\r\n            of work he had completed for his last job wasn’t going to cut it.\r\n            Optimizing systems, no matter how good he was at it, had nothing to\r\n            do with designing new systems from scratch. Luckily one of the more\r\n            recent systems he had worked on was for a product that OAS had\r\n            already released. The device in question was used to read brainwaves\r\n            and output what the subject was thinking to a computer screen. The\r\n            microprocessors used in the device had an extremely low yield when\r\n            the product was released, but after three weeks of working on it\r\n            Adam was able to get the yields to over 50% per batch which was far\r\n            better than the 5-7% they had originally seen.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Good to see you again, Adam,” Jerry said as he thrust out his hand\r\n            for a handshake.{' '}\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “It’s good to see you too, sir,” Adam stammered as he shook Jerry’s\r\n            hand.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Please, call me Jerry,” his boss said as they started walking. “Now\r\n            I’m sure you were prepared for today to be mostly boring stuff like\r\n            learning rules and filling out paperwork. With us releasing the True\r\n            VR headset so soon we’ve already started using it in house. Now what\r\n            would’ve taken you an entire day can be done in less than an hour\r\n            because of how fast your brain is able to process the data.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “An hour?” Adam asked as they walked through a set of double doors.\r\n            “That’s insane!”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “It still takes time for the printer to keep up so we have physical\r\n            copies of everything, but it has definitely helped with productivity\r\n            around here. We’re working on transitioning how we collaborate and\r\n            design our projects to use the system. You’re able to get so much\r\n            done in so little time in the VR environment and you feel like you\r\n            just took a nap when you wake up.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Aren’t you worried that other companies will start doing the same\r\n            thing after it’s released?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Of course, we expect that to happen. Part of finishing the True VR\r\n            solution is making our internal software usable by everyone. Sell\r\n            the software and then make them pay fees to get updates and\r\n            technical support. It’s the same way with any other large-scale\r\n            product in the software industry.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Jerry and Adam walked through another set of double doors before\r\n            heading up an elevator to the third floor. The entire building had\r\n            been plain so far. Grey linoleum floors and off-white walls lit up\r\n            with the standard fluorescent lighting. The same plain decor awaited\r\n            them once they arrived on the third floor. A few doors later and\r\n            they walked into a room filled with cubicles that each had a person\r\n            wearing a True VR headset. All except for one.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Hi Carol,” Jerry said. “This is Adam’s first day so we need to get\r\n            him setup in the system.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Sure thing, Jerry,” Carol responded with a fake smile. “He’s only\r\n            what, the fourth new employee we’ve had this week?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Don’t worry, I think we have a couple more. Well, I’ll leave him in\r\n            your hands then.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Why did it have to be my week on newbie duty to have all the new\r\n            hires start showing up,” Carol muttered as Jerry left the room.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Hi, I’m Adam” he stuttered as he stuck out his hand.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Yeah. I heard,” Carol said as she got up from her desk completely\r\n            ignoring Adam’s gesture. She walked over to an empty cube and turned\r\n            the computer on. “Ok, so when the computer is done booting up you’ll\r\n            just log on as the guest user. There’s only one program that runs\r\n            under that user, so it’ll start by prompting you to put on the\r\n            headset and then it’ll take you through getting everything setup.”\r\n          </Paragraph>\r\n          <Paragraph>“Th… Thanks”</Paragraph>\r\n          <Paragraph>\r\n            Carol wasn’t even three steps away from the cube when the logon\r\n            screen popped up. Adam followed her instructions and in moments he\r\n            had the True VR headset on and he was starting his first full-dive\r\n            experience.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Adam’s body immediately felt weightless as his brain was flooded\r\n            with information. It was far more information than he’d ever had to\r\n            process at once. Everything around him was out of focus while his\r\n            mind was catching up. Various numbers, letters, and colors flurried\r\n            around him while he was right there in the middle of it. Slowly the\r\n            storm of unintelligible nonsense began rearranging itself into\r\n            cohesive matter.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Adam watched as his body formed itself. Almost as if it were cell by\r\n            cell his body pieced itself together starting with his head and\r\n            working its way down to his fingers and toes. He bent his elbow to\r\n            take a closer look at his hand and found that he could see just as\r\n            much detail as he could in the real world. It was all the same right\r\n            down to his fingerprints.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            The first object to fully form itself was a chair. It was no\r\n            ordinary work chair. It was an expensive looking leather executive\r\n            chair. The kind of chair they usually only have in the big meeting\r\n            rooms for when visitors came to the office. When Adam sat down he\r\n            could feel the cushioning flatten beneath him just as he expected.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Next was a desk. A glass tabletop framed with aluminum. It had an\r\n            underside drawer that was filled with basic office supplies.\r\n            Pencils, pens, scissors, sticky notes, and anything else he might\r\n            need soon.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Finally, the rest of the room formed around him. The wall behind him\r\n            was a window that had a perfect view of Yosemite’s Half Dome. Adam\r\n            forced himself to get out of the chair and walked up to get a closer\r\n            look. Knocking on the glass gave the *ping* noise that he expected.\r\n            He was still skeptical until he saw some birds flying off in the\r\n            distance. The other walls were a light faded green with some canvas\r\n            paintings of the Grand Canyon and the Colorado Rockies. A solid\r\n            maple door stood in the center of the wall across from the window to\r\n            complete the earthy nature of the room.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Just as Adam was sitting down again he noticed a laptop appear on\r\n            the desk along with some text hovering in midair.{' '}\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Login using your first initial followed by your last name for your\r\n            username and your first and last initial followed by your full\r\n            numeric birth date without the slashes as your password. You’ll be\r\n            prompted to change your password after logging in and then you’ll\r\n            need to fill out all the documents that are currently on your\r\n            desktop. Once those are filled out send the files to HR and wait for\r\n            further instructions.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Adam stared at the text for a few moments before he followed the\r\n            instructions. All the forms were basic information that the company\r\n            needed in order to start the process for benefits and to setup\r\n            automatic paychecks. Thankfully he had his checking account number\r\n            memorized because it wasn’t exactly an option to go back to the real\r\n            world where he had his checkbook in his leather binder.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            After sending the files to HR, Adam waited a few minutes. He didn’t\r\n            receive an email back and the instructions were still hovering in\r\n            midair on the other side of the desk. Not knowing what else to do,\r\n            Adam swiped his hand through the text which caused it to fade away\r\n            from sight.\r\n          </Paragraph>\r\n          <Paragraph>Moments later the door opened.</Paragraph>\r\n          <Paragraph>\r\n            “Hey, look who’s done with their paperwork already,” Jerry said as\r\n            he walked into the room and closed the door. “How do you like your\r\n            office?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “This is amazing!” Adam exclaimed, the first time he hadn’t felt shy\r\n            about what he was saying that entire morning. “Everything seems so\r\n            much more realistic than I even imagined from watching prerelease\r\n            demos of the True VR. It’s like a completely different world.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Glad to hear that you’re liking it so far. Right now, I need to put\r\n            you through a brain speed test and then we can go meet some of the\r\n            other engineers you’ll be working with.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “A brain speed test? Are you sure you don’t mean an aptitude test or\r\n            an IQ test?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Jerry produced a chair identical to the one Adam was sitting in and\r\n            sat down on the other side of the desk. “No, I’m talking about a\r\n            brain speed test. It’s not very technical, but it means exactly what\r\n            it says. About how long do you think this session of VR has been\r\n            going on for?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Adam scratched his chin. He knew that time moved faster in VR, but\r\n            he didn’t know just how much faster it really was. “Around thirty\r\n            minutes?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Not even close,” Jerry said as he pulled up a hovering console\r\n            window. “Your session started at 9:17 based on the database record.\r\n            Now if you look at the bottom right of the window…”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Adam’s jaw dropped. “There’s no way it’s only 9:23. It felt like I\r\n            spent at least an hour going through all the paperwork for HR not to\r\n            mention the time it took for everything in this room to load.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “I promise you that it’s the real time. The environment by default\r\n            is set to about 10 times the speed of the outside world. It’s a safe\r\n            setting that everyone can handle and allows us to save plenty of\r\n            real world time on work.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “If we’re already running at 10 times speed then why do we even need\r\n            a speed test?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “I only said that the environment is set to 10 times speed as a\r\n            default. That doesn’t mean it can’t run faster. Some people just\r\n            have different limits than others. Then there’s other cases where we\r\n            need to interface with someone from the outside world while we’re in\r\n            here so we slow the room down to normal speed.”\r\n          </Paragraph>\r\n          <Paragraph>“How fast are you able to handle?”</Paragraph>\r\n          <Paragraph>\r\n            Jerry pulled the console window back over and started pointing and\r\n            clicking things to start the test. Another console window popped up\r\n            to the side of the desk with a large 15 in black print. “I can\r\n            handle a little over 50 times normal speed. Some of your coworkers\r\n            can hit up over 70 times.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Does something bad happen if you go over your limit?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Typically, people will start moving and talking as if they were\r\n            drunk. What’s really happening is that the brain uses so much of its\r\n            potential that it can’t do everything else it’s supposed to be\r\n            doing. The more you use your brain for True VR the more everything\r\n            else starts shutting down. We set the threshold at seventy percent\r\n            brain activity. It’s enough that we can get substantially more than\r\n            the 10 times speed and we still have a cushion. Right now, the\r\n            server is monitoring your brain activity to see if you’ve hit the\r\n            threshold. As long as your below the threshold and you aren’t\r\n            showing any symptoms like I described it will periodically increase\r\n            the speed till it finds your limit.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            The console screen flashed and changed from 15 to 20.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “So, we’re going to just sit here and talk until I pass out?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Of course not,” Jerry said as he stood up. “If you’re going to feel\r\n            like you’re drinking we may as well play a bar game.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Jerry started fidgeting with his console window again and moments\r\n            later a pool table was sitting in Adam’s office.{' '}\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Are you sure that I shouldn’t be watching some sort of intro video\r\n            or going through some training instead?” Adam asked as Jerry racked\r\n            the pool balls. “There’s got to be something more productive than\r\n            playing a game of pool.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “I like the business focus,” Jerry said before shooting to break the\r\n            rack. “But with as much time as we spend in the VR world we can\r\n            afford to spend more time doing things we enjoy and less time\r\n            actually working. Afford isn’t really the right word for that… need\r\n            works better. You were amazed that we generally work at 10 times\r\n            normal speed. That means if you’re logged in for an 8-hour day in\r\n            the real world then you’ve been in here for at least 80 hours. It’s\r\n            just not possible to work for all 80 of those hours. Even though\r\n            your real body only sees this as 8 hours your mind sees all 80 and\r\n            needs to be handled accordingly. You still need to sleep, interact\r\n            with other people, enjoy yourself. In other words, you still need to\r\n            be a human being while having your mind stuck inside a computer.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Adam got up from his chair and walked over to pick up the other cue\r\n            that Jerry had left leaning against the table. “How do you manage\r\n            your time then? You already said that you can function up to 50\r\n            times normal speed and some other people can handle higher than\r\n            that. If you have multiple people working on a project that don’t\r\n            have similar maxes, then it seems like they’d have scheduling\r\n            issues.” Adam took his shot as the console screen flashed from 20 to\r\n            25.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “That’s a fair point and one of the biggest reasons we do this\r\n            test.” Jerry walked around the table eyeing his next target. “Take\r\n            for example you have two people working on a project. Person A can\r\n            function up to 20 times and Person B can function up to 40 times.\r\n            This leaves you with two choices. The first choice is to limit\r\n            Person B to max out at 20 times during the course of the project.\r\n            This fixes the scheduling conflict but Person B is only using 50% of\r\n            their capacity. The second choice is to not limit Person B which\r\n            causes the scheduling conflict and places an unfair burden on them\r\n            because they have the potential to get twice as much work done.\r\n            Neither one of those is an optimal situation.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “So, what solution did you come up with? You have to have something\r\n            in place if you manage people who have a higher max than yourself.”\r\n            Adam said as he watched Jerry shoot three stripes in before\r\n            scratching.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “The solution was twofold. To mitigate the problem, you previously\r\n            mentioned we try to match up teams that have similar maxes. This way\r\n            we don’t lose nearly as much capacity when someone has to work with\r\n            someone of a lower max. For situations where you need to work with\r\n            someone that’s got a different brain speed max you’ll need to meet\r\n            during a standard time. There are periodic points in the day where\r\n            regardless of your max we force you to run at the standard 10 times.\r\n            One of those times would be when we have group meetings.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Adam got two of the solids in during his turn but had left himself\r\n            without a clean shot and missed to end his turn. “It seems like you\r\n            have it all planned out. It must have taken a while to figure it out\r\n            though.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “It took about a month of normal time to get a working system.”\r\n            Jerry said as he sunk another stripe. “What made it easier was only\r\n            bringing in small groups of people at a time so we could get the\r\n            process figured out without putting the entire company into\r\n            communication chaos.”\r\n          </Paragraph>\r\n          <Paragraph>The console window flashed from 25 to 30.</Paragraph>\r\n          <Paragraph>\r\n            Adam watched as the number of striped balls on the table dwindled\r\n            down to one before he had another chance to catch up. “Man, you’re\r\n            killing me this game.” He only managed to get one more solid in a\r\n            pocket despite only having the 8 and 11 to shoot around.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Jerry calmly sank the last two balls to finish the game and leaned\r\n            his cue against the table. “This is one of those games I like to\r\n            play to pass the time while I’m in VR. I don’t want to go outdoors\r\n            like a lot of people because I think it may detract from the\r\n            experience if I go there in real life. I like shooting pool because\r\n            it reminds me that no matter how well I plan a situation there’s\r\n            always a chance that it still won’t go accordingly. Plus, I can play\r\n            while having a meeting like this.”\r\n          </Paragraph>\r\n          <Paragraph>The console flashed to 35.</Paragraph>\r\n          <Paragraph>\r\n            “Fair enough,” Adam said as he glanced over at the console. “How\r\n            long is this going to keep going up by five?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “It’ll keep doing that until your body shows any sign that it’s\r\n            starting to fail keeping up. Once that happens it’ll start going by\r\n            three and finally by one. I’m going to head out now just to make\r\n            sure I don’t get caught in here if it goes over my limit. I’ll round\r\n            up a few of your colleagues for you to meet once the test is over.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Sounds good,” Adam said as Jerry left the room.{' '}\r\n          </Paragraph>\r\n          <Paragraph>\r\n            As soon as the door closed the console flashed to 45. Adam racked\r\n            the pool balls to play a solo game to kill the time. About every\r\n            five minutes of room time the console went up by 10. It didn’t make\r\n            sense to Adam why it was jumping faster than when Jerry was in the\r\n            room, but he didn’t let it bother him. When the console flashed to\r\n            85 he was a little stunned. Jerry had said that the highest person\r\n            he knew was in the 70 range and he passed by with the blink of an\r\n            eye.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Adam stopped paying attention to the console at that point. The test\r\n            would be over soon and he probably wouldn’t be able to work at his\r\n            full capacity anyway if the next highest person was in the 79 range.\r\n            As things happened to turn out, the console reached 120 when it\r\n            started blinking between the number and the word max in big, red,\r\n            capital letters. A few minutes later the console reset to 10 and a\r\n            message appeared at the bottom telling him to leave his office.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            When Adam opened the door, Jerry greeted him with a pat on the back.\r\n            “That was amazing! You just maxed out the system and judging by how\r\n            fast it was increasing you could go faster if the system could\r\n            handle it. Lynn here was the previous record holder at 76.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Hi, I’m Lynn,” a young lady standing to Adam’s right said as she\r\n            raised her hand to wave.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “And this is Lee,” Jerry said as he gestured to the older man\r\n            standing next to Lynn. “He was fairly close behind Lynn with a 72.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Good to meet you, Adam,” Lee said with a firm handshake. “With a\r\n            brain like that you should be able to get up to speed on our project\r\n            in no time.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Our project? So, I’ll be working with you guys?” Adam asked after\r\n            returning his focus to Jerry.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Not right away, you still have some training to get through first,”\r\n            Jerry said as he turned and started walking down the hallway. “But,\r\n            I think a quick demo might keep your spirits up while you go through\r\n            the videos.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Is it something related to the True VR?” Adam asked. “I’ve heard a\r\n            lot about all the things they want to use it for in the medical\r\n            field.”\r\n          </Paragraph>\r\n          <Paragraph>Lynn and Lee both stifled laughs.</Paragraph>\r\n          <Paragraph>\r\n            “If you had scored in the 50s or 60s then you’d be on one of those\r\n            projects,” Jerry said while he maneuvered through menus on the door\r\n            console. “A score like yours put you in our high-level research\r\n            team. Your job is to work on projects that eclipse even what we’ve\r\n            already achieved with the True VR.” Jerry opened the door as Adam\r\n            responded. “Eclipse the True VR? The only thing that could possibly\r\n            be better than being able to meet up instantly in a virtual world\r\n            would be to do it in the real world.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Exactly.” Jerry gestured the other three through the door.{' '}\r\n          </Paragraph>\r\n          <Paragraph>\r\n            The room they had just entered contained two machines that looked\r\n            like MRI scanners. A table in between the machines had a plethora of\r\n            items including but not limited to a potato, a rubber duck, a bottle\r\n            of pop, and a balloon. Off to the side were two desks where Lynn and\r\n            Lee worked when they weren’t in their own offices.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Adam’s jaw dropped. “I… We get to work on teleportation?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “I’ll demonstrate with the rubber duck,” Lee said giving Adam a\r\n            friendly elbow as he walked over to the table. “His name is Scotty.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Lee picked Scotty the rubber duck off the table and placed it on the\r\n            bed of the left machine. After Lee pressed some buttons on the\r\n            machine the bed started moving inside the core of the machine. Once\r\n            the bed was fully inside a dark colored panel covered the entrance\r\n            to the core and bright green lights began to flash from the inside.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Moments later the green lights stopped flashing on the left machine\r\n            and the bed of the right machine began moving into the core and the\r\n            dark colored panel closed it off. As the green lights began flashing\r\n            in the machine on the right the bed of the left machine was on its\r\n            way back out and Scotty was no longer on the table. In another\r\n            minute the bed of the machine on the right was on its way out and\r\n            Scotty was sitting there as if nothing at all had happened.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “What do you think?” Lee asked as he tossed Scotty to Adam.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Adam, standing there completely mesmerized by what had just happened\r\n            failed to even realize that the rubber duck had been thrown at him\r\n            until it hit him in the chest. He picked it up and turned it over a\r\n            few times to inspect it before responding. “That. Was. Awesome!”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “It’s good to know you’ll enjoy working on the project,” Jerry said.\r\n            “I know I can’t wait to see even more results from it. Now let’s get\r\n            you back to your office so you can get through those training\r\n            videos.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Do I have to?” Adam jokingly whined as he handed Scotty to Lynn.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Jerry opened to door back to the hallway they had come from. “Just\r\n            remember, it may feel like a day’s worth of work in here, but in\r\n            real world time you won’t even be close to the lunch-time break.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            They waved to Lynn and Lee as they left the room and headed back to\r\n            Adam’s office. He hadn’t noticed before, but it already had a\r\n            nameplate attached. Jerry showed him the link to start training on\r\n            his laptop and created a larger second monitor before heading back\r\n            to his own office.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “The basics of the True VR interface,” Adam mumbled to himself.\r\n            “Finally, I’ll be able to use one of those windows that Jerry keeps\r\n            pulling up.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “To open a console window, please move your right pointer finger in\r\n            the shape of an infinity symbol as shown on screen,” the narrator\r\n            said. “You will need to have a console window open to continue.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Adam followed the instructions and created his very own console\r\n            window. By default, it was about the same size as his laptop screen.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “If you’d like to resize the screen, you can grab the edges and\r\n            stretch or shrink it to the size desired,” the narrator continued.\r\n            “Pressing the icon in the top left of your window will show a menu\r\n            with the default programs. Select the option marked ‘Settings’.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “I suppose this is where I’m thankful that my room is running at top\r\n            speed. Even if it takes forever in here to finish it’ll only take\r\n            about half the time or less to everyone else.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Inside the settings window please make sure that room mode is set\r\n            to ‘Creation’. This mode allows for the creation of objects through\r\n            using the console window interface. The other options include\r\n            ‘Creative’ which is used for changing the laws of physics within the\r\n            current room and ‘Realistic’ which is used for testing real life\r\n            applications. You can also check the speed of the room in this area.\r\n            All other options will be covered at a later point in time.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            The videos continued for several hours. During this time, Adam had\r\n            made his office three times the size it was before, added a living\r\n            room area with a large sectional couch, a recliner that could give a\r\n            massage, a solid oak coffee table, and a bookshelf taller than\r\n            himself half filled with reference books and other books by his\r\n            favorite authors. He’d also played with another feature of\r\n            ‘Creative’ mode where he stood on the ceiling after changing the\r\n            gravity to zero. All of it sounded like fun, but the video narration\r\n            was doing a better job of making Adam tired.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            To his relief, he got a message from Lynn that had material to help\r\n            bring him up to speed on the project. He pulled it open on the\r\n            second monitor sitting on his desk and started reading through the\r\n            material while the narrator continued to drone through the rest of\r\n            training.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Project objective…” Adam mused to himself. “Design a device that\r\n            can teleport organic matter from one location without physically\r\n            moving the matter between locations. That explains why they had the\r\n            potato sitting on the table.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Adam found the first document that he read to be everything the\r\n            company was looking for from the project. There was very little\r\n            content about how anything should work beyond not physically moving\r\n            the matter between locations and that they wanted the location to be\r\n            easily decided. Without too much problem solving, Adam could see\r\n            that they wanted to be able to send the data over the wire like you\r\n            were downloading something from the internet.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            The next document he read was a project timeline. So far, they’d\r\n            logged a little over 4000 hours on the project. Adam’s jaw dropped\r\n            at the thought of spending that much time on the project until he\r\n            remembered that they were working at over 70 times the speed of the\r\n            real world. In their case, the 4000 hours translated to around 7-8\r\n            weeks of work. Still, Adam couldn’t imagine spending that much time.\r\n            Surely, they must have thought of bringing someone else on the\r\n            project before they hired himself.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            As Adam took a closer look at the notes he found much of what he had\r\n            already discovered during the earlier demonstration, but there was\r\n            plenty of information he hadn’t yet seen. They had machines that\r\n            could read and write data based on the matter inside them from one\r\n            machine to another. Currently, it only worked on non-living matter\r\n            and single-celled organisms. Multi-celled organisms usually ended up\r\n            dying during the process.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            According to a bullet pointed list Adam found in another document,\r\n            the current sticking point was getting a living organism to move\r\n            over. Once they completed that task then they would move on to\r\n            making it network capable and finally a real-life demo.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Adam was so enamored reading about the project he hadn’t noticed\r\n            that the training video had ended. Lynn’s email said that he should\r\n            go to room 691 to meet them and he hadn’t a clue on how he was\r\n            supposed to work the door at the end of the hall.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Come on,” Adam mumbled as he started playing through the end of the\r\n            video. “There’s got to be some sort of summary on how this all\r\n            works. No one here could have learned it all in one go.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            In the last thirty seconds of the video he found a link to a\r\n            reference document on a shared drive on the company network. Adam\r\n            wished they had put that link at the beginning of the video so that\r\n            he could have read through that instead of listening to the narrator\r\n            drone on for hours. He opened the document, searched through the\r\n            contents to find the section on how to choose your destination room,\r\n            and left the office.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Think fast!” Lynn yelled as Adam entered the room.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Without a moment to process what was happening, Adam was hit in the\r\n            face by a flying rubber duck. “What was that for?” Adam picked\r\n            Scotty up off the floor.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “With all that extra brain speed, I thought you’d be able to catch\r\n            it,” Lynn retorted.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Don’t think much of it,” Lee said, not bothering to move from his\r\n            seat. “She does that every time someone opens the door. Including\r\n            Jerry.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “My statement still stands,” Lynn said as she walked over and took\r\n            Scotty out of Adam’s hands.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “It’s part of her way of having fun with as much time as we spend in\r\n            here. She may have also lost the bet on how long it would be until\r\n            you got back here.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Lee already had his arms up to block before Lynn threw Scotty his\r\n            direction. “Seriously, who actually watches training videos? For a\r\n            video that’s three hours long you know there’s going to be a summary\r\n            at the end.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “I was already halfway through the video by the time I got your\r\n            message,” Adam said as he created a seat for himself. “I spent the\r\n            second half reading through all the documents you sent me.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “You made it through the training video AND you read all the stuff I\r\n            sent you?” Lynn threw her hands up as she slammed down into her\r\n            seat. “Look out folks, we got a Brainiac on our hands.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “She may also be a little salty that you scored so much higher on\r\n            the brain speed test,” Lee said as he turned to rejoin the\r\n            conversation.{' '}\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Whatever,” Lynn grumbled as she started looking at something on her\r\n            laptop.{' '}\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Now that Lynn has completely tuned us out, did you have any\r\n            thoughts on the project so far?” Lee asked.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Umm, I guess my first question is how exactly does the scanning\r\n            work?” Adam responded while scratching his head. “The demo made it\r\n            seem like a giant copy machine and the documentation said that it’s\r\n            a more advanced version of how the True VR headset scans our\r\n            brains.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “And those are both true statements. The True VR headset focuses on\r\n            reading and writing to our brain cells. This machine built on that\r\n            technology in order to read everything down to a molecular level. As\r\n            I’m sure you saw in the notes, we’re having trouble with teleporting\r\n            living organisms. Scotty on, on the other hand, can handle it just\r\n            fine.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “And the notes also say that they usually die in the teleportation\r\n            process.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Lee got up from his chair and put the potato on the machine bed.\r\n            “There’s a little more to it than that.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Once the teleportation was complete, Lee handed the potato to Adam\r\n            to inspect it.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Notice how it’s not really a potato anymore,” Lee said. “Really\r\n            it’s like someone mashed it up molecule by molecule and then somehow\r\n            got it back to its original shape.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Adam held the potato and examined it. Just like Lee had said, it was\r\n            mixed up, but only in very localized areas. He broke it in half to\r\n            get a better look and noticed that for as mixed up as the surface\r\n            appeared that none of the skin had made it more than just beneath\r\n            the surface. “It only looks like the skin is barely off. It can’t be\r\n            that far off from where it needs to be.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Ahh, but that’s how it looks to the naked eye. If you take a look\r\n            under a microscope it would tell a much different story. The cells,\r\n            despite having their molecular structure read by the first machine,\r\n            just aren’t quite in the right place. A potato is fairly simple\r\n            example where there aren’t very many cell types to worry about.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “I’m guessing I don’t want to know what happens if you put a mouse\r\n            through there,” Adam joked.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “That’s not funny,” Lynn said, still staring at her laptop screen.\r\n            “We had a pet mouse in here till we gave a demo the first time we\r\n            got anything to teleport reliably. Jerry got a little gung-ho about\r\n            it and now we can’t have pets in the lab anymore.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “If we weren’t in VR it would’ve been a while to get the stench out\r\n            of the lab too. Who knew something so small could have such a putrid\r\n            smell,” Lee added.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Just stop talking about it,” Lynn said a little louder. “I don’t\r\n            want to think about all the guts and hair that were all over the\r\n            inside of the machine. UGGHH!”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “That’s just making my stomach turn,” Adam said as he put a hand on\r\n            his belly. “The project notes said that so far you’ve tried speeding\r\n            up the scanning process to make it work better.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “And that did help… some,” Lee’s voice drifted off. “Initially scans\r\n            were taking around 5 seconds and now they take about half a second.\r\n            That helped for the simple multi-celled organisms like seaweed and\r\n            algae, but anything more complicated than that is still having\r\n            similar issues to what you saw from the potato. Right now, we’re in\r\n            the process of running calculations on how to decrease the scan time\r\n            to 1/100th of a second or faster so that it’s just like taking a\r\n            snapshot with a camera.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “For as much time as you’ve spent making the scan faster,” Adam\r\n            thought out loud. “And don’t get me wrong, that idea makes complete\r\n            sense to me. It sounds like what you need to happen is for time to\r\n            freeze so that everything you scan is in the same state. The same\r\n            thing would need to happen post process otherwise things would\r\n            probably get jumbled up while printing the teleported object.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “You may be on to something, Adam,” Lee said with a gleam in his\r\n            eye. “Lynn, do you remember if we ever talked about this before?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Genius boy has been here for 10 minutes and you already listen to\r\n            him more than me,” Lynn responded. “And no, we haven’t talked about\r\n            freezing anything before it gets teleported.”\r\n          </Paragraph>\r\n          <Paragraph>“Well, it’s an idea.” </Paragraph>\r\n          <Paragraph>\r\n            Lee opened a console window and made a note. “It’s about the end of\r\n            the day in here. How about we show Adam the flying room?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “You just want me to be nice,” Lynn said. “I’ll stay here and\r\n            research the wonder boy’s idea while you two go bond. Maybe I’ll\r\n            show up later.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Come on,” Lee pleaded. “It’s your favorite entertainment room.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Adam watched as they went back and forth for several minutes with\r\n            Lee trying to convince Lynn that she should join them. No shortage\r\n            of favors were promised, ranging from Adam making coffee from\r\n            scratch by only using the console to create the ingredients to Lynn\r\n            getting to be the main test runner for at least a week. The tipping\r\n            point was when Lee said that Adam would become the chief note taker\r\n            for the project.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “How could you promise that?” Adam whispered as they left the room\r\n            and Lynn was just far enough ahead that she wouldn’t hear. “Making\r\n            coffee is one thing, but do I even know enough about the project to\r\n            be taking notes for it?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Trust me, if your notes are that bad then Lynn will take back over\r\n            in a heartbeat,” Lee replied. “She’d be in an even worse mood if we\r\n            didn’t convince her to join. It really is her favorite room.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “First you guys convince me to go and now you’re walking slow?” Lynn\r\n            called back to them. “If you don’t hurry up then I’ll leave you\r\n            behind once we get there.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Before they reached the flying room, they walked through a large,\r\n            open common area. White tile with gold and silver specs lined the\r\n            floor that had many sets of cafeteria style tables and chairs.\r\n            Potted plants and trees were placed around the white marble support\r\n            columns.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Lee noticed Adam looking around. “There’s lots of time that this\r\n            place will be empty. Having different teams at different speeds\r\n            makes it hard for everyone to have free time at the same times.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Jerry said that there were times that the system forces everyone to\r\n            work at the standard 10x speed for meetings,” Adam said as his gaze\r\n            shifted to the glass ceiling above them.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Running at the speed of our team those times will feel few and far\r\n            between. Take a moment and think about it. 70x speed for 8 hours\r\n            gives a total possible 560 hours or a little over 23 days. At that\r\n            rate, you might have meetings once a week if you’re lucky.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “I only kind of thought about the math before when I was looking\r\n            over the project notes, but I didn’t really take into account how\r\n            long I’d be in here for a single day before going back to the real\r\n            world.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Don’t worry too much. We still leave in the middle of the day for\r\n            lunch and we take weekends in here.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Lynn was standing in front of the door to the flying room arms\r\n            crossed and foot tapping. “Took you guys long enough.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “I thought you were going to leave us behind,” Adam said.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Lynn scrunched her eyebrows at Adam and opened the door.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “You might want to wait a little longer before poking the bear,” Lee\r\n            whispered to Adam. “It’ll be at least a week before she starts to\r\n            warm up to you. I’m surprised she was as well behaved as she was\r\n            when Jerry was around.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “You know,” Lynn twisted her head back with a scowl, “I can hear\r\n            what you’re saying.”\r\n          </Paragraph>\r\n          <Paragraph>“And now I’m in the dog house.”</Paragraph>\r\n          <Paragraph>\r\n            But Adam wasn’t paying attention to either of them at this point\r\n            because after walking through the door he found himself standing on\r\n            top of a tower overlooking the Grand Canyon. After taking a few\r\n            minutes to enjoy the view, Lee pointed out the instruction panel\r\n            that explained the basics of the flying room.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “You’re telling me there isn’t training room for this?” Adam asked,\r\n            flabbergasted. “How am I supposed to believe this ‘Think in the\r\n            direction you want to move’ stuff? What’s to say I won’t freefall as\r\n            soon as I leave this platform?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Lynn, who was already hovering just off the tower, grabbed Adam’s\r\n            collar and pulled him over the edge before Lee had a chance to\r\n            answer his question.\r\n          </Paragraph>\r\n          <Paragraph>“Think up!” she called after him.</Paragraph>\r\n          <Paragraph>\r\n            Lee covered his face with his right hand and moved next to Lynn.\r\n            “You didn’t need to do that.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “It’ll waste less time than giving him an explanation. And it’s not\r\n            like it’s going to hurt if he hits the ground. It’ll give us more\r\n            time to explore.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “More time to explore? You’ve probably covered every inch of this\r\n            canyon by now with how much time you spend in here.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “That’s only because it’s so much fun to fly around and be free!”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Yeah,” Adam said as he rose to rejoin the group. “Feeling like\r\n            you’re falling to your death is extremely fun.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “See?” Lynn said as she gestured towards Adam with the first smile\r\n            she’d shown since the introductions. “I knew he’d learn fast because\r\n            of all the brainpower that’s going unused right now.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Lee covered his face with his hand again. “You win, Lynn. Lead on.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Lynn proceeded to use a console window to set a few waypoints that\r\n            they would spend the next several hours investigating. They started\r\n            out by diving down until they were just above the river’s surface\r\n            and before gliding along low and fast enough that Adam could feel\r\n            the mist of Lynn’s wake. His mind was still wrapping itself around\r\n            everything else he had learned so far today and he was still amazed\r\n            at the attention to detail he was witnessing.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Flipping over so his back was to the water, Adam watched the clouds\r\n            for a moment. He knew that creating realistic water was one thing,\r\n            but creating an entire sky and all the physics behind it was a whole\r\n            other story. They’d be simulating weather itself, Adam thought. Then\r\n            again, if they’re simulating everything to the point that they could\r\n            realistically test their teleportation project then everything else\r\n            is a cakewalk.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Adam turned himself back so he was flying with his stomach towards\r\n            the water again. With his mind overwhelmed by the sheer amount of\r\n            detail put into making the environment feel real his thoughts began\r\n            to wander. How did the system know how to make the ripples in the\r\n            water? How did it simulate the fish swimming or other wildlife going\r\n            about their daily business? Did they simulate erosion when it\r\n            rained? He had so many questions for the developers.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “You did well to keep up, newbie,” Lynn said as she slowed and\r\n            oriented herself vertically. “This is our first stop, Desert View\r\n            Point.”{' '}\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Before Adam had had a chance to respond, Lynn shot up to the top of\r\n            the canyon wall and sat down on the edge. Adam and Lee floated up\r\n            and sat down on either side of her.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “This is such a beautiful spot,” Lynn said as they sat down. “How\r\n            far do you think you can see from here?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “I don’t know, maybe twenty miles?” Adam shrugged.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Lynn covered her mouth with her hand a laughed. “Twenty miles? More\r\n            like over a hundred miles. We flew more than twenty miles just to\r\n            get here. Open your mind up a little more.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Well I’ve never been to the Grand Canyon in real life so I didn’t\r\n            have any idea.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Did you not hear what I just said about opening your mind up? Lee,\r\n            I don’t think he’s good at listening.”\r\n          </Paragraph>\r\n          <Paragraph>Lee turned, tilted his head, and shrugged.</Paragraph>\r\n          <Paragraph>\r\n            “Alright, well here’s an exercise in opening your mind up. I’ll\r\n            forward you the waypoint for our next stop and you can race me\r\n            there,” Lynn said as she pulled up her console window.{' '}\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “But if I’m racing you then I won’t have a chance to admire the\r\n            scenery.” Adam responded.{' '}\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Trust me, there will be plenty of other opportunities for you to\r\n            see the Grand Canyon in its entirety,” Lynn retorted as she began\r\n            hovering. “They only change the location every workday in real life\r\n            so you’ve got another two months to explore it.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            While Adam was thinking of another excuse he had an alert message\r\n            pop up in front of his face.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “It looks like Jerry wants to have a meeting with me to see how my\r\n            first day went,” Adam said as he closed the window. “Is there way\r\n            out of here without flying all the way back?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Looks like you have to race me now, otherwise you might be late for\r\n            your important meeting,” Lynn taunted.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “You can’t be serious. There must be a way to teleport back to the\r\n            main tower! This is just like a video game, there should be an exit\r\n            button!”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Maybe there is, maybe there isn’t,” Lynn said as she started moving\r\n            towards the tower at a snail’s pace. “You probably should’ve read\r\n            all the instructions before we left the tower…”\r\n          </Paragraph>\r\n          <Paragraph>“Fine. I’ll ra…”</Paragraph>\r\n          <Paragraph>\r\n            Lynn had already blasted off, literally, before Adam could finish\r\n            his sentence. His jaw didn’t even have time to drop before they\r\n            heard a boom in the distance. Lynn had broken the sound barrier.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Lee finally added to the conversation. “She’s already there. Maybe\r\n            you’ll have a fair race, someday, but let her have this one. Now if\r\n            you open a console window I’ll show you the teleport to entrance\r\n            feature.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Show me after we get back to the tower,” Adam said as he started\r\n            hovering. “I’ve got to try what Lynn just did.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Adam closed his eyes and imagined the fastest thing he could think\r\n            of; a stealth fighter jet. He angled his torso like the plane’s\r\n            body, spread his arms, opened his eyes, and thought of himself\r\n            taking off with his feet as the plane’s thrusters.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Moments later Adam could only see a blur of brown except for\r\n            something white straight ahead.\r\n          </Paragraph>\r\n          <Paragraph>THWAK!</Paragraph>\r\n          <Paragraph>\r\n            “It’s a good thing you can’t feel pain in this room!” Lynn yelled as\r\n            Adam found himself stuck to the side of the tower.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “That was… fast,” Adam commented as he floated up to where Lynn was\r\n            standing. “I couldn’t see anything.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Lynn chuckled. “See anything? If you hadn’t tried to demolish the\r\n            tower you’d probably still be flying till you hit the edge of the\r\n            map.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Lee appeared in a flash of blue light. “Next time we’re here I’ll\r\n            show you how to teleport back to the tower. It’s been so long since\r\n            Lynn used the feature that she’s probably forgotten how to use it.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            The smile that had so recently come to Lynn’s face changed back into\r\n            the scowl from earlier. “Fine, you take him to his meeting while I\r\n            stay here and explore.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Lee and Adam left without another word for fear of angering Lynn\r\n            more than they had already managed. They walked back through the\r\n            large atrium where they saw a few people lingering around. One had a\r\n            beer in hand while another was reading something on their console\r\n            window. Once they had nearly reached door to go to Jerry’s office\r\n            someone started calling out for Lee.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Hey Lee! Lee!” Louie shouted while running towards them.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Lee quickly opened the door and shoved Adam through. “Go on without\r\n            me. It’s the third door on the right. His name will be on it.” He\r\n            shut the door before Adam had a chance to say thanks.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Adam walked down the hall, found Jerry’s office, which opened as\r\n            soon as he knocked.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “I was just about to come looking for you,” Jerry said. “Come in.\r\n            Come in.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Jerry’s office was styled much differently than Adam’s except for\r\n            the live view of Yosemite’s Half Dome. The walls were a dark grey\r\n            stone with fancy hardwood flooring to go with it. On one side of the\r\n            room sat a short bookcase filled with novels with a dragon statuette\r\n            that was nearly three feet long. In the center of the room sat a\r\n            coffee table. The bottom was made of a darker stone than the walls,\r\n            but the top featured stream of lava that followed a fractured path\r\n            through the middle. Four black leather chairs surrounded the coffee\r\n            table each with a wired remote with even more massage settings than\r\n            the one he created for his office. Jerry’s desk sat in the back of\r\n            the room with a black granite top and a gunmetal finish for the\r\n            frame.{' '}\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Adam’s eyes kept wandering back and forth to each unique piece of\r\n            furniture in the room. Each was a work of art alone, but to have\r\n            them all in one place was a magnificent sight.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “I’m sorry,” Jerry said as he closed the door and opened his console\r\n            window. “This must look like a pretty menacing office for a boss.\r\n            I’ll have a lighter colored theme in a moment. You can take a seat\r\n            at the coffee table while I get this fixed.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “I think it actually looks pretty cool,” Adam complemented as he sat\r\n            down. He hovered his hand over the coffee table to see if the lava\r\n            was just an animation or if it was designed to give off heat. “It’s\r\n            far more interesting than what I put together for my office.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “In that case I won’t worry about it. The darker theme is easier on\r\n            the eyes with every other everywhere else being so bright.” Jerry\r\n            sat down sideways in a chair across from Adam. “Take a look at\r\n            these. I only saw them after I introduced you to Lynn and Lee.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Adam turned his head towards the wall where he saw four brain\r\n            activity scans. One scan for Jerry, Lee, Lynn and himself.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “This is the brain activity level we all showed at speed ten. All\r\n            our brains are at about the ten percent usage here plus or minus one\r\n            percent. Very few people are outside this range. Now look at what\r\n            happens when we go up to twenty-five.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            With a touch of the console the images changed. Jerry’s had changed\r\n            the most and was up close to forty percent usage. Lynn and Lee were\r\n            at about twenty-five percent and his had stayed at ten percent.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “And then look at what happens when we go to my max of fifty-three.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            The images on the wall changed again. Jerry’s was at seventy percent\r\n            while Lynn and Lee were down around fifty percent usage. His still\r\n            hadn’t budged from the ten percent from the first batch of images.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “It’s the same thing when we go to Lynn’s and Lee’s max speeds and\r\n            even when we go to your artificially limited max of one hundred\r\n            twenty.” Jerry changed the screen so it was eight images with Adam’s\r\n            lining the top row and Lynn’s lining the bottom row. “I already told\r\n            you that no one had ever maxed out the system before, but this is\r\n            unprecedented. Either your limit is so far beyond what we can\r\n            achieve with this level of technology or something is wrong with the\r\n            brain scanner. Are you sure you felt fine during the testing?”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Yeah, I uh… felt fine,” Adam responded sounding a little confused.\r\n            “I kept shooting some pool after you left. Nothing felt off when I\r\n            was going through the training videos or the paperwork either. It\r\n            did increase the speed faster when you left, but that was it.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Good, that’s what I thought.” Jerry shifted so he was sitting\r\n            properly in the chair. “I did let the higher ups know because we\r\n            don’t want to risk brain damage of any of our employees from pushing\r\n            their speed too much. When you disconnect to eat your real lunch, we\r\n            should have your real station ready to go so we can retest with new\r\n            hardware when you log back in.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Ok…” Adam’s voice trailed off as his eyes began wandering the room\r\n            again.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “So, did you have some time to get to know Lynn and Lee a bit?\r\n            They’ve spent a lot of time in here so it if things didn’t go\r\n            smoothly at first, you’ll have plenty of time to figure things out.\r\n            You’ll have known them for almost two months by the time you go home\r\n            for the day!”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Two months…” Adam pondered. He had already thought about how much\r\n            time they had spent on the project so far and how much faster they\r\n            got work done in a day, but he hadn’t thought about what it would be\r\n            like to think he was gone for two months when he was really only\r\n            gone for a normal work day. How do you fit two months of stories in\r\n            over dinner every single night? How do you remember everything?\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Things went pretty well with Lynn and Lee today,” Adam said when\r\n            his brain snapped back to Jerry’s office. They work really well\r\n            together, I just hope that I end up being useful to them and the\r\n            project.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “You’ll do great,” Jerry responded. “Even if you’re behind in some\r\n            area you can go back to your office, study up, and be up to speed in\r\n            no time. That’s one of the biggest advantages of being able to\r\n            accelerate time. We don’t need someone who is the absolute best in\r\n            any field because we have the time to train them. Yes, some things\r\n            are still better done in real life, but think of all the time that\r\n            we’ll be able to save.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            This was one of the things that had drawn Adam into this job more\r\n            than any other. Jerry, albeit being a boss who doesn’t directly work\r\n            on the projects, wasn’t afraid to dream big. He didn’t mind how long\r\n            the projects took because they were truly advancing science and the\r\n            human race. Most importantly, it seemed like failure was an option\r\n            as long as something was learned along the way. After all, most of\r\n            what the company did was research until they came up with something\r\n            truly incredible like True VR.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Alright, well that’s really all I had for you today,” Jerry said as\r\n            he got up from his chair. “Go relax in the lounge, have some dinner,\r\n            rearrange your office, I’m sure you’ll think of something to do\r\n            before you get some sleep.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Adam stood up, shook Jerry’s hand, and headed for the door.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “I’ll schedule another meeting for us in a few days, just to check\r\n            in again and make sure things are still going smoothly,” Jerry\r\n            mentioned as he opened the door.\r\n          </Paragraph>\r\n          <Paragraph>\r\n            “Sounds good sir,” Adam said as he left the room. “See you then.”\r\n          </Paragraph>\r\n          <Paragraph>\r\n            Adam thought about redecorating again when he got back to his office\r\n            after being so impressed by what Jerry had done with his. He\r\n            wondered what Lynn and Lee had done for their offices, but he didn’t\r\n            know either one well enough to be able to guess. Mentally he was\r\n            exhausted from everything he had done so far that he only wrote a\r\n            quick email to his roommate before falling asleep on the couch.\r\n          </Paragraph>\r\n          <Paragraph>&nbsp;</Paragraph>\r\n          <Paragraph>\r\n            <i>Hey Mike,</i>\r\n          </Paragraph>\r\n          <Paragraph>&nbsp;</Paragraph>\r\n          <Paragraph>\r\n            I know we said we were going to grab a beer to celebrate the new job\r\n            after my first day, but by the time I see you next it’ll have been\r\n            at least two months because of how time works inside the True VR.\r\n            We’re working on some pretty awesome projects, enough that I’ll need\r\n            at least a six pack for how much time I’ll need to tell stories.\r\n          </Paragraph>\r\n          <Paragraph>&nbsp;</Paragraph>\r\n          <Paragraph>\r\n            <i>Adam</i>\r\n          </Paragraph>\r\n          <Paragraph>&nbsp;</Paragraph>\r\n          <Paragraph>An entire day complete before 9:40AM.</Paragraph>\r\n        </Container>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport { LayoutMain } from './layout-main';\r\nimport { Home } from '../home/home';\r\nimport { AboutMe } from '../about-me/about-me';\r\nimport { Mazes } from '../mazes/overview/mazes';\r\nimport { Generator } from '../mazes/generator/generator';\r\nimport { Algorithms } from '../mazes/algorithms/algorithms';\r\n\r\nimport { Writing } from '../writing/writing';\r\nimport { Chapter1WWC } from '../writing/when-worlds-collide/chapter-1';\r\nimport { Chapter1DOT } from '../writing/dangers-of-teleporting/chapter-1';\r\nexport const RouterMain: React.FC = () => {\r\n  return (\r\n    <LayoutMain>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/about-me\" component={AboutMe} />\r\n\r\n      <Route exact path=\"/mazes\" component={Mazes} />\r\n      <Route exact path=\"/mazes/generator\" component={Generator} />\r\n      <Route exact path=\"/mazes/algorithms\" component={Algorithms} />\r\n\r\n      <Route exact path=\"/writing\" component={Writing} />\r\n      <Route\r\n        exact\r\n        path=\"/writing/when-worlds-collide/chapter-1\"\r\n        component={Chapter1WWC}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/writing/dangers-of-teleporting/chapter-1\"\r\n        component={Chapter1DOT}\r\n      />\r\n    </LayoutMain>\r\n  );\r\n};\r\n","import React from 'react';\nimport { ChakraProvider, theme } from '@chakra-ui/react';\n\nimport { RouterMain } from './site/router/router-main';\nimport { HashRouter } from 'react-router-dom';\nexport const App = () => (\n  <HashRouter>\n    <ChakraProvider theme={theme}>\n      <RouterMain />\n    </ChakraProvider>\n  </HashRouter>\n);\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\",\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\",\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import { ColorModeScript } from \"@chakra-ui/react\"\nimport * as React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { App } from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}