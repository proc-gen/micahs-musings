{"version":3,"sources":["site/router/color-mode-switcher.tsx","site/router/left-nav.tsx","site/router/layout-main.tsx","lib/components/link-button.tsx","lib/components/thumbnail.tsx","site/home/images/molten-teapot.jpg","site/home/images/multiple-noise-terrain.jpg","site/home/images/maze-generator.png","site/home/images/3-d-maze.png","site/home/home.tsx","site/about-me/about-me.tsx","site/mazes/overview/mazes.tsx","lib/components/canvas.tsx","site/mazes/generator/components/generator-properties.tsx","site/mazes/generator/components/binary-tree-properties.tsx","site/mazes/generator/components/sidewinder-properties.tsx","lib/mazes/image-utils/rgba.ts","lib/mazes/image-utils/image.ts","lib/mazes/maze-parts/wall.ts","lib/mazes/maze-parts/cell.ts","lib/mazes/maze-parts/grid.ts","lib/mazes/utils/random.ts","lib/mazes/generators/generator.ts","lib/mazes/generators/aldous-broder.ts","lib/mazes/generators/binary-tree.ts","lib/mazes/generators/growing-tree.ts","lib/mazes/generators/hunt-and-kill.ts","lib/mazes/generators/kruskal.ts","lib/mazes/generators/prim.ts","lib/mazes/generators/recursive-backtracker.ts","lib/mazes/generators/sidewinder.ts","lib/mazes/generators/wilson.ts","lib/mazes/utils/math.ts","lib/mazes/generators/eller.ts","lib/mazes/generators/recursive-subdivision.ts","site/mazes/generator/generator.tsx","site/mazes/algorithms/algorithms.tsx","site/writing/writing.tsx","site/writing/when-worlds-collide/chapter-1.tsx","site/router/router-main.tsx","App.tsx","reportWebVitals.ts","serviceWorker.ts","index.tsx"],"names":["ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","variant","color","marginLeft","onClick","icon","aria-label","LeftNav","align","allowMultiple","as","ReactLink","to","w","LayoutMain","children","textAlign","paddingBottom","rows","minChildWidth","paddingLeft","justifySelf","minH","p","templateColumns","colSpan","LinkButton","href","Thumbnail","useDisclosure","isOpen","onOpen","onClose","src","source","alt","altText","_hover","border","transition","Home","columns","spacing","padding","MoltenTeapot","NoiseTerrain","MazeGenerator","SpaceMaze","AboutMe","Mazes","maxW","isExternal","Canvas","id","imgData","canvasRef","React","useRef","useState","context","setContext","useEffect","current","renderCtx","getContext","undefined","putImageData","ref","width","height","GeneratorProperties","state","handleGeneratorChange","bind","handleSeedChange","handleWidthChange","handleHeightChange","handleDeadEndChange","handleWeaveChange","event","this","handleChange","parseInt","currentTarget","value","label","name","placeHolder","data","generator","onChange","placeholder","seed","weave","cullDeadEnds","Component","BinaryTreeProperties","handleDirectionsChange","handleChanceVerticalChange","direction","chanceVertical","SidewinderProperties","handleWindDirectionChange","handleChanceWindChange","handleSideDirectionChange","sideDirection","windDirection","chanceWind","RGBA","r","g","b","a","Black","White","Image","x","y","c","i","j","SetPixel","GetPixel","newData","length","ImageData","Wall","isWall","isStairsDown","isStairsUp","weight","Cell","numCellSides","visited","adjacentCells","walls","set","masked","overCell","underCell","wall","push","canTunnel","CanTunnelDirection","checkPassage","retVal","IsFlat","dimension","wallColor","floorColor","paintColor","ColumnExists","filter","nextCell","toString","Grid","cells","SetWall","Math","max","iOffset","jOffset","floor","cellImgData","Display","SetPixels","Transpose","FlipOverX","Random","mulberry32","min","t","imul","GeneratorData","grid","Generator","baseProps","random","InitializeGrid","Generate","Weave","RemoveDeadEnds","mapCells","CanTunnel","GetInt","chooseTunnelDirection","currentCell","directions","tunnelCells","nearCell","farCell","SetWallAndStairs","numProcessed","forEach","k","AldousBroderData","AldousBroder","adjacentCount","MergeCells","some","BinaryTreeData","BinaryTree","verticalCell","horizontalCell","GrowingTreeData","GrowingTree","pickCount","usedCells","HuntAndKillData","HuntAndKill","KruskalData","Kruskal","currentWeight","nextSetNumber","GetIntInRange","GetWeightDirection","GetCellDirection","filterSet","mapSet","PrimData","Prim","sort","compareWeights","indexOf","RecursiveBacktrackerData","RecursiveBacktracker","currentSet","pop","SidewinderData","Sidewinder","cellRun","randResult","iStart","iMax","iStep","jStart","jMax","jStep","WilsonData","Wilson","currentLoop","unvisitedCount","MathUtils","Infinity","items","n","item","EllerData","Eller","row","finalRow","currentRow","currentRowSet","currentRowSets","MaxY","MinY","rowMovedSouth","RecursiveSubdivisionData","RecursiveSubdivision","startX","startY","startWidth","startHeight","MinX","MaxX","divide","column","divideHorizontal","divideVertical","divideSouthOf","affectedCells","compareElement","passageCell","affectedCellSection","divideEastOf","key","generate","maze","binaryTree","sidewinder","aldousBroder","wilson","huntAndKill","recursiveBacktracker","kruskal","prim","growingTree","eller","recursiveSubdivision","generatorData","RunGenerator","setState","handleGeneratorDataChange","handleBinaryTreeChange","handleSidewinderChange","fieldName","retElement","getGeneratorPropertiesTabName","getGeneratorSpecificPropertiesElement","maxHeight","overflow","css","WebkitOverflowScrolling","msOverflowStyle","Algorithms","Writing","Chapter1WWC","RouterMain","exact","path","component","App","theme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e0c78489.chunk.js","sourcesContent":["import * as React from 'react';\nimport {\n  useColorMode,\n  useColorModeValue,\n  IconButton,\n  IconButtonProps,\n} from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\ntype ColorModeSwitcherProps = Omit<IconButtonProps, 'aria-label'>;\n\nexport const ColorModeSwitcher: React.FC<ColorModeSwitcherProps> = (props) => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      aria-label={`Switch to ${text} mode`}\n      {...props}\n    />\n  );\n};\n","import React from 'react';\r\n\r\nimport {\r\n  Accordion,\r\n  AccordionButton,\r\n  AccordionIcon,\r\n  AccordionItem,\r\n  AccordionPanel,\r\n  Link,\r\n  SimpleGrid,\r\n  VStack,\r\n} from '@chakra-ui/react';\r\nimport { Link as ReactLink } from 'react-router-dom';\r\n\r\nexport interface ILeftNavProps {}\r\n\r\nexport const LeftNav: React.FC<ILeftNavProps> = () => {\r\n  return (\r\n    <SimpleGrid>\r\n      <VStack align=\"stretch\">\r\n        <Accordion allowMultiple>\r\n          <AccordionItem>\r\n            <AccordionButton>\r\n              <Link as={ReactLink} to=\"/\">\r\n                Home\r\n              </Link>\r\n            </AccordionButton>\r\n          </AccordionItem>\r\n          <AccordionItem>\r\n            <AccordionButton w=\"100%\">\r\n              Mazes\r\n              <AccordionIcon />\r\n            </AccordionButton>\r\n            <AccordionPanel w=\"100%\">\r\n              <AccordionItem>\r\n                <AccordionButton>\r\n                  <Link as={ReactLink} to=\"/mazes\">\r\n                    Overview\r\n                  </Link>\r\n                </AccordionButton>\r\n              </AccordionItem>\r\n              <AccordionItem>\r\n                <AccordionButton>\r\n                  <Link as={ReactLink} to=\"/mazes/generator\">\r\n                    Generator\r\n                  </Link>\r\n                </AccordionButton>\r\n              </AccordionItem>\r\n              <AccordionItem>\r\n                <AccordionButton>\r\n                  <Link as={ReactLink} to=\"/mazes/algorithms\">\r\n                    Algorithms\r\n                  </Link>\r\n                </AccordionButton>\r\n              </AccordionItem>\r\n            </AccordionPanel>\r\n          </AccordionItem>\r\n          <AccordionItem>\r\n            <AccordionButton w=\"100%\">\r\n              Writing\r\n              <AccordionIcon />\r\n            </AccordionButton>\r\n            <AccordionPanel w=\"100%\">\r\n              <AccordionItem>\r\n                <AccordionButton>\r\n                  <Link as={ReactLink} to=\"/writing\" w=\"100%\">\r\n                    Overview\r\n                  </Link>\r\n                </AccordionButton>\r\n              </AccordionItem>\r\n              <AccordionItem>\r\n                <AccordionButton w=\"100%\">\r\n                  When Worlds Collide\r\n                  <AccordionIcon />\r\n                </AccordionButton>\r\n                <AccordionPanel w=\"100%\">\r\n                  <AccordionItem>\r\n                    <AccordionButton>\r\n                      <Link\r\n                        as={ReactLink}\r\n                        to=\"/writing/when-worlds-collide/chapter-1\"\r\n                        w=\"100%\"\r\n                      >\r\n                        Chapter 1\r\n                      </Link>\r\n                    </AccordionButton>\r\n                  </AccordionItem>\r\n                </AccordionPanel>\r\n              </AccordionItem>\r\n            </AccordionPanel>\r\n          </AccordionItem>\r\n        </Accordion>\r\n      </VStack>\r\n    </SimpleGrid>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Box, Grid, GridItem, Heading, SimpleGrid } from '@chakra-ui/react';\r\n\r\nimport { ColorModeSwitcher } from './color-mode-switcher';\r\nimport { LeftNav } from './left-nav';\r\n\r\nexport const LayoutMain: React.FC = ({ children }) => {\r\n  return (\r\n    <Box textAlign=\"center\" fontSize=\"xl\">\r\n      <SimpleGrid paddingBottom=\"1em\" rows={1} minChildWidth=\"5em\">\r\n        <GridItem textAlign=\"left\">\r\n          <Heading size=\"xl\" paddingLeft=\".5em\">\r\n            Micah's Musings\r\n          </Heading>\r\n        </GridItem>\r\n        <GridItem textAlign=\"right\">\r\n          <ColorModeSwitcher justifySelf=\"flex-end\" />\r\n        </GridItem>\r\n      </SimpleGrid>\r\n\r\n      <Grid minH=\"100vh\" p={3} templateColumns=\"repeat(12, 1fr)\">\r\n        <GridItem colSpan={2}>\r\n          <LeftNav />\r\n        </GridItem>\r\n        <GridItem colSpan={10}>{children}</GridItem>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Button, Link } from '@chakra-ui/react';\r\nimport { Link as ReactLink } from 'react-router-dom';\r\n\r\nexport interface ILinkButtonProps {\r\n  href: string;\r\n  text: string;\r\n}\r\n\r\nexport const LinkButton: React.FC<ILinkButtonProps> = (props) => {\r\n  return (\r\n    <Link as={ReactLink} to={props.href}>\r\n      <Button>{props.text}</Button>\r\n    </Link>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Image,\r\n  ImageProps,\r\n  Modal,\r\n  ModalBody,\r\n  ModalContent,\r\n  ModalCloseButton,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  useDisclosure,\r\n} from '@chakra-ui/react';\r\n\r\nexport interface IThumbnailProps extends ImageProps {\r\n  source: string;\r\n  altText: string;\r\n}\r\n\r\nexport const Thumbnail: React.FC<IThumbnailProps> = ({ ...props }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <>\r\n      <Image\r\n        src={props.source}\r\n        alt={props.altText}\r\n        onClick={onOpen}\r\n        _hover={{ border: 'solid 2px grey', transition: '0.1s' }}\r\n        props\r\n      />\r\n      <Modal isOpen={isOpen} onClose={onClose} size=\"full\">\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>{props.altText}</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Image src={props.source} alt={props.altText} />\r\n          </ModalBody>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/molten-teapot.7f5a8561.jpg\";","export default __webpack_public_path__ + \"static/media/multiple-noise-terrain.858abf92.jpg\";","export default __webpack_public_path__ + \"static/media/maze-generator.87da6afb.png\";","export default __webpack_public_path__ + \"static/media/3-d-maze.faf6ae04.png\";","import React from 'react';\r\nimport { Box, Heading, SimpleGrid, Text } from '@chakra-ui/react';\r\n\r\nimport { LinkButton } from '../../lib/components/link-button';\r\nimport { Thumbnail } from '../../lib/components/thumbnail';\r\n\r\nimport MoltenTeapot from './images/molten-teapot.jpg';\r\nimport NoiseTerrain from './images/multiple-noise-terrain.jpg';\r\nimport MazeGenerator from './images/maze-generator.png';\r\nimport SpaceMaze from './images/3-d-maze.png';\r\n\r\nexport const Home: React.FC = () => {\r\n  return (\r\n    <>\r\n      <SimpleGrid columns={2} spacing=\"5em\" padding=\"1em\">\r\n        <Thumbnail source={MoltenTeapot} altText=\"Molten Teapot\" />\r\n        <Thumbnail source={NoiseTerrain} altText=\"Terrain Generation\" />\r\n      </SimpleGrid>\r\n      <Box padding=\"1em\">\r\n        <Heading paddingBottom=\"0.5em\">Welcome!</Heading>\r\n        <Text>\r\n          I made this website to share things that I've worked on because\r\n          they're cool, interesting, or just meant to make you think. Enjoy!\r\n        </Text>\r\n      </Box>\r\n      <SimpleGrid columns={2} spacing=\"1em\" padding=\"1em\">\r\n        <LinkButton href=\"/mazes\" text=\"Mazes\" />\r\n        <LinkButton href=\"/writing\" text=\"Writing\" />\r\n      </SimpleGrid>\r\n      <SimpleGrid columns={2} spacing=\"5em\" padding=\"1em\">\r\n        <Thumbnail source={MazeGenerator} altText=\"Maze Generator\" />\r\n        <Thumbnail source={SpaceMaze} altText=\"3D Maze\" />\r\n      </SimpleGrid>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Box, Heading, Text } from '@chakra-ui/react';\r\n\r\nexport const AboutMe: React.FC = () => {\r\n  return (\r\n    <Box padding=\"1em\">\r\n      <Heading paddingBottom=\"0.5em\">About Me</Heading>\r\n      <Text>Texty text.</Text>\r\n    </Box>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Heading,\r\n  Link,\r\n  SimpleGrid,\r\n  Text,\r\n} from '@chakra-ui/react';\r\nimport { LinkButton } from '../../../lib/components/link-button';\r\n\r\nexport const Mazes: React.FC = () => {\r\n  return (\r\n    <Box padding=\"1em\">\r\n      <Heading paddingBottom=\"0.5em\">Mazes - Overview</Heading>\r\n      <SimpleGrid columns={2} spacing=\"1em\" padding=\"1em\">\r\n        <LinkButton href=\"/programming/mazes/generator\" text=\"Generator\" />\r\n        <LinkButton href=\"/programming/mazes/algorithms\" text=\"Algorithms\" />\r\n      </SimpleGrid>\r\n      <Container maxW=\"container.lg\" padding=\"1em\" fontSize=\"md\">\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          Back in May 2020, I was perusing through Amazon looking for new books\r\n          to read whether they were for something to learn or just for\r\n          enjoyment. I ended up coming across{' '}\r\n          <Link\r\n            href=\"https://www.amazon.com/Mazes-Programmers-Twisty-Little-Passages/dp/1680500554\"\r\n            isExternal\r\n          >\r\n            <u>Mazes for Programmers: Code Your Own Twisty Little Passages</u>\r\n          </Link>{' '}\r\n          by Jamis Buck and thought it would be something cool to try out.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          At first, I was a little turned off that all the provided code was\r\n          written in Ruby. As many reviews stated, this was an annoyance to them\r\n          as well. But, that actually ended up making it more fun for me\r\n          overall. Not only was I learning the algorithms described by the\r\n          author to generate mazes, I was also challenging my problem solving\r\n          skills by transferring the provided code into my current language of\r\n          choice, C#.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          It didn't take long before I was spending time taking the mazes and\r\n          putting them in 3D so that I could feel like I was walking through\r\n          games of my childhood like{' '}\r\n          <Link href=\"http://advsys.net/ken/klab.htm\" isExternal>\r\n            <u>Ken's Labyrinth</u>\r\n          </Link>{' '}\r\n          and{' '}\r\n          <Link href=\"https://www.dgray.com/n3dpage.htm\" isExternal>\r\n            <u>Nitemare 3D</u>\r\n          </Link>\r\n          . That iteration didn't make it much further than a console interface\r\n          to setup the maze and then going into fullscreen mode. Still, it was\r\n          fun to be able to make something and play it, which is something I\r\n          hadn't done in several years.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          After inevitably getting bogged down trying to do fancy things with\r\n          OpenGL and GLSL shaders, I took a few months away from the project\r\n          before beginning to work on a WinForms version of the application.\r\n          That was another learning experience, because I hadn't made a WinForms\r\n          application for anything since the first half of high school. Compared\r\n          to the VB 6 code I had worked on it was a breeze in .Net Core. This\r\n          version of the generator allowed for all the settings as the first\r\n          version in addition to separating a map out into multiple regions. The\r\n          goal behind that was to allow for more complex generation so that it\r\n          could possibly be used for a rogue-like game.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          Jumping ahead to July 2021, the current goal is to port the current\r\n          version of the C# library I put together into Typescript. So far, the\r\n          hardest part has been editing images pixel by pixel in the same way\r\n          allowed by System.Drawing.Bitmap in C# while also trying to respect\r\n          how data is supposed to flow in a React application.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          If you've stuck around this long, you should jump to either the{' '}\r\n          <Link href=\"/programming/mazes/generator\">\r\n            <u>Generator</u>\r\n          </Link>{' '}\r\n          to play around with all sorts of settings to create your own mazes, or\r\n          you can head off to the{' '}\r\n          <Link href=\"/programming/mazes/generator\">\r\n            <u>Algorithms</u>\r\n          </Link>{' '}\r\n          section where I give a brief explanation of each generator implemented\r\n          and some other pieces of the code. Enjoy!\r\n        </Text>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport interface ICanvasProps {\r\n  id: string;\r\n  imgData: ImageData;\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nexport const Canvas: React.FC<ICanvasProps> = ({ id, imgData, ...props }) => {\r\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\r\n  const [context, setContext] = React.useState<CanvasRenderingContext2D | null>(\r\n    null\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (canvasRef.current) {\r\n      const renderCtx = canvasRef.current.getContext('2d');\r\n\r\n      if (renderCtx) {\r\n        if (imgData !== undefined) {\r\n          renderCtx.putImageData(imgData, 0, 0);\r\n        }\r\n        setContext(renderCtx);\r\n      }\r\n    }\r\n  }, [context, imgData]);\r\n\r\n  return (\r\n    <canvas\r\n      id={id}\r\n      ref={canvasRef}\r\n      width={props.width || imgData.width}\r\n      height={props.height || imgData.height}\r\n    ></canvas>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Input,\r\n  InputGroup,\r\n  InputRightAddon,\r\n  FormControl,\r\n  FormLabel,\r\n  Select,\r\n  SimpleGrid,\r\n  Tooltip,\r\n} from '@chakra-ui/react';\r\n\r\nimport { GeneratorData } from '../../../../lib/mazes';\r\n\r\nexport interface IGeneratorProps {\r\n  data: GeneratorData;\r\n  handleChange: (fieldName: string, value: number) => void;\r\n}\r\n\r\nexport interface IGeneratorState {}\r\n\r\nexport class GeneratorProperties extends React.Component<\r\n  IGeneratorProps,\r\n  IGeneratorState\r\n> {\r\n  constructor(props: IGeneratorProps) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.handleGeneratorChange = this.handleGeneratorChange.bind(this);\r\n    this.handleSeedChange = this.handleSeedChange.bind(this);\r\n    this.handleWidthChange = this.handleWidthChange.bind(this);\r\n    this.handleHeightChange = this.handleHeightChange.bind(this);\r\n    this.handleDeadEndChange = this.handleDeadEndChange.bind(this);\r\n    this.handleWeaveChange = this.handleWeaveChange.bind(this);\r\n  }\r\n\r\n  handleGeneratorChange(event: React.FormEvent<HTMLSelectElement>) {\r\n    this.props.handleChange('generator', parseInt(event.currentTarget.value));\r\n  }\r\n\r\n  handleSeedChange(event: React.FormEvent<HTMLInputElement>) {\r\n    this.props.handleChange('seed', parseInt(event.currentTarget.value));\r\n  }\r\n\r\n  handleWidthChange(event: React.FormEvent<HTMLInputElement>) {\r\n    this.props.handleChange('width', parseInt(event.currentTarget.value));\r\n  }\r\n\r\n  handleHeightChange(event: React.FormEvent<HTMLInputElement>) {\r\n    this.props.handleChange('height', parseInt(event.currentTarget.value));\r\n  }\r\n\r\n  handleDeadEndChange(event: React.FormEvent<HTMLInputElement>) {\r\n    this.props.handleChange('deadEnd', parseInt(event.currentTarget.value));\r\n  }\r\n\r\n  handleWeaveChange(event: React.FormEvent<HTMLInputElement>) {\r\n    this.props.handleChange('weave', parseInt(event.currentTarget.value));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <SimpleGrid columns={2} spacing=\"1em\" paddingBottom=\"1em\">\r\n          <FormControl id=\"generator\">\r\n            <Tooltip label=\"The base algorithm used by the maze generator. Go to Mazes/Algorithms in the left navigation for more information about a specific generator.\">\r\n              <FormLabel>Generator</FormLabel>\r\n            </Tooltip>\r\n\r\n            <Select\r\n              name=\"generator\"\r\n              placeHolder=\"Select Generator\"\r\n              value={this.props.data.generator}\r\n              onChange={this.handleGeneratorChange}\r\n            >\r\n              <option value=\"1\">Binary Tree</option>\r\n              <option value=\"2\">Sidewinder</option>\r\n              <option value=\"3\">Aldous-Broder</option>\r\n              <option value=\"4\">Wilson's</option>\r\n              <option value=\"5\">Hunt and Kill</option>\r\n              <option value=\"6\">Recursive Backtracker</option>\r\n              <option value=\"7\">Kruskal's</option>\r\n              <option value=\"8\">Prim's</option>\r\n              <option value=\"9\">Growing Tree</option>\r\n              <option value=\"10\">Eller's</option>\r\n              <option value=\"11\">Recursive Subdivision</option>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl id=\"seed\">\r\n            <Tooltip label=\"The seed used by the random number generator.\">\r\n              <FormLabel>Seed</FormLabel>\r\n            </Tooltip>\r\n            <Input\r\n              name=\"seed\"\r\n              placeholder=\"Seed\"\r\n              value={this.props.data.seed}\r\n              onChange={this.handleSeedChange}\r\n            />\r\n          </FormControl>\r\n        </SimpleGrid>\r\n        <SimpleGrid columns={4} spacing=\"1em\" paddingBottom=\"1em\">\r\n          <FormControl id=\"width\">\r\n            <Tooltip label=\"The width of the maze to be generated.\">\r\n              <FormLabel>Width</FormLabel>\r\n            </Tooltip>\r\n            <Input\r\n              name=\"width\"\r\n              placeholder=\"Width\"\r\n              value={this.props.data.width}\r\n              onChange={this.handleWidthChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl id=\"height\">\r\n            <Tooltip label=\"The height of the maze to be generated.\">\r\n              <FormLabel>Height</FormLabel>\r\n            </Tooltip>\r\n            <Input\r\n              name=\"height\"\r\n              placeholder=\"Height\"\r\n              value={this.props.data.height}\r\n              onChange={this.handleHeightChange}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl id=\"weave\">\r\n            <Tooltip label=\"The percentage chance that a cell that fits the criteria for weaving is woven.\">\r\n              <FormLabel>Weave</FormLabel>\r\n            </Tooltip>\r\n            <InputGroup>\r\n              <Input\r\n                name=\"weave\"\r\n                placeholder=\"Weave\"\r\n                value={this.props.data.weave}\r\n                onChange={this.handleWeaveChange}\r\n              />\r\n              <InputRightAddon children=\"%\" />\r\n            </InputGroup>\r\n          </FormControl>\r\n          <FormControl id=\"deadEnd\">\r\n            <Tooltip label=\"The number of dead ends to be removed after the maze has been generated. At least one cell will always remain at the end of generation.\">\r\n              <FormLabel>Cull Dead Ends</FormLabel>\r\n            </Tooltip>\r\n            <Input\r\n              name=\"deadEnd\"\r\n              placeholder=\"Cull Dead Ends\"\r\n              value={this.props.data.cullDeadEnds}\r\n              onChange={this.handleDeadEndChange}\r\n            />\r\n          </FormControl>\r\n        </SimpleGrid>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {\r\n  Input,\r\n  FormControl,\r\n  FormLabel,\r\n  Select,\r\n  SimpleGrid,\r\n} from '@chakra-ui/react';\r\n\r\nimport { BinaryTreeData } from '../../../../lib/mazes';\r\n\r\nexport interface IBinaryTreeProps {\r\n  data: BinaryTreeData;\r\n  handleChange: (fieldName: string, value: number) => void;\r\n}\r\n\r\nexport interface IBinaryTreeState {}\r\n\r\nexport class BinaryTreeProperties extends React.Component<\r\n  IBinaryTreeProps,\r\n  IBinaryTreeState\r\n> {\r\n  constructor(props: IBinaryTreeProps) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.handleDirectionsChange = this.handleDirectionsChange.bind(this);\r\n    this.handleChanceVerticalChange =\r\n      this.handleChanceVerticalChange.bind(this);\r\n  }\r\n\r\n  handleDirectionsChange(event: React.FormEvent<HTMLSelectElement>) {\r\n    this.props.handleChange('directions', parseInt(event.currentTarget.value));\r\n  }\r\n\r\n  handleChanceVerticalChange(event: React.FormEvent<HTMLInputElement>) {\r\n    this.props.handleChange(\r\n      'chanceVertical',\r\n      parseInt(event.currentTarget.value)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <SimpleGrid columns={2} spacing=\"1em\" paddingBottom=\"1em\">\r\n        <FormControl id=\"directions\">\r\n          <FormLabel>Direction Choices</FormLabel>\r\n          <Select\r\n            name=\"directions\"\r\n            placeHolder=\"Directions\"\r\n            value={this.props.data.direction}\r\n            onChange={this.handleDirectionsChange}\r\n          >\r\n            <option value=\"1\">North & East</option>\r\n            <option value=\"2\">South & East</option>\r\n            <option value=\"3\">South & West</option>\r\n            <option value=\"4\">North & West</option>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl id=\"chanceVertical\">\r\n          <FormLabel>Vertical Chance</FormLabel>\r\n          <Input\r\n            name=\"chanceVertical\"\r\n            placeholder=\"Vertical Chance\"\r\n            value={this.props.data.chanceVertical}\r\n            onChange={this.handleChanceVerticalChange}\r\n          />\r\n        </FormControl>\r\n      </SimpleGrid>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {\r\n  Input,\r\n  FormControl,\r\n  FormLabel,\r\n  Select,\r\n  SimpleGrid,\r\n} from '@chakra-ui/react';\r\n\r\nimport { SidewinderData } from '../../../../lib/mazes';\r\n\r\nexport interface ISidewinderProps {\r\n  data: SidewinderData;\r\n  handleChange: (fieldName: string, value: number) => void;\r\n}\r\n\r\nexport interface ISidewinderState {}\r\n\r\nexport class SidewinderProperties extends React.Component<\r\n  ISidewinderProps,\r\n  ISidewinderState\r\n> {\r\n  constructor(props: ISidewinderProps) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.handleWindDirectionChange = this.handleWindDirectionChange.bind(this);\r\n    this.handleChanceWindChange = this.handleChanceWindChange.bind(this);\r\n    this.handleSideDirectionChange = this.handleSideDirectionChange.bind(this);\r\n  }\r\n\r\n  handleSideDirectionChange(event: React.FormEvent<HTMLSelectElement>) {\r\n    this.props.handleChange(\r\n      'sideDirection',\r\n      parseInt(event.currentTarget.value)\r\n    );\r\n  }\r\n\r\n  handleWindDirectionChange(event: React.FormEvent<HTMLSelectElement>) {\r\n    this.props.handleChange(\r\n      'windDirection',\r\n      parseInt(event.currentTarget.value)\r\n    );\r\n  }\r\n\r\n  handleChanceWindChange(event: React.FormEvent<HTMLInputElement>) {\r\n    this.props.handleChange(\r\n      'chanceVertical',\r\n      parseInt(event.currentTarget.value)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <SimpleGrid columns={2} spacing=\"1em\" paddingBottom=\"1em\">\r\n          <FormControl id=\"sideDirection\">\r\n            <FormLabel>Side Direction</FormLabel>\r\n            <Select\r\n              name=\"sideDirection\"\r\n              placeHolder=\"Side Direction\"\r\n              value={this.props.data.sideDirection}\r\n              onChange={this.handleSideDirectionChange}\r\n            >\r\n              <option value=\"0\">North</option>\r\n              <option value=\"1\">East</option>\r\n              <option value=\"2\">South</option>\r\n              <option value=\"3\">West</option>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl id=\"windDirection\">\r\n            <FormLabel>Wind Direction</FormLabel>\r\n            <Select\r\n              name=\"windDirection\"\r\n              placeHolder=\"Wind Direction\"\r\n              value={this.props.data.windDirection}\r\n              onChange={this.handleWindDirectionChange}\r\n            >\r\n              <option value=\"0\">North</option>\r\n              <option value=\"1\">East</option>\r\n              <option value=\"2\">South</option>\r\n              <option value=\"3\">West</option>\r\n            </Select>\r\n          </FormControl>\r\n        </SimpleGrid>\r\n        <SimpleGrid columns={2} spacing=\"1em\" paddingBottom=\"1em\">\r\n          <FormControl id=\"chanceWind\">\r\n            <FormLabel>Wind Chance</FormLabel>\r\n            <Input\r\n              name=\"chanceWind\"\r\n              placeholder=\"Wind Chance\"\r\n              value={this.props.data.chanceWind}\r\n              onChange={this.handleChanceWindChange}\r\n            />\r\n          </FormControl>\r\n        </SimpleGrid>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","export class RGBA {\r\n  r: number;\r\n  g: number;\r\n  b: number;\r\n  a: number;\r\n\r\n  constructor(r: number, g: number, b: number, a: number) {\r\n    this.r = r;\r\n    this.g = g;\r\n    this.b = b;\r\n    this.a = a;\r\n  }\r\n}\r\n\r\nexport const Black: RGBA = new RGBA(0, 0, 0, 255);\r\nexport const White: RGBA = new RGBA(255, 255, 255, 255);\r\n","import { RGBA } from './rgba';\r\n\r\nexport class Image extends ImageData {\r\n  GetPixel(x: number, y: number): RGBA {\r\n    return new RGBA(\r\n      this.data[this.width * x * 4 + y * 4],\r\n      this.data[this.width * x * 4 + y * 4 + 1],\r\n      this.data[this.width * x * 4 + y * 4 + 2],\r\n      this.data[this.width * x * 4 + y * 4 + 3]\r\n    );\r\n  }\r\n\r\n  SetPixel(x: number, y: number, c: RGBA) {\r\n    this.data[this.width * x * 4 + y * 4] = c.r;\r\n    this.data[this.width * x * 4 + y * 4 + 1] = c.g;\r\n    this.data[this.width * x * 4 + y * 4 + 2] = c.b;\r\n    this.data[this.width * x * 4 + y * 4 + 3] = c.a;\r\n  }\r\n\r\n  SetPixels(x: number, y: number, imgData: Image) {\r\n    for (let i: number = 0; i < imgData.width; i++) {\r\n      for (let j: number = 0; j < imgData.height; j++) {\r\n        this.SetPixel(i + x, j + y, imgData.GetPixel(i, j));\r\n      }\r\n    }\r\n  }\r\n\r\n  FlipOverY() {\r\n    let newData: Image = new Image(this.width, this.height);\r\n    for (let i: number = 0; i < this.width; i++) {\r\n      for (let j: number = 0; j < this.height; j++) {\r\n        newData.SetPixel(i, this.height - 1 - j, this.GetPixel(i, j));\r\n      }\r\n    }\r\n    for (let i: number = 0; i < this.data.length; i++) {\r\n      this.data[i] = newData.data[i];\r\n    }\r\n  }\r\n\r\n  FlipOverX() {\r\n    let newData: Image = new Image(this.width, this.height);\r\n    for (let i: number = 0; i < this.width; i++) {\r\n      for (let j: number = 0; j < this.height; j++) {\r\n        newData.SetPixel(this.width - 1 - i, j, this.GetPixel(i, j));\r\n      }\r\n    }\r\n    for (let i: number = 0; i < this.data.length; i++) {\r\n      this.data[i] = newData.data[i];\r\n    }\r\n  }\r\n\r\n  Transpose() {\r\n    let newData: Image = new Image(this.width, this.height);\r\n    for (let i: number = 0; i < this.width; i++) {\r\n      for (let j: number = 0; j < this.height; j++) {\r\n        newData.SetPixel(j, i, this.GetPixel(i, j));\r\n      }\r\n    }\r\n    for (let i: number = 0; i < this.data.length; i++) {\r\n      this.data[i] = newData.data[i];\r\n    }\r\n  }\r\n}\r\n","//Directions\r\n//3-sides point up: 0 - Northeast, 1 - South, 2 - Northwest\r\n//3-sides point down: 0 - North, 1 - Southeast, 2 - Southwest\r\n//4-sides : 0 - North, 1 - East, 2 - South, 3 - West\r\n//6-sides : 0 - North, 1 - Northeast, 2 - Southeast, 3 - South, 4 - Southwest, 5 - Northwest\r\n\r\nexport class Wall {\r\n  direction!: number;\r\n  isWall!: boolean;\r\n  isStairsDown!: boolean;\r\n  isStairsUp!: boolean;\r\n  weight: number;\r\n\r\n  constructor() {\r\n    this.weight = 0;\r\n  }\r\n\r\n  IsFlat(): boolean {\r\n    return !this.isWall && !this.isStairsUp && !this.isStairsDown;\r\n  }\r\n}\r\n","import { Image } from '../image-utils/image';\r\nimport { RGBA } from '../image-utils/rgba';\r\nimport { Wall } from './wall';\r\n\r\nexport class Cell {\r\n  x: number;\r\n  y: number;\r\n\r\n  visited!: boolean;\r\n  adjacentCells!: (Cell | undefined)[];\r\n  walls!: Wall[];\r\n  numCellSides: number;\r\n\r\n  set!: number;\r\n  masked!: boolean;\r\n\r\n  overCell!: Cell | undefined;\r\n  underCell!: Cell | undefined;\r\n\r\n  constructor(x: number, y: number, numCellSides: number = 4) {\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    this.visited = false;\r\n    this.set = 0;\r\n    this.masked = false;\r\n\r\n    this.adjacentCells = [];\r\n    this.walls = [];\r\n    this.numCellSides = numCellSides;\r\n\r\n    for (let i: number = 0; i < numCellSides; i++) {\r\n      let wall = new Wall();\r\n      wall.direction = i;\r\n      wall.isWall = false;\r\n      wall.isStairsUp = false;\r\n      wall.isStairsDown = false;\r\n      this.walls.push(wall);\r\n    }\r\n  }\r\n\r\n  SetWall(direction: number, isWall: boolean): void {\r\n    this.walls[direction].isWall = isWall;\r\n  }\r\n\r\n  SetWallAndStairs(\r\n    direction: number,\r\n    isWall: boolean,\r\n    isStairsUp: boolean,\r\n    isStairsDown: boolean\r\n  ): void {\r\n    this.walls[direction].isWall = isWall;\r\n    this.walls[direction].isStairsUp = isStairsUp;\r\n    this.walls[direction].isStairsDown = isStairsDown;\r\n  }\r\n\r\n  CanTunnel(): boolean {\r\n    let i: number = 0;\r\n    let canTunnel: boolean = false;\r\n    do {\r\n      canTunnel = this.CanTunnelDirection(i);\r\n      i++;\r\n    } while (!canTunnel && i < this.adjacentCells.length);\r\n    return canTunnel;\r\n  }\r\n\r\n  CanTunnelDirection(direction: number): boolean {\r\n    let canTunnel: boolean = false;\r\n\r\n    canTunnel =\r\n      this.adjacentCells[direction] !== undefined &&\r\n      this.adjacentCells[direction]?.underCell === undefined &&\r\n      this.adjacentCells[direction]?.adjacentCells[direction] !== undefined &&\r\n      this.checkPassage(direction) &&\r\n      (this.adjacentCells[direction] as Cell).adjacentCells[(direction + 1) % 4]\r\n        ?.underCell === undefined &&\r\n      (this.adjacentCells[direction] as Cell).adjacentCells[(direction + 3) % 4]\r\n        ?.underCell === undefined;\r\n    return canTunnel;\r\n  }\r\n\r\n  private checkPassage(direction: number): boolean {\r\n    let retVal: boolean = false;\r\n\r\n    if (direction === 0 || direction === 2) {\r\n      retVal =\r\n        (this.adjacentCells[direction] as Cell).walls[0].isWall &&\r\n        !(this.adjacentCells[direction] as Cell).walls[1].isWall &&\r\n        (this.adjacentCells[direction] as Cell).walls[2].isWall &&\r\n        !(this.adjacentCells[direction] as Cell).walls[3].isWall;\r\n    } else {\r\n      retVal =\r\n        !(this.adjacentCells[direction] as Cell).walls[0].isWall &&\r\n        (this.adjacentCells[direction] as Cell).walls[1].isWall &&\r\n        !(this.adjacentCells[direction] as Cell).walls[2].isWall &&\r\n        (this.adjacentCells[direction] as Cell).walls[3].isWall;\r\n    }\r\n\r\n    return retVal;\r\n  }\r\n\r\n  ColumnExists(direction: number): boolean | undefined {\r\n    let retVal: boolean | undefined = true;\r\n    if (this.numCellSides === 4) {\r\n      retVal =\r\n        this.adjacentCells[direction] !== undefined &&\r\n        this.walls[direction] !== undefined &&\r\n        this.walls[direction].IsFlat() &&\r\n        this.adjacentCells[direction]?.adjacentCells[(direction + 1) % 4] !==\r\n          undefined &&\r\n        this.adjacentCells[direction]?.walls[(direction + 1) % 4].IsFlat() &&\r\n        this.adjacentCells[direction]?.adjacentCells[(direction + 1) % 4]\r\n          ?.adjacentCells[(direction + 2) % 4] !== undefined &&\r\n        this.adjacentCells[direction]?.adjacentCells[\r\n          (direction + 1) % 4\r\n        ]?.walls[(direction + 2) % 4].IsFlat() &&\r\n        this.adjacentCells[direction]?.adjacentCells[(direction + 1) % 4]\r\n          ?.adjacentCells[(direction + 2) % 4]?.adjacentCells[\r\n          (direction + 3) % 4\r\n        ] !== undefined &&\r\n        this.adjacentCells[direction]?.adjacentCells[\r\n          (direction + 1) % 4\r\n        ]?.adjacentCells[(direction + 2) % 4]?.walls[\r\n          (direction + 3) % 4\r\n        ].IsFlat();\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  Display(dimension: number, wallColor: RGBA, floorColor: RGBA): Image {\r\n    let imgData = new Image(dimension, dimension);\r\n    let paintColor: RGBA = floorColor;\r\n\r\n    for (let i: number = 0; i < dimension; i++) {\r\n      for (let j: number = 0; j < dimension; j++) {\r\n        imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    }\r\n\r\n    //Columns\r\n\r\n    //NE\r\n    paintColor = this.ColumnExists(0) ? floorColor : wallColor;\r\n    for (let i: number = dimension - dimension / 4; i < dimension; i++) {\r\n      for (let j: number = dimension - dimension / 4; j < dimension; j++) {\r\n        imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    }\r\n\r\n    //SE\r\n    paintColor = this.ColumnExists(1) ? floorColor : wallColor;\r\n    for (let i: number = dimension - dimension / 4; i < dimension; i++) {\r\n      for (let j: number = 0; j < dimension / 4; j++) {\r\n        imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    }\r\n\r\n    //SW\r\n    paintColor = this.ColumnExists(2) ? floorColor : wallColor;\r\n    for (let i: number = 0; i < dimension / 4; i++) {\r\n      for (let j: number = 0; j < dimension / 4; j++) {\r\n        imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    }\r\n\r\n    //NW\r\n    paintColor = this.ColumnExists(3) ? floorColor : wallColor;\r\n    for (let i: number = 0; i < dimension / 4; i++) {\r\n      for (let j: number = dimension - dimension / 4; j < dimension; j++) {\r\n        imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    }\r\n\r\n    //Walls\r\n\r\n    //North\r\n    if (this.walls[0].isWall) {\r\n      paintColor = this.walls[0].isWall ? wallColor : floorColor;\r\n      for (let i: number = dimension / 4; i < dimension - dimension / 4; i++) {\r\n        for (\r\n          let j: number = dimension - dimension / 4;\r\n          j < dimension - dimension / 8;\r\n          j++\r\n        )\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n      paintColor =\r\n        this.underCell === undefined || this.underCell.walls[0].isWall\r\n          ? wallColor\r\n          : floorColor;\r\n      for (let i: number = dimension / 4; i < dimension - dimension / 4; i++) {\r\n        for (let j: number = dimension - dimension / 8; j < dimension; j++)\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    } else {\r\n      paintColor = floorColor;\r\n      for (let i: number = dimension / 4; i < dimension - dimension / 4; i++) {\r\n        for (let j: number = dimension - dimension / 4; j < dimension; j++)\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    }\r\n\r\n    //East\r\n    if (this.walls[1].isWall) {\r\n      paintColor = this.walls[1].isWall ? wallColor : floorColor;\r\n      for (let j: number = dimension / 4; j < dimension - dimension / 4; j++) {\r\n        for (\r\n          let i: number = dimension - dimension / 4;\r\n          i < dimension - dimension / 8;\r\n          i++\r\n        )\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n      paintColor =\r\n        this.underCell === undefined || this.underCell.walls[1].isWall\r\n          ? wallColor\r\n          : floorColor;\r\n      for (let j: number = dimension / 4; j < dimension - dimension / 4; j++) {\r\n        for (let i: number = dimension - dimension / 8; i < dimension; i++)\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    } else {\r\n      paintColor = floorColor;\r\n      for (let j: number = dimension / 4; j < dimension - dimension / 4; j++) {\r\n        for (let i: number = dimension - dimension / 4; i < dimension; i++)\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    }\r\n\r\n    //South\r\n    if (this.walls[2].isWall) {\r\n      paintColor = this.walls[2].isWall ? wallColor : floorColor;\r\n      for (let i: number = dimension / 4; i < dimension - dimension / 4; i++) {\r\n        for (let j: number = dimension / 8; j < dimension / 4; j++)\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n      paintColor =\r\n        this.underCell === undefined || this.underCell.walls[2].isWall\r\n          ? wallColor\r\n          : floorColor;\r\n      for (let i: number = dimension / 4; i < dimension - dimension / 4; i++) {\r\n        for (let j: number = 0; j < dimension / 8; j++)\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    } else {\r\n      paintColor = floorColor;\r\n      for (let i: number = dimension / 4; i < dimension - dimension / 4; i++) {\r\n        for (let j: number = 0; j < dimension / 4; j++)\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    }\r\n\r\n    //West\r\n    if (this.walls[3].isWall) {\r\n      paintColor = this.walls[3].isWall ? wallColor : floorColor;\r\n      for (let j: number = dimension / 4; j < dimension - dimension / 4; j++) {\r\n        for (let i: number = dimension / 8; i < dimension / 4; i++)\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n      paintColor =\r\n        this.underCell === undefined || this.underCell.walls[3].isWall\r\n          ? wallColor\r\n          : floorColor;\r\n      for (let j: number = dimension / 4; j < dimension - dimension / 4; j++) {\r\n        for (let i: number = 0; i < dimension / 8; i++)\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    } else {\r\n      paintColor = floorColor;\r\n      for (let j: number = dimension / 4; j < dimension - dimension / 4; j++) {\r\n        for (let i: number = 0; i < dimension / 4; i++)\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    }\r\n\r\n    if (this.walls.filter((a) => a.isWall).length === 4) {\r\n      paintColor = wallColor;\r\n      for (let i: number = 0; i < dimension; i++) {\r\n        for (let j: number = 0; j < dimension; j++)\r\n          imgData.SetPixel(i, j, paintColor);\r\n      }\r\n    }\r\n\r\n    return imgData;\r\n  }\r\n\r\n  GetWeightDirection(weight: number) {\r\n    let retVal: number = -1;\r\n    let i: number = 0;\r\n    do {\r\n      if (this.walls[i].weight === weight) {\r\n        retVal = i;\r\n      }\r\n      i++;\r\n    } while (retVal === -1 || i < this.numCellSides);\r\n    return retVal;\r\n  }\r\n\r\n  GetCellDirection(nextCell: Cell): number {\r\n    let retVal: number = -1;\r\n    let i: number = 0;\r\n    do {\r\n      if (\r\n        this.adjacentCells[i] !== undefined &&\r\n        (this.adjacentCells[i] as Cell).x === nextCell.x &&\r\n        (this.adjacentCells[i] as Cell).y === nextCell.y\r\n      ) {\r\n        retVal = i;\r\n      }\r\n      i++;\r\n    } while (retVal === -1 || i < this.numCellSides);\r\n    return retVal;\r\n  }\r\n\r\n  ToString(): string {\r\n    return '(' + this.x.toString() + ',' + this.y.toString() + ')';\r\n  }\r\n}\r\n","import { Cell } from './cell';\r\n\r\nimport { Image } from '../image-utils/image';\r\nimport { Black, RGBA, White } from '../image-utils/rgba';\r\n\r\nexport class Grid {\r\n  width: number;\r\n  height: number;\r\n  numCellSides: number;\r\n  cells: Cell[][];\r\n\r\n  constructor(width: number, height: number, numCellSides: number) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.numCellSides = numCellSides;\r\n    this.cells = [];\r\n\r\n    for (let i: number = 0; i < width; i++) {\r\n      this.cells[i] = [];\r\n      for (let j: number = 0; j < height; j++) {\r\n        this.cells[i][j] = new Cell(i, j, numCellSides);\r\n      }\r\n    }\r\n  }\r\n\r\n  InitializeGrid(): void {\r\n    for (let i: number = 0; i < this.width; i++) {\r\n      for (let j: number = 0; j < this.height; j++) {\r\n        if (!this.cells[i][j].masked) {\r\n          if (this.numCellSides === 4) {\r\n            //North\r\n            if (j < this.height - 1) {\r\n              this.cells[i][j].adjacentCells.push(\r\n                !this.cells[i][j + 1].masked ? this.cells[i][j + 1] : undefined\r\n              );\r\n            } else {\r\n              this.cells[i][j].adjacentCells.push(undefined);\r\n            }\r\n            //East\r\n            if (i < this.width - 1) {\r\n              this.cells[i][j].adjacentCells.push(\r\n                !this.cells[i + 1][j].masked ? this.cells[i + 1][j] : undefined\r\n              );\r\n            } else {\r\n              this.cells[i][j].adjacentCells.push(undefined);\r\n            }\r\n            //South\r\n            if (j > 0) {\r\n              this.cells[i][j].adjacentCells.push(\r\n                !this.cells[i][j - 1].masked ? this.cells[i][j - 1] : undefined\r\n              );\r\n            } else {\r\n              this.cells[i][j].adjacentCells.push(undefined);\r\n            }\r\n            //West\r\n            if (i > 0) {\r\n              this.cells[i][j].adjacentCells.push(\r\n                !this.cells[i - 1][j].masked ? this.cells[i - 1][j] : undefined\r\n              );\r\n            } else {\r\n              this.cells[i][j].adjacentCells.push(undefined);\r\n            }\r\n          }\r\n\r\n          for (let w: number = 0; w < this.numCellSides; w++) {\r\n            this.cells[i][j].SetWall(w, true);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  Display(dimension: number): Image {\r\n    const size: number = Math.max(this.width, this.height);\r\n    const wallColor: RGBA = Black;\r\n    const floorColor: RGBA = White;\r\n\r\n    let imgData = new Image(size * dimension, size * dimension);\r\n    for (let i: number = 0; i < size * dimension; i++) {\r\n      for (let j: number = 0; j < size * dimension; j++) {\r\n        imgData.SetPixel(i, j, floorColor);\r\n      }\r\n    }\r\n\r\n    let iOffset: number = 0,\r\n      jOffset: number = 0;\r\n    if (this.width < this.height) {\r\n      iOffset = Math.floor((this.height - this.width) / 2);\r\n    } else if (this.width > this.height) {\r\n      jOffset = Math.floor((this.width - this.height) / 2);\r\n    }\r\n\r\n    for (let i: number = 0; i < this.width; i++) {\r\n      for (let j: number = 0; j < this.height; j++) {\r\n        let cellImgData = this.cells[i][j].Display(\r\n          dimension,\r\n          wallColor,\r\n          floorColor\r\n        );\r\n        imgData.SetPixels(\r\n          (i + iOffset) * dimension,\r\n          (j + jOffset) * dimension,\r\n          cellImgData\r\n        );\r\n      }\r\n    }\r\n\r\n    imgData.Transpose();\r\n    imgData.FlipOverX();\r\n\r\n    return imgData;\r\n  }\r\n}\r\n","export class Random {\r\n  seed: number;\r\n  private i: number = 0;\r\n\r\n  constructor(seed: number) {\r\n    this.seed = seed;\r\n  }\r\n\r\n  GetInt(max: number) {\r\n    return Math.floor(this.mulberry32() * max);\r\n  }\r\n\r\n  GetIntInRange(min: number, max: number) {\r\n    return Math.floor(this.mulberry32() * (max - min)) + min;\r\n  }\r\n\r\n  private mulberry32(): number {\r\n    this.i++;\r\n    let t: number = (this.seed + this.i) ^ 0x6d2b79f5;\r\n    t = Math.imul(t ^ (t >>> 15), t | 1);\r\n    t ^= t + Math.imul(t ^ (t >>> 7), t | 61);\r\n    return ((t ^ (t >>> 14)) >>> 0) / 4294967296;\r\n  }\r\n}\r\n","import { Cell } from '../maze-parts/cell';\r\nimport { Grid } from '../maze-parts/grid';\r\nimport { Image } from '../image-utils/image';\r\nimport { Random } from '../utils/random';\r\n\r\nexport class GeneratorData {\r\n  height: number;\r\n  width: number;\r\n  numCellSides: number;\r\n  seed: number;\r\n  grid!: Grid;\r\n  weave: number;\r\n  cullDeadEnds: number;\r\n  generator: number;\r\n\r\n  constructor() {\r\n    this.generator = 1;\r\n    this.width = 10;\r\n    this.height = 10;\r\n    this.numCellSides = 4;\r\n    this.seed = 1337;\r\n    this.weave = 0;\r\n    this.cullDeadEnds = 0;\r\n  }\r\n}\r\n\r\nexport class Generator {\r\n  baseProps: GeneratorData;\r\n  grid!: Grid;\r\n  random!: Random;\r\n\r\n  constructor(baseProps: GeneratorData) {\r\n    this.baseProps = baseProps;\r\n    if (\r\n      baseProps.cullDeadEnds >\r\n      this.baseProps.width * this.baseProps.height - 1\r\n    ) {\r\n      baseProps.cullDeadEnds = this.baseProps.width * this.baseProps.height - 1;\r\n    }\r\n  }\r\n\r\n  RunGenerator(): void {\r\n    this.random = new Random(this.baseProps.seed);\r\n    this.grid = new Grid(\r\n      this.baseProps.width,\r\n      this.baseProps.height,\r\n      this.baseProps.numCellSides\r\n    );\r\n    this.grid.InitializeGrid();\r\n\r\n    this.Generate();\r\n    this.Weave();\r\n    this.RemoveDeadEnds();\r\n  }\r\n\r\n  protected Generate(): void {}\r\n\r\n  protected Weave(): void {\r\n    if (this.baseProps.weave > 0) {\r\n      let mapCells: Cell[] = [];\r\n      for (let i: number = 0; i < this.baseProps.width; i++) {\r\n        for (let j: number = 0; j < this.baseProps.height; j++) {\r\n          if (\r\n            !this.grid.cells[i][j].masked &&\r\n            this.grid.cells[i][j].CanTunnel()\r\n          ) {\r\n            mapCells.push(this.grid.cells[i][j]);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (mapCells.length > 0) {\r\n        for (let i: number = 0; i < mapCells.length; i++) {\r\n          if (mapCells[i].CanTunnel()) {\r\n            if (this.baseProps.weave >= this.random.GetInt(100)) {\r\n              this.chooseTunnelDirection(mapCells[i]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private chooseTunnelDirection(currentCell: Cell): void {\r\n    let directions: number[] = [];\r\n    for (let i: number = 0; i < currentCell.numCellSides; i++) {\r\n      if (currentCell.CanTunnelDirection(i)) {\r\n        directions.push(i);\r\n      }\r\n    }\r\n\r\n    this.tunnelCells(\r\n      currentCell,\r\n      directions[this.random.GetInt(directions.length)]\r\n    );\r\n  }\r\n\r\n  private tunnelCells(currentCell: Cell, direction: number): void {\r\n    let nearCell: Cell = currentCell.adjacentCells[direction] as Cell;\r\n    let farCell: Cell = nearCell.adjacentCells[direction] as Cell;\r\n\r\n    nearCell.underCell = new Cell(\r\n      nearCell.x,\r\n      nearCell.y,\r\n      nearCell.numCellSides\r\n    );\r\n    nearCell.underCell.overCell = nearCell;\r\n\r\n    currentCell.SetWallAndStairs(direction, false, true, false);\r\n\r\n    nearCell.underCell.SetWallAndStairs(direction, false, false, true);\r\n    nearCell.underCell.SetWallAndStairs(\r\n      (direction + 2) % 4,\r\n      false,\r\n      false,\r\n      true\r\n    );\r\n    nearCell.underCell.SetWallAndStairs(\r\n      (direction + 1) % 4,\r\n      true,\r\n      false,\r\n      false\r\n    );\r\n    nearCell.underCell.SetWallAndStairs(\r\n      (direction + 3) % 4,\r\n      true,\r\n      false,\r\n      false\r\n    );\r\n\r\n    farCell.SetWallAndStairs((direction + 2) % 4, false, true, false);\r\n\r\n    nearCell.SetWallAndStairs((direction + 1) % 4, false, true, false);\r\n    nearCell.SetWallAndStairs((direction + 3) % 4, false, true, false);\r\n\r\n    nearCell.adjacentCells[(direction + 3) % 4]?.SetWallAndStairs(\r\n      (direction + 1) % 4,\r\n      false,\r\n      false,\r\n      true\r\n    );\r\n    nearCell.adjacentCells[(direction + 1) % 4]?.SetWallAndStairs(\r\n      (direction + 3) % 4,\r\n      false,\r\n      false,\r\n      true\r\n    );\r\n  }\r\n\r\n  protected RemoveDeadEnds(): void {\r\n    if (this.baseProps.cullDeadEnds > 0) {\r\n      let mapCells: Cell[] = [];\r\n      for (let i: number = 0; i < this.baseProps.width; i++) {\r\n        for (let j: number = 0; j < this.baseProps.height; j++) {\r\n          if (!this.grid.cells[i][j].masked) {\r\n            mapCells.push(this.grid.cells[i][j]);\r\n          }\r\n        }\r\n      }\r\n\r\n      let numProcessed: number = 0;\r\n      let currentCell: Cell;\r\n      let nextCell: Cell;\r\n      let direction: number = 0;\r\n      do {\r\n        currentCell = mapCells.filter(\r\n          (a) => a.walls.filter((b) => b.isWall).length === 3\r\n        )[\r\n          this.random.GetInt(\r\n            mapCells.filter((a) => a.walls.filter((b) => b.isWall).length === 3)\r\n              .length\r\n          )\r\n        ];\r\n\r\n        direction = currentCell.walls.filter((a) => !a.isWall)[0].direction;\r\n        nextCell = currentCell.walls[direction].isStairsDown\r\n          ? ((currentCell.adjacentCells[direction] as Cell).underCell as Cell)\r\n          : (currentCell.adjacentCells[direction] as Cell);\r\n\r\n        currentCell.SetWallAndStairs(direction, true, false, false);\r\n        nextCell.SetWallAndStairs((direction + 2) % 4, true, false, false);\r\n\r\n        numProcessed++;\r\n      } while (\r\n        numProcessed < this.baseProps.cullDeadEnds &&\r\n        mapCells.filter((a) => a.walls.filter((b) => b.isWall).length === 3)\r\n          .length > 0\r\n      );\r\n\r\n      if (mapCells.filter((a) => a.underCell !== undefined).length > 0) {\r\n        mapCells\r\n          .filter((a) => a.underCell !== undefined)\r\n          .forEach((a) => {\r\n            if (\r\n              a.walls.filter((b) => b.isWall).length !== 2 ||\r\n              (a.underCell as Cell).walls.filter((b) => b.isWall).length !== 2\r\n            ) {\r\n              for (let k: number = 0; k < a.numCellSides; k++) {\r\n                (a.underCell as Cell).SetWallAndStairs(k, true, false, false);\r\n                (a.adjacentCells[k] as Cell).SetWallAndStairs(\r\n                  (k + 2) % 4,\r\n                  true,\r\n                  false,\r\n                  false\r\n                );\r\n              }\r\n              a.underCell = undefined;\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  protected MergeCells(currentCell: Cell, nextCell: Cell | undefined): void {\r\n    if (this.baseProps.numCellSides === 4) {\r\n      if (\r\n        currentCell.adjacentCells[0] !== undefined &&\r\n        currentCell.adjacentCells[0]?.x === nextCell?.x &&\r\n        currentCell.adjacentCells[0]?.y === nextCell?.y\r\n      ) {\r\n        currentCell.SetWall(0, false);\r\n        nextCell.SetWall(2, false);\r\n      } else if (\r\n        currentCell.adjacentCells[1] !== undefined &&\r\n        currentCell.adjacentCells[1]?.x === nextCell?.x &&\r\n        currentCell.adjacentCells[1]?.y === nextCell?.y\r\n      ) {\r\n        currentCell.SetWall(1, false);\r\n        nextCell.SetWall(3, false);\r\n      } else if (\r\n        currentCell.adjacentCells[2] !== undefined &&\r\n        currentCell.adjacentCells[2]?.x === nextCell?.x &&\r\n        currentCell.adjacentCells[2]?.y === nextCell?.y\r\n      ) {\r\n        currentCell.SetWall(2, false);\r\n        nextCell.SetWall(0, false);\r\n      } else if (\r\n        currentCell.adjacentCells[3] !== undefined &&\r\n        currentCell.adjacentCells[3]?.x === nextCell?.x &&\r\n        currentCell.adjacentCells[3]?.y === nextCell?.y\r\n      ) {\r\n        currentCell.SetWall(3, false);\r\n        nextCell.SetWall(1, false);\r\n      }\r\n    }\r\n  }\r\n\r\n  Display(dimension: number): Image {\r\n    return this.grid.Display(dimension);\r\n  }\r\n}\r\n","import { Cell } from '../maze-parts/cell';\r\nimport { Generator, GeneratorData } from './generator';\r\n\r\nexport class AldousBroderData {\r\n  direction: number; //1 = NE, 2 = SE, 3 = SW, 4 = NW\r\n  chanceVertical: number; //1 - 99\r\n\r\n  constructor() {\r\n    this.direction = 1;\r\n    this.chanceVertical = 50;\r\n  }\r\n}\r\n\r\nexport class AldousBroder extends Generator {\r\n  props: AldousBroderData;\r\n\r\n  constructor(baseProps: GeneratorData, props: AldousBroderData) {\r\n    super(baseProps);\r\n    this.props = props;\r\n  }\r\n\r\n  Generate(): void {\r\n    let adjacentCount: number = 0;\r\n    let mapCells: Cell[] = [];\r\n    let currentCell: Cell;\r\n    let nextCell: Cell | undefined;\r\n\r\n    for (let i: number = 0; i < this.baseProps.width; i++) {\r\n      for (let j: number = 0; j < this.baseProps.height; j++) {\r\n        if (!this.grid.cells[i][j].masked) {\r\n          mapCells.push(this.grid.cells[i][j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    currentCell = mapCells[this.random.GetInt(mapCells.length)];\r\n    do {\r\n      currentCell.visited = true;\r\n      adjacentCount = currentCell.adjacentCells.filter(\r\n        (a) => a !== undefined\r\n      ).length;\r\n      nextCell = currentCell.adjacentCells.filter((a) => a !== undefined)[\r\n        this.random.GetInt(adjacentCount)\r\n      ];\r\n      if (!nextCell?.visited) {\r\n        this.MergeCells(currentCell, nextCell);\r\n      }\r\n      currentCell = nextCell as Cell;\r\n      nextCell = undefined;\r\n    } while (mapCells.some((a) => !a.visited));\r\n  }\r\n}\r\n","import { Generator, GeneratorData } from './generator';\r\n\r\nexport class BinaryTreeData {\r\n  direction: number; //1 = NE, 2 = SE, 3 = SW, 4 = NW\r\n  chanceVertical: number; //1 - 99\r\n\r\n  constructor() {\r\n    this.direction = 1;\r\n    this.chanceVertical = 50;\r\n  }\r\n}\r\n\r\nexport class BinaryTree extends Generator {\r\n  props: BinaryTreeData;\r\n\r\n  constructor(baseProps: GeneratorData, props: BinaryTreeData) {\r\n    super(baseProps);\r\n    this.props = props;\r\n  }\r\n\r\n  Generate(): void {\r\n    let randResult: number = 0;\r\n    const verticalCell: number =\r\n      this.props.direction === 1 || this.props.direction === 4 ? 0 : 2;\r\n    const horizontalCell: number =\r\n      this.props.direction === 1 || this.props.direction === 2 ? 1 : 3;\r\n\r\n    for (let i: number = 0; i < this.baseProps.width; i++) {\r\n      for (let j: number = 0; j < this.baseProps.height; j++) {\r\n        if (this.baseProps.numCellSides === 4) {\r\n          if (\r\n            this.grid.cells[i][j]?.adjacentCells[verticalCell] !== undefined &&\r\n            this.grid.cells[i][j]?.adjacentCells[horizontalCell] !== undefined\r\n          ) {\r\n            randResult = this.random.GetInt(100);\r\n            if (randResult < this.props.chanceVertical) {\r\n              this.MergeCells(\r\n                this.grid.cells[i][j],\r\n                this.grid.cells[i][j].adjacentCells[verticalCell]\r\n              );\r\n            } else {\r\n              this.MergeCells(\r\n                this.grid.cells[i][j],\r\n                this.grid.cells[i][j].adjacentCells[horizontalCell]\r\n              );\r\n            }\r\n          } else if (\r\n            this.grid.cells[i][j]?.adjacentCells[verticalCell] !== undefined\r\n          ) {\r\n            this.MergeCells(\r\n              this.grid.cells[i][j],\r\n              this.grid.cells[i][j].adjacentCells[verticalCell]\r\n            );\r\n          } else if (\r\n            this.grid.cells[i][j]?.adjacentCells[horizontalCell] !== undefined\r\n          ) {\r\n            this.MergeCells(\r\n              this.grid.cells[i][j],\r\n              this.grid.cells[i][j].adjacentCells[horizontalCell]\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Cell } from '../maze-parts/cell';\r\nimport { Generator, GeneratorData } from './generator';\r\n\r\nexport class GrowingTreeData {\r\n  direction: number;\r\n  chanceVertical: number;\r\n\r\n  constructor() {\r\n    this.direction = 1;\r\n    this.chanceVertical = 50;\r\n  }\r\n}\r\n\r\nexport class GrowingTree extends Generator {\r\n  props: GrowingTreeData;\r\n\r\n  constructor(baseProps: GeneratorData, props: GrowingTreeData) {\r\n    super(baseProps);\r\n    this.props = props;\r\n  }\r\n\r\n  Generate(): void {\r\n    let mapCells: Cell[] = [];\r\n    let usedCells: Cell[] = [];\r\n    let currentCell: Cell;\r\n    let nextCell: Cell | undefined;\r\n    let pickCount: number;\r\n    let adjacentCount: number;\r\n\r\n    for (let i: number = 0; i < this.baseProps.width; i++) {\r\n      for (let j: number = 0; j < this.baseProps.height; j++) {\r\n        if (!this.grid.cells[i][j].masked) {\r\n          mapCells.push(this.grid.cells[i][j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    currentCell = mapCells[this.random.GetInt(mapCells.length)];\r\n    currentCell.visited = true;\r\n    usedCells.push(currentCell);\r\n    do {\r\n      do {\r\n        pickCount = usedCells.filter((a) =>\r\n          a.adjacentCells.some((b) => b !== undefined && !b.visited)\r\n        ).length;\r\n        currentCell = usedCells.filter((a) =>\r\n          a.adjacentCells.some((b) => b !== undefined && !b.visited)\r\n        )[this.random.GetInt(pickCount)];\r\n      } while (\r\n        !currentCell.adjacentCells.some((a) => a !== undefined && !a.visited)\r\n      );\r\n\r\n      adjacentCount = currentCell.adjacentCells.filter(\r\n        (a) => a !== undefined && !a.visited\r\n      ).length;\r\n      nextCell = currentCell.adjacentCells.filter(\r\n        (a) => a !== undefined && !a.visited\r\n      )[this.random.GetInt(adjacentCount)];\r\n      (nextCell as Cell).visited = true;\r\n      this.MergeCells(currentCell, nextCell);\r\n      usedCells.push(nextCell as Cell);\r\n    } while (mapCells.some((a) => !a.visited));\r\n  }\r\n}\r\n","import { Cell } from '../maze-parts/cell';\r\nimport { Generator, GeneratorData } from './generator';\r\n\r\nexport class HuntAndKillData {\r\n  direction: number; //1 = NE, 2 = SE, 3 = SW, 4 = NW\r\n  chanceVertical: number; //1 - 99\r\n\r\n  constructor() {\r\n    this.direction = 1;\r\n    this.chanceVertical = 50;\r\n  }\r\n}\r\n\r\nexport class HuntAndKill extends Generator {\r\n  props: HuntAndKillData;\r\n\r\n  constructor(baseProps: GeneratorData, props: HuntAndKillData) {\r\n    super(baseProps);\r\n    this.props = props;\r\n  }\r\n\r\n  Generate(): void {\r\n    let mapCells: Cell[] = [];\r\n    let currentCell: Cell | undefined;\r\n    let nextCell: Cell | undefined;\r\n    let adjacentCount: number = 0;\r\n\r\n    for (let i: number = 0; i < this.baseProps.width; i++) {\r\n      for (let j: number = 0; j < this.baseProps.height; j++) {\r\n        if (!this.grid.cells[i][j].masked) {\r\n          mapCells.push(this.grid.cells[i][j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    currentCell = mapCells[this.random.GetInt(mapCells.length)];\r\n    currentCell.visited = true;\r\n\r\n    do {\r\n      adjacentCount = (currentCell as Cell).adjacentCells.filter(\r\n        (a) => a !== undefined\r\n      ).length;\r\n      nextCell = (currentCell as Cell).adjacentCells.filter(\r\n        (a) => a !== undefined\r\n      )[this.random.GetInt(adjacentCount)] as Cell;\r\n\r\n      if (!nextCell.visited) {\r\n        this.MergeCells(currentCell as Cell, nextCell);\r\n        currentCell = nextCell;\r\n        currentCell.visited = true;\r\n      } else {\r\n        currentCell = undefined;\r\n        let i = this.baseProps.width - 1;\r\n        let j = this.baseProps.height - 1;\r\n\r\n        do {\r\n          i = this.baseProps.width - 1;\r\n          do {\r\n            if (\r\n              !this.grid.cells[i][j].visited &&\r\n              this.grid.cells[i][j].adjacentCells.some(\r\n                (a) => a !== undefined && a.visited\r\n              )\r\n            ) {\r\n              currentCell = this.grid.cells[i][j];\r\n            }\r\n            i--;\r\n          } while (currentCell === undefined && i >= 0);\r\n          j--;\r\n        } while (currentCell === undefined && j >= 0);\r\n\r\n        this.MergeCells(\r\n          currentCell as Cell,\r\n          (currentCell as Cell).adjacentCells.filter(\r\n            (a) => a !== undefined && a.visited\r\n          )[0]\r\n        );\r\n        (currentCell as Cell).visited = true;\r\n      }\r\n    } while (mapCells.some((a) => !a.visited));\r\n  }\r\n}\r\n","import { Cell } from '../';\r\nimport { Generator, GeneratorData } from './generator';\r\n\r\nexport class KruskalData {\r\n  direction: number; //1 = NE, 2 = SE, 3 = SW, 4 = NW\r\n  chanceVertical: number; //1 - 99\r\n\r\n  constructor() {\r\n    this.direction = 1;\r\n    this.chanceVertical = 50;\r\n  }\r\n}\r\n\r\nexport class Kruskal extends Generator {\r\n  props: KruskalData;\r\n\r\n  constructor(baseProps: GeneratorData, props: KruskalData) {\r\n    super(baseProps);\r\n    this.props = props;\r\n  }\r\n\r\n  Generate(): void {\r\n    let mapCells: Cell[] = [];\r\n    let currentCell: Cell | undefined;\r\n    let nextCell: Cell | undefined;\r\n    let currentWeight: number = 1;\r\n    let nextSetNumber: number = 1;\r\n    let direction: number;\r\n\r\n    for (let i: number = 0; i < this.baseProps.width; i++) {\r\n      for (let j: number = 0; j < this.baseProps.height; j++) {\r\n        if (!this.grid.cells[i][j].masked) {\r\n          for (let k: number = 0; k < this.grid.numCellSides; k++) {\r\n            if (\r\n              this.grid.cells[i][j].adjacentCells[k] !== undefined &&\r\n              this.grid.cells[i][j].walls[k].weight === 0\r\n            ) {\r\n              let weight = this.random.GetIntInRange(1, 100);\r\n              this.grid.cells[i][j].walls[k].weight = weight;\r\n              (this.grid.cells[i][j].adjacentCells[k] as Cell).walls[\r\n                (k + this.grid.numCellSides / 2) % this.grid.numCellSides\r\n              ].weight = weight;\r\n            }\r\n          }\r\n          mapCells.push(this.grid.cells[i][j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    do {\r\n      while (\r\n        mapCells.some((a) => a.walls.some((b) => b.weight === currentWeight))\r\n      ) {\r\n        currentCell = mapCells.filter((a) =>\r\n          a.walls.some((b) => b.weight === currentWeight)\r\n        )[0];\r\n\r\n        nextCell = currentCell.adjacentCells.filter(\r\n          (a) =>\r\n            a !== undefined &&\r\n            a.walls.some(\r\n              (b) =>\r\n                b.weight === currentWeight &&\r\n                b.direction ===\r\n                  ((currentCell as Cell).GetWeightDirection(currentWeight) +\r\n                    this.grid.numCellSides / 2) %\r\n                    this.grid.numCellSides\r\n            )\r\n        )[0];\r\n\r\n        if (currentCell.set === 0 || (nextCell as Cell).set === 0) {\r\n          if (currentCell.set === 0 && (nextCell as Cell).set === 0) {\r\n            currentCell.set = nextSetNumber;\r\n            (nextCell as Cell).set = nextSetNumber;\r\n            nextSetNumber++;\r\n          } else if (currentCell.set === 0 && (nextCell as Cell).set > 0) {\r\n            currentCell.set = (nextCell as Cell).set;\r\n          } else if (currentCell.set > 0 && (nextCell as Cell).set === 0) {\r\n            (nextCell as Cell).set = currentCell.set;\r\n          }\r\n\r\n          this.MergeCells(currentCell, nextCell);\r\n          direction = currentCell.GetCellDirection(nextCell as Cell);\r\n\r\n          currentCell.walls[direction].weight = 9999;\r\n          (nextCell as Cell).walls[\r\n            (direction + this.grid.numCellSides / 2) % this.grid.numCellSides\r\n          ].weight = 9999;\r\n        } else {\r\n          if (currentCell.set === (nextCell as Cell).set) {\r\n            direction = currentCell.GetCellDirection(nextCell as Cell);\r\n\r\n            currentCell.walls[direction].weight = 9999;\r\n            (nextCell as Cell).walls[\r\n              (direction + this.grid.numCellSides / 2) % this.grid.numCellSides\r\n            ].weight = 9999;\r\n          } else {\r\n            this.MergeCells(currentCell, nextCell);\r\n\r\n            direction = currentCell.GetCellDirection(nextCell as Cell);\r\n\r\n            currentCell.walls[direction].weight = 9999;\r\n            (nextCell as Cell).walls[\r\n              (direction + this.grid.numCellSides / 2) % this.grid.numCellSides\r\n            ].weight = 9999;\r\n\r\n            let filterSet: number, mapSet: number;\r\n            if (currentCell.set < (nextCell as Cell).set) {\r\n              filterSet = (nextCell as Cell).set;\r\n              mapSet = (currentCell as Cell).set;\r\n              mapCells\r\n                .filter((a) => a.set === filterSet)\r\n                .forEach((a) => (a.set = mapSet));\r\n            } else {\r\n              filterSet = (currentCell as Cell).set;\r\n              mapSet = (nextCell as Cell).set;\r\n              mapCells\r\n                .filter((a) => a.set === filterSet)\r\n                .forEach((a) => (a.set = mapSet));\r\n            }\r\n          }\r\n        }\r\n      }\r\n      currentWeight++;\r\n    } while (mapCells.filter((a) => a.set === 1).length < mapCells.length);\r\n  }\r\n}\r\n","import { Cell } from '../';\r\nimport { Generator, GeneratorData } from './generator';\r\nimport { Wall } from '../';\r\n\r\nexport class PrimData {\r\n  direction: number; //1 = NE, 2 = SE, 3 = SW, 4 = NW\r\n  chanceVertical: number; //1 - 99\r\n\r\n  constructor() {\r\n    this.direction = 1;\r\n    this.chanceVertical = 50;\r\n  }\r\n}\r\n\r\nexport class Prim extends Generator {\r\n  props: PrimData;\r\n\r\n  constructor(baseProps: GeneratorData, props: PrimData) {\r\n    super(baseProps);\r\n    this.props = props;\r\n  }\r\n\r\n  Generate(): void {\r\n    let mapCells: Cell[] = [];\r\n    let usedCells: Cell[] = [];\r\n    let currentCell: Cell | undefined;\r\n    let nextCell: Cell | undefined;\r\n    let direction: number = 0;\r\n\r\n    for (let i: number = 0; i < this.baseProps.width; i++) {\r\n      for (let j: number = 0; j < this.baseProps.height; j++) {\r\n        if (!this.grid.cells[i][j].masked) {\r\n          for (let k: number = 0; k < this.grid.numCellSides; k++) {\r\n            if (\r\n              this.grid.cells[i][j].adjacentCells[k] !== undefined &&\r\n              this.grid.cells[i][j].walls[k].weight === 0\r\n            ) {\r\n              let weight = this.random.GetIntInRange(1, 100);\r\n              this.grid.cells[i][j].walls[k].weight = weight;\r\n              (this.grid.cells[i][j].adjacentCells[k] as Cell).walls[\r\n                (k + this.grid.numCellSides / 2) % this.grid.numCellSides\r\n              ].weight = weight;\r\n            }\r\n          }\r\n          mapCells.push(this.grid.cells[i][j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    currentCell = mapCells[this.random.GetInt(mapCells.length)];\r\n    usedCells.push(currentCell);\r\n    do {\r\n      currentCell = usedCells[0];\r\n      for (let i: number = 0; i < usedCells.length; i++) {\r\n        if (\r\n          usedCells[i].x !== currentCell.x ||\r\n          usedCells[i].y !== currentCell.y\r\n        ) {\r\n          if (\r\n            usedCells[i].walls\r\n              .filter((a) => a.weight > 0)\r\n              .sort((a, b) => this.compareWeights(a, b))[0].weight <\r\n            currentCell.walls\r\n              .filter((a) => a.weight > 0)\r\n              .sort((a, b) => this.compareWeights(a, b))[0].weight\r\n          ) {\r\n            currentCell = usedCells[i];\r\n          }\r\n        }\r\n      }\r\n\r\n      direction = currentCell.GetWeightDirection(\r\n        currentCell.walls\r\n          .filter((a) => a.weight > 0)\r\n          .sort((a, b) => this.compareWeights(a, b))[0].weight\r\n      );\r\n\r\n      nextCell = currentCell.adjacentCells[direction];\r\n      if (usedCells.indexOf(nextCell as Cell) === -1) {\r\n        this.MergeCells(currentCell, nextCell);\r\n        usedCells.push(nextCell as Cell);\r\n      }\r\n\r\n      currentCell.walls[direction].weight = 9999;\r\n      (nextCell as Cell).walls[\r\n        (direction + this.grid.numCellSides / 2) % this.grid.numCellSides\r\n      ].weight = 9999;\r\n    } while (usedCells.length < mapCells.length);\r\n  }\r\n\r\n  private compareWeights(a: Wall, b: Wall) {\r\n    return a.weight === b.weight ? 0 : a.weight < b.weight ? -1 : 1;\r\n  }\r\n}\r\n","import { Cell } from '../';\r\nimport { Generator, GeneratorData } from './generator';\r\n\r\nexport class RecursiveBacktrackerData {\r\n  direction: number; //1 = NE, 2 = SE, 3 = SW, 4 = NW\r\n  chanceVertical: number; //1 - 99\r\n\r\n  constructor() {\r\n    this.direction = 1;\r\n    this.chanceVertical = 50;\r\n  }\r\n}\r\n\r\nexport class RecursiveBacktracker extends Generator {\r\n  props: RecursiveBacktrackerData;\r\n\r\n  constructor(baseProps: GeneratorData, props: RecursiveBacktrackerData) {\r\n    super(baseProps);\r\n    this.props = props;\r\n  }\r\n\r\n  Generate(): void {\r\n    let mapCells: Cell[] = [];\r\n    let currentSet: Cell[] = [];\r\n    let currentCell: Cell;\r\n    let nextCell: Cell | undefined;\r\n    let adjacentCount: number = 0;\r\n\r\n    for (let i: number = 0; i < this.baseProps.width; i++) {\r\n      for (let j: number = 0; j < this.baseProps.height; j++) {\r\n        if (!this.grid.cells[i][j].masked) {\r\n          mapCells.push(this.grid.cells[i][j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    currentCell = mapCells[this.random.GetInt(mapCells.length)];\r\n    currentCell.visited = true;\r\n    currentSet.push(currentCell);\r\n\r\n    do {\r\n      adjacentCount = (currentCell as Cell).adjacentCells.filter(\r\n        (a) => a !== undefined && !a.visited\r\n      ).length;\r\n\r\n      if (adjacentCount === 0) {\r\n        currentSet.pop();\r\n        currentCell = currentSet[currentSet.length - 1];\r\n      } else {\r\n        nextCell = (currentCell as Cell).adjacentCells.filter(\r\n          (a) => a !== undefined && !a.visited\r\n        )[this.random.GetInt(adjacentCount)] as Cell;\r\n        this.MergeCells(currentCell, nextCell);\r\n        currentCell = nextCell;\r\n        currentCell.visited = true;\r\n        currentSet.push(currentCell);\r\n      }\r\n    } while (currentSet.length > 0);\r\n  }\r\n}\r\n","import { Generator, GeneratorData } from './generator';\r\nimport { Cell } from '../';\r\n\r\nexport class SidewinderData {\r\n  sideDirection: number;\r\n  windDirection: number;\r\n  chanceWind: number; //1 - 99\r\n\r\n  constructor() {\r\n    this.sideDirection = 1;\r\n    this.windDirection = 0;\r\n    this.chanceWind = 50;\r\n  }\r\n}\r\n\r\nexport class Sidewinder extends Generator {\r\n  props: SidewinderData;\r\n\r\n  constructor(baseProps: GeneratorData, props: SidewinderData) {\r\n    super(baseProps);\r\n    this.props = props;\r\n  }\r\n\r\n  Generate(): void {\r\n    let cellRun: Cell[] = [];\r\n    let randResult: number = 0;\r\n\r\n    let iStart = 0,\r\n      iMax = this.baseProps.width,\r\n      iStep = 1;\r\n    let jStart = 0,\r\n      jMax = this.baseProps.height,\r\n      jStep = 1;\r\n\r\n    switch (this.props.sideDirection) {\r\n      case 0:\r\n        jStart = 0;\r\n        jMax = this.baseProps.height;\r\n        jStep = 1;\r\n        break;\r\n      case 1:\r\n        iStart = 0;\r\n        iMax = this.baseProps.width;\r\n        iStep = 1;\r\n        break;\r\n      case 2:\r\n        jStart = this.baseProps.height - 1;\r\n        jMax = 0;\r\n        jStep = -1;\r\n        break;\r\n      case 3:\r\n        iStart = this.baseProps.width - 1;\r\n        iMax = 0;\r\n        iStep = -1;\r\n        break;\r\n    }\r\n\r\n    switch (this.props.windDirection) {\r\n      case 0:\r\n        jStart = 0;\r\n        jMax = this.baseProps.height;\r\n        jStep = 1;\r\n        break;\r\n      case 1:\r\n        iStart = 0;\r\n        iMax = this.baseProps.width;\r\n        iStep = 1;\r\n        break;\r\n      case 2:\r\n        jStart = this.baseProps.height - 1;\r\n        jMax = 0;\r\n        jStep = -1;\r\n        break;\r\n      case 3:\r\n        iStart = this.baseProps.width - 1;\r\n        iMax = 0;\r\n        iStep = -1;\r\n        break;\r\n    }\r\n\r\n    //E and W\r\n    if (this.props.sideDirection === 1 || this.props.sideDirection === 3) {\r\n      for (\r\n        let j: number = jStart;\r\n        jStart === 0 ? j < jMax : j >= jMax;\r\n        j += jStep\r\n      ) {\r\n        for (\r\n          let i: number = iStart;\r\n          iStart === 0 ? i < iMax : i >= iMax;\r\n          i += iStep\r\n        ) {\r\n          if (this.baseProps.numCellSides === 4) {\r\n            cellRun.push(this.grid.cells[i][j]);\r\n            randResult = this.random.GetInt(100);\r\n\r\n            if (\r\n              this.grid.cells[i][j].adjacentCells[this.props.sideDirection] ===\r\n                undefined ||\r\n              (this.grid.cells[i][j].adjacentCells[this.props.windDirection] !==\r\n                undefined &&\r\n                randResult < this.props.chanceWind)\r\n            ) {\r\n              randResult = this.random.GetInt(cellRun.length);\r\n              if (\r\n                cellRun[randResult].adjacentCells[this.props.windDirection] !==\r\n                undefined\r\n              ) {\r\n                this.MergeCells(\r\n                  cellRun[randResult],\r\n                  cellRun[randResult].adjacentCells[this.props.windDirection]\r\n                );\r\n              }\r\n              cellRun = [];\r\n            } else {\r\n              this.MergeCells(\r\n                this.grid.cells[i][j],\r\n                this.grid.cells[i][j].adjacentCells[this.props.sideDirection]\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n      cellRun = [];\r\n    }\r\n\r\n    //N and S\r\n    else {\r\n      for (\r\n        let i: number = iStart;\r\n        iStart === 0 ? i < iMax : i >= iMax;\r\n        i += iStep\r\n      ) {\r\n        for (\r\n          let j: number = jStart;\r\n          jStart === 0 ? j < jMax : j >= jMax;\r\n          j += jStep\r\n        ) {\r\n          if (this.baseProps.numCellSides === 4) {\r\n            cellRun.push(this.grid.cells[i][j]);\r\n            randResult = this.random.GetInt(100);\r\n\r\n            if (\r\n              this.grid.cells[i][j].adjacentCells[this.props.sideDirection] ===\r\n                undefined ||\r\n              (this.grid.cells[i][j].adjacentCells[this.props.windDirection] !==\r\n                undefined &&\r\n                randResult < this.props.chanceWind)\r\n            ) {\r\n              randResult = this.random.GetInt(cellRun.length);\r\n              if (\r\n                cellRun[randResult].adjacentCells[this.props.windDirection] !==\r\n                undefined\r\n              ) {\r\n                this.MergeCells(\r\n                  cellRun[randResult],\r\n                  cellRun[randResult].adjacentCells[this.props.windDirection]\r\n                );\r\n              }\r\n              cellRun = [];\r\n            } else {\r\n              this.MergeCells(\r\n                this.grid.cells[i][j],\r\n                this.grid.cells[i][j].adjacentCells[this.props.sideDirection]\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n      cellRun = [];\r\n    }\r\n  }\r\n}\r\n","import { Cell } from '../';\r\nimport { Generator, GeneratorData } from './generator';\r\n\r\nexport class WilsonData {\r\n  direction: number;\r\n  chanceVertical: number;\r\n\r\n  constructor() {\r\n    this.direction = 1;\r\n    this.chanceVertical = 50;\r\n  }\r\n}\r\n\r\nexport class Wilson extends Generator {\r\n  props: WilsonData;\r\n\r\n  constructor(baseProps: GeneratorData, props: WilsonData) {\r\n    super(baseProps);\r\n    this.props = props;\r\n  }\r\n\r\n  Generate(): void {\r\n    let mapCells: Cell[] = [];\r\n    let currentLoop: Cell[] = []; //functions as stack\r\n    let currentCell: Cell;\r\n    let adjacentCount: number;\r\n\r\n    for (let i: number = 0; i < this.baseProps.width; i++) {\r\n      for (let j: number = 0; j < this.baseProps.height; j++) {\r\n        if (!this.grid.cells[i][j].masked) {\r\n          mapCells.push(this.grid.cells[i][j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    mapCells[this.random.GetInt(mapCells.length)].visited = true;\r\n    do {\r\n      currentLoop = [];\r\n      let unvisitedCount = mapCells.filter((a) => !a.visited).length;\r\n      currentCell = mapCells.filter((a) => !a.visited)[\r\n        this.random.GetInt(unvisitedCount)\r\n      ];\r\n      currentLoop.push(currentCell);\r\n      while (!currentCell.visited) {\r\n        adjacentCount = currentCell.adjacentCells.filter(\r\n          (a) => a !== undefined\r\n        ).length;\r\n        currentCell = currentCell.adjacentCells.filter((a) => a !== undefined)[\r\n          this.random.GetInt(adjacentCount)\r\n        ] as Cell;\r\n        let x = currentCell.x,\r\n          y = currentCell.y;\r\n        if (currentLoop.some((a) => a.x === x && a.y === y)) {\r\n          while (\r\n            currentLoop[currentLoop.length - 1].x !== x ||\r\n            currentLoop[currentLoop.length - 1].y !== y\r\n          ) {\r\n            currentLoop.pop();\r\n          }\r\n          currentCell = currentLoop[currentLoop.length - 1];\r\n        } else {\r\n          currentLoop.push(currentCell);\r\n        }\r\n      }\r\n\r\n      for (let i: number = 0; i < currentLoop.length - 1; i++) {\r\n        this.MergeCells(currentLoop[i], currentLoop[i + 1]);\r\n        currentLoop[i].visited = true;\r\n      }\r\n      currentLoop[currentLoop.length - 1].visited = true;\r\n    } while (mapCells.some((a) => !a.visited));\r\n  }\r\n}\r\n","import { Cell } from '../';\r\nimport { Random } from './random';\r\n\r\nexport class MathUtils {\r\n  public static MaxX(mapCells: Cell[]): number {\r\n    let retVal: number = -Infinity;\r\n    for (let i: number = 0; i < mapCells.length; i++) {\r\n      retVal = mapCells[i].x > retVal ? mapCells[i].x : retVal;\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  public static MinX(mapCells: Cell[]): number {\r\n    let retVal: number = Infinity;\r\n    for (let i: number = 0; i < mapCells.length; i++) {\r\n      retVal = mapCells[i].x < retVal ? mapCells[i].x : retVal;\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  public static MaxY(mapCells: Cell[]): number {\r\n    let retVal: number = -Infinity;\r\n    for (let i: number = 0; i < mapCells.length; i++) {\r\n      retVal = mapCells[i].y > retVal ? mapCells[i].y : retVal;\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  public static MinY(mapCells: Cell[]): number {\r\n    let retVal: number = Infinity;\r\n    for (let i: number = 0; i < mapCells.length; i++) {\r\n      retVal = mapCells[i].y < retVal ? mapCells[i].y : retVal;\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  public static Shuffle<Type>(items: Type[], random: Random): Type[] {\r\n    let n: number = items.length;\r\n    while (n > 1) {\r\n      n--;\r\n      let k: number = random.GetInt(n + 1);\r\n      let item: Type = items[k];\r\n      items[k] = items[n];\r\n      items[n] = item;\r\n    }\r\n    return items;\r\n  }\r\n}\r\n","import { Cell } from '../maze-parts/cell';\r\nimport { Generator, GeneratorData } from './generator';\r\nimport { MathUtils } from '../utils/math';\r\n\r\nexport class EllerData {\r\n  direction: number;\r\n  chanceVertical: number;\r\n\r\n  constructor() {\r\n    this.direction = 1;\r\n    this.chanceVertical = 50;\r\n  }\r\n}\r\n\r\nexport class Eller extends Generator {\r\n  props: EllerData;\r\n\r\n  constructor(baseProps: GeneratorData, props: EllerData) {\r\n    super(baseProps);\r\n    this.props = props;\r\n  }\r\n\r\n  Generate(): void {\r\n    let mapCells: Cell[] = [];\r\n    let currentRow: Cell[] = [];\r\n    let currentRowSet: Cell[] = [];\r\n    let row: number;\r\n    let finalRow: number;\r\n    let currentSet: number = 1;\r\n    let currentRowSets: number[] = [];\r\n\r\n    for (let i: number = 0; i < this.baseProps.width; i++) {\r\n      for (let j: number = 0; j < this.baseProps.height; j++) {\r\n        if (!this.grid.cells[i][j].masked) {\r\n          mapCells.push(this.grid.cells[i][j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    row = MathUtils.MaxY(mapCells);\r\n    finalRow = MathUtils.MinY(mapCells);\r\n\r\n    do {\r\n      currentRow = mapCells.filter((a) => a.y === row);\r\n      currentRow.forEach((a) => {\r\n        if (a.set === 0) {\r\n          a.set = currentSet;\r\n          currentSet++;\r\n        }\r\n      });\r\n\r\n      for (let i: number = 0; i < currentRow.length; i++) {\r\n        if (\r\n          currentRow[i].adjacentCells[3] !== undefined &&\r\n          (currentRow[i].adjacentCells[3] as Cell).set !== currentRow[i].set\r\n        ) {\r\n          if (this.random.GetInt(2) === 0) {\r\n            this.MergeCells(currentRow[i], currentRow[i].adjacentCells[3]);\r\n            currentRowSet = mapCells.filter(\r\n              (a) => a.set === (currentRow[i].adjacentCells[3] as Cell).set\r\n            );\r\n            for (let j: number = 0; j < currentRowSet.length; j++) {\r\n              currentRowSet[j].set = currentRow[i].set;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      currentRowSets = [];\r\n      for (let i: number = 0; i < currentRow.length; i++) {\r\n        if (currentRowSets.indexOf(currentRow[i].set) === -1) {\r\n          currentRowSets.push(currentRow[i].set);\r\n        }\r\n      }\r\n\r\n      for (let i: number = 0; i < currentRowSets.length; i++) {\r\n        currentRowSet = currentRow.filter((a) => a.set === currentRowSets[i]);\r\n        let rowMovedSouth: boolean = false;\r\n        for (let j: number = 0; j < currentRowSet.length; j++) {\r\n          if (\r\n            currentRowSet[j].adjacentCells[2] !== undefined &&\r\n            (currentRowSet[j].adjacentCells[2] as Cell).set !==\r\n              currentRowSet[j].set\r\n          ) {\r\n            if (this.random.GetInt(3) === 0) {\r\n              rowMovedSouth = true;\r\n              this.MergeCells(\r\n                currentRowSet[j],\r\n                currentRowSet[j].adjacentCells[2]\r\n              );\r\n              (currentRowSet[j].adjacentCells[2] as Cell).set =\r\n                currentRowSet[j].set;\r\n            }\r\n          }\r\n        }\r\n        if (!rowMovedSouth) {\r\n          for (let j: number = 0; j < currentRowSet.length; j++) {\r\n            if (\r\n              !rowMovedSouth &&\r\n              currentRowSet[j].adjacentCells[2] !== undefined &&\r\n              (currentRowSet[j].adjacentCells[2] as Cell).set !==\r\n                currentRowSet[j].set\r\n            ) {\r\n              rowMovedSouth = true;\r\n              this.MergeCells(\r\n                currentRowSet[j],\r\n                currentRowSet[j].adjacentCells[2]\r\n              );\r\n              (currentRowSet[j].adjacentCells[2] as Cell).set =\r\n                currentRowSet[j].set;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      row--;\r\n    } while (row >= finalRow);\r\n\r\n    for (let i: number = 0; i < currentRow.length; i++) {\r\n      if (\r\n        currentRow[i].adjacentCells[3] !== undefined &&\r\n        (currentRow[i].adjacentCells[3] as Cell).set !== currentRow[i].set\r\n      ) {\r\n        this.MergeCells(currentRow[i], currentRow[i].adjacentCells[3]);\r\n        currentRowSet = mapCells.filter(\r\n          (a) => a.set === (currentRow[i].adjacentCells[3] as Cell).set\r\n        );\r\n        for (let j: number = 0; j < currentRowSet.length; j++) {\r\n          currentRowSet[j].set = currentRow[i].set;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Cell } from '../maze-parts/cell';\r\nimport { Generator, GeneratorData } from './generator';\r\nimport { MathUtils } from '../utils/math';\r\n\r\nexport class RecursiveSubdivisionData {\r\n  direction: number;\r\n  chanceVertical: number;\r\n\r\n  constructor() {\r\n    this.direction = 1;\r\n    this.chanceVertical = 50;\r\n  }\r\n}\r\n\r\nexport class RecursiveSubdivision extends Generator {\r\n  props: RecursiveSubdivisionData;\r\n\r\n  constructor(baseProps: GeneratorData, props: RecursiveSubdivisionData) {\r\n    super(baseProps);\r\n    this.props = props;\r\n  }\r\n\r\n  Generate(): void {\r\n    let mapCells: Cell[] = [];\r\n\r\n    let startX: number, startY: number, startWidth: number, startHeight: number;\r\n\r\n    for (let i: number = 0; i < this.baseProps.width; i++) {\r\n      for (let j: number = 0; j < this.baseProps.height; j++) {\r\n        if (!this.grid.cells[i][j].masked) {\r\n          mapCells.push(this.grid.cells[i][j]);\r\n          for (let k: number = 0; k < this.grid.numCellSides; k++) {\r\n            if (this.grid.cells[i][j].adjacentCells[k] !== undefined) {\r\n              this.grid.cells[i][j].SetWall(k, false);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    startX = MathUtils.MinX(mapCells);\r\n    startY = MathUtils.MinY(mapCells);\r\n    startWidth = MathUtils.MaxX(mapCells) - startX + 1;\r\n    startHeight = MathUtils.MaxY(mapCells) - startY + 1;\r\n\r\n    //alert(startX + ', ' + startY + ', ' + startWidth + ', ' + startHeight);\r\n    this.divide(mapCells, startX, startY, startHeight, startWidth);\r\n  }\r\n\r\n  private divide(\r\n    mapCells: Cell[],\r\n    row: number,\r\n    column: number,\r\n    height: number,\r\n    width: number\r\n  ): void {\r\n    if (height > 1 || width > 1) {\r\n      if (height > width) {\r\n        this.divideHorizontal(mapCells, row, column, height, width);\r\n      } else {\r\n        this.divideVertical(mapCells, row, column, height, width);\r\n      }\r\n    }\r\n  }\r\n\r\n  private divideHorizontal(\r\n    mapCells: Cell[],\r\n    row: number,\r\n    column: number,\r\n    height: number,\r\n    width: number\r\n  ): void {\r\n    let divideSouthOf: number = this.random.GetInt(height - 1);\r\n    //alert('south: ' + divideSouthOf);\r\n    let affectedCells: Cell[] = mapCells\r\n      .filter(\r\n        (a) =>\r\n          a.y === row + divideSouthOf && a.x >= column && a.x < column + width\r\n      )\r\n      .sort((a, b) => this.compareElement(a, b, 'x'));\r\n    if (\r\n      affectedCells.length > 0 &&\r\n      affectedCells.some((a) => a.adjacentCells[0] !== undefined)\r\n    ) {\r\n      affectedCells.forEach((a) => {\r\n        if (a.adjacentCells[0] !== undefined) {\r\n          a.SetWall(0, true);\r\n          a.adjacentCells[0].SetWall(2, true);\r\n        }\r\n      });\r\n\r\n      if (row + divideSouthOf < MathUtils.MaxY(mapCells)) {\r\n        let passageCell: number = -1;\r\n        let affectedCellSection: Cell[] = [];\r\n        for (let i: number = 0; i < affectedCells.length; i++) {\r\n          if (\r\n            affectedCellSection.length === 0 ||\r\n            MathUtils.MaxX(affectedCellSection) - affectedCells[i].x === -1\r\n          ) {\r\n            affectedCellSection.push(affectedCells[i]);\r\n          } else {\r\n            if (\r\n              affectedCellSection.some((a) => a.adjacentCells[0] !== undefined)\r\n            ) {\r\n              do {\r\n                passageCell = this.random.GetInt(affectedCellSection.length);\r\n              } while (\r\n                affectedCellSection[passageCell].adjacentCells[0] === undefined\r\n              );\r\n              this.MergeCells(\r\n                affectedCellSection[passageCell],\r\n                affectedCellSection[passageCell].adjacentCells[0]\r\n              );\r\n              affectedCellSection = [];\r\n            }\r\n          }\r\n        }\r\n\r\n        if (affectedCellSection.some((a) => a.adjacentCells[0] !== undefined)) {\r\n          do {\r\n            passageCell = this.random.GetInt(affectedCellSection.length);\r\n          } while (\r\n            affectedCellSection[passageCell].adjacentCells[0] === undefined\r\n          );\r\n          this.MergeCells(\r\n            affectedCellSection[passageCell],\r\n            affectedCellSection[passageCell].adjacentCells[0]\r\n          );\r\n        }\r\n      }\r\n\r\n      this.divide(mapCells, row, column, divideSouthOf + 1, width);\r\n      this.divide(\r\n        mapCells,\r\n        row + divideSouthOf + 1,\r\n        column,\r\n        height - divideSouthOf - 1,\r\n        width\r\n      );\r\n    }\r\n  }\r\n\r\n  private divideVertical(\r\n    mapCells: Cell[],\r\n    row: number,\r\n    column: number,\r\n    height: number,\r\n    width: number\r\n  ): void {\r\n    let divideEastOf: number = this.random.GetInt(width - 1);\r\n    //alert('east: ' + divideEastOf);\r\n    let affectedCells: Cell[] = mapCells\r\n      .filter(\r\n        (a) => a.x === column + divideEastOf && a.y >= row && a.y < row + height\r\n      )\r\n      .sort((a, b) => this.compareElement(a, b, 'y'));\r\n    if (\r\n      affectedCells.length > 0 &&\r\n      affectedCells.some((a) => a.adjacentCells[1] !== undefined)\r\n    ) {\r\n      affectedCells.forEach((a) => {\r\n        if (a.adjacentCells[1] !== undefined) {\r\n          a.SetWall(1, true);\r\n          a.adjacentCells[1].SetWall(3, true);\r\n        }\r\n      });\r\n\r\n      if (column + divideEastOf < MathUtils.MaxX(mapCells)) {\r\n        let passageCell: number = -1;\r\n        let affectedCellSection: Cell[] = [];\r\n        for (let i: number = 0; i < affectedCells.length; i++) {\r\n          if (\r\n            affectedCellSection.length === 0 ||\r\n            MathUtils.MaxY(affectedCellSection) - affectedCells[i].y === -1\r\n          ) {\r\n            affectedCellSection.push(affectedCells[i]);\r\n          } else {\r\n            if (\r\n              affectedCellSection.some((a) => a.adjacentCells[1] !== undefined)\r\n            ) {\r\n              do {\r\n                passageCell = this.random.GetInt(affectedCellSection.length);\r\n              } while (\r\n                affectedCellSection[passageCell].adjacentCells[1] === undefined\r\n              );\r\n              this.MergeCells(\r\n                affectedCellSection[passageCell],\r\n                affectedCellSection[passageCell].adjacentCells[1]\r\n              );\r\n              affectedCellSection = [];\r\n            }\r\n          }\r\n        }\r\n\r\n        if (affectedCellSection.some((a) => a.adjacentCells[1] !== undefined)) {\r\n          do {\r\n            passageCell = this.random.GetInt(affectedCellSection.length);\r\n          } while (\r\n            affectedCellSection[passageCell].adjacentCells[1] === undefined\r\n          );\r\n          this.MergeCells(\r\n            affectedCellSection[passageCell],\r\n            affectedCellSection[passageCell].adjacentCells[1]\r\n          );\r\n        }\r\n      }\r\n\r\n      this.divide(mapCells, row, column, height, divideEastOf + 1);\r\n      this.divide(\r\n        mapCells,\r\n        row,\r\n        column + divideEastOf + 1,\r\n        height,\r\n        width - divideEastOf - 1\r\n      );\r\n    }\r\n  }\r\n\r\n  private compareElement<Type, Key extends keyof Type>(\r\n    a: Type,\r\n    b: Type,\r\n    key: Key\r\n  ): number {\r\n    return a[key] === b[key] ? 0 : a[key] < b[key] ? -1 : 1;\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Heading,\r\n  Text,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  Center,\r\n} from '@chakra-ui/react';\r\nimport { Canvas } from '../../../lib/components/canvas';\r\nimport { GeneratorProperties } from './components/generator-properties';\r\nimport { BinaryTreeProperties } from './components/binary-tree-properties';\r\nimport { SidewinderProperties } from './components/sidewinder-properties';\r\n\r\nimport {\r\n  Generator as MazeGenerator,\r\n  GeneratorData,\r\n  BinaryTree,\r\n  BinaryTreeData,\r\n  Sidewinder,\r\n  SidewinderData,\r\n  Image,\r\n  AldousBroder,\r\n  AldousBroderData,\r\n  Wilson,\r\n  WilsonData,\r\n  HuntAndKill,\r\n  HuntAndKillData,\r\n  RecursiveBacktracker,\r\n  RecursiveBacktrackerData,\r\n  Prim,\r\n  PrimData,\r\n  Kruskal,\r\n  KruskalData,\r\n  GrowingTree,\r\n  GrowingTreeData,\r\n  Eller,\r\n  EllerData,\r\n  RecursiveSubdivision,\r\n  RecursiveSubdivisionData,\r\n} from '../../../lib/mazes';\r\n\r\ninterface IGeneratorState {\r\n  imgData: Image;\r\n  generatorData: GeneratorData;\r\n  binaryTree: BinaryTreeData;\r\n  sidewinder: SidewinderData;\r\n  aldousBroder: AldousBroderData;\r\n  wilson: WilsonData;\r\n  huntAndKill: HuntAndKillData;\r\n  recursiveBacktracker: RecursiveBacktrackerData;\r\n  kruskal: KruskalData;\r\n  prim: PrimData;\r\n  growingTree: GrowingTreeData;\r\n  eller: EllerData;\r\n  recursiveSubdivision: RecursiveSubdivisionData;\r\n}\r\n\r\nexport class Generator extends React.Component<any, IGeneratorState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      imgData: new Image(1, 1),\r\n      generatorData: new GeneratorData(),\r\n      binaryTree: new BinaryTreeData(),\r\n      sidewinder: new SidewinderData(),\r\n      aldousBroder: new AldousBroderData(),\r\n      wilson: new WilsonData(),\r\n      huntAndKill: new HuntAndKillData(),\r\n      recursiveBacktracker: new RecursiveBacktrackerData(),\r\n      kruskal: new KruskalData(),\r\n      prim: new PrimData(),\r\n      growingTree: new GrowingTreeData(),\r\n      eller: new EllerData(),\r\n      recursiveSubdivision: new RecursiveSubdivisionData(),\r\n    };\r\n\r\n    this.handleGeneratorDataChange = this.handleGeneratorDataChange.bind(this);\r\n    this.handleBinaryTreeChange = this.handleBinaryTreeChange.bind(this);\r\n    this.handleSidewinderChange = this.handleSidewinderChange.bind(this);\r\n  }\r\n\r\n  generate = () => {\r\n    let maze: MazeGenerator;\r\n    const {\r\n      binaryTree,\r\n      sidewinder,\r\n      aldousBroder,\r\n      wilson,\r\n      huntAndKill,\r\n      recursiveBacktracker,\r\n      kruskal,\r\n      prim,\r\n      growingTree,\r\n      eller,\r\n      recursiveSubdivision,\r\n      generatorData,\r\n    } = this.state;\r\n\r\n    switch (generatorData.generator) {\r\n      case 1:\r\n        maze = new BinaryTree(generatorData, binaryTree);\r\n        break;\r\n      case 2:\r\n        maze = new Sidewinder(generatorData, sidewinder);\r\n        break;\r\n      case 3:\r\n        maze = new AldousBroder(generatorData, aldousBroder);\r\n        break;\r\n      case 4:\r\n        maze = new Wilson(generatorData, wilson);\r\n        break;\r\n      case 5:\r\n        maze = new HuntAndKill(generatorData, huntAndKill);\r\n        break;\r\n      case 6:\r\n        maze = new RecursiveBacktracker(generatorData, recursiveBacktracker);\r\n        break;\r\n      case 7:\r\n        maze = new Kruskal(generatorData, kruskal);\r\n        break;\r\n      case 8:\r\n        maze = new Prim(generatorData, prim);\r\n        break;\r\n      case 9:\r\n        maze = new GrowingTree(generatorData, growingTree);\r\n        break;\r\n      case 10:\r\n        maze = new Eller(generatorData, eller);\r\n        break;\r\n      case 11:\r\n        maze = new RecursiveSubdivision(generatorData, recursiveSubdivision);\r\n        break;\r\n      default:\r\n        maze = new BinaryTree(generatorData, binaryTree);\r\n        break;\r\n    }\r\n\r\n    maze.RunGenerator();\r\n    this.setState({ imgData: maze.Display(32) });\r\n  };\r\n\r\n  handleGeneratorDataChange(fieldName: string, value: number) {\r\n    let generatorData = this.state.generatorData;\r\n\r\n    switch (fieldName) {\r\n      case 'generator':\r\n        generatorData.generator = value;\r\n        break;\r\n      case 'seed':\r\n        generatorData.seed = value;\r\n        break;\r\n      case 'width':\r\n        generatorData.width = value;\r\n        break;\r\n      case 'height':\r\n        generatorData.height = value;\r\n        break;\r\n      case 'deadEnd':\r\n        generatorData.cullDeadEnds = value;\r\n        break;\r\n      case 'weave':\r\n        generatorData.weave = value;\r\n        break;\r\n    }\r\n\r\n    this.setState({ generatorData: generatorData });\r\n  }\r\n\r\n  getGeneratorPropertiesTabName(): string {\r\n    let retVal: string = '';\r\n    switch (this.state.generatorData.generator) {\r\n      case 1:\r\n        retVal = 'Binary Tree';\r\n        break;\r\n      case 2:\r\n        retVal = 'Sidewinder';\r\n        break;\r\n      case 3:\r\n        retVal = 'Aldous-Broder';\r\n        break;\r\n      case 4:\r\n        retVal = \"Wilson's\";\r\n        break;\r\n      case 5:\r\n        retVal = 'Hunt and Kill';\r\n        break;\r\n      case 6:\r\n        retVal = 'Recursive Backtracker';\r\n        break;\r\n      case 7:\r\n        retVal = \"Kruskal's\";\r\n        break;\r\n      case 8:\r\n        retVal = \"Prims's\";\r\n        break;\r\n      case 9:\r\n        retVal = 'Growing Tree';\r\n        break;\r\n      case 10:\r\n        retVal = \"Eller's\";\r\n        break;\r\n      case 11:\r\n        retVal = 'Recursive Subdivision';\r\n        break;\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  handleBinaryTreeChange(fieldName: string, value: number) {\r\n    let binaryTree = this.state.binaryTree;\r\n\r\n    switch (fieldName) {\r\n      case 'directions':\r\n        binaryTree.direction = value;\r\n        break;\r\n      case 'chanceVertical':\r\n        binaryTree.chanceVertical = value;\r\n        break;\r\n    }\r\n\r\n    this.setState({ binaryTree: binaryTree });\r\n  }\r\n  handleSidewinderChange(fieldName: string, value: number) {\r\n    let sidewinder = this.state.sidewinder;\r\n\r\n    switch (fieldName) {\r\n      case 'sideDirection':\r\n        sidewinder.sideDirection = value;\r\n        break;\r\n      case 'windDirection':\r\n        sidewinder.windDirection = value;\r\n        break;\r\n      case 'chanceVertical':\r\n        sidewinder.chanceWind = value;\r\n        break;\r\n    }\r\n\r\n    this.setState({ sidewinder: sidewinder });\r\n  }\r\n\r\n  getGeneratorSpecificPropertiesElement(): JSX.Element {\r\n    let retElement = <></>;\r\n\r\n    if (this.state.generatorData.generator === 1) {\r\n      retElement = (\r\n        <BinaryTreeProperties\r\n          data={this.state.binaryTree}\r\n          handleChange={this.handleBinaryTreeChange}\r\n        />\r\n      );\r\n    } else if (this.state.generatorData.generator === 2) {\r\n      retElement = (\r\n        <SidewinderProperties\r\n          data={this.state.sidewinder}\r\n          handleChange={this.handleSidewinderChange}\r\n        />\r\n      );\r\n    }\r\n    return retElement;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Box padding=\"1em\">\r\n        <Heading paddingBottom=\"0.5em\">Mazes - Generator</Heading>\r\n\r\n        <Container padding=\"1em\">\r\n          <Text textAlign=\"left\" padding=\"1em\">\r\n            <Tabs variant=\"enclosed\">\r\n              <TabList>\r\n                <Tab>General Properties</Tab>\r\n                <Tab>{this.getGeneratorPropertiesTabName()} Properties</Tab>\r\n              </TabList>\r\n              <TabPanels>\r\n                <TabPanel>\r\n                  <GeneratorProperties\r\n                    data={this.state.generatorData}\r\n                    handleChange={this.handleGeneratorDataChange}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  {this.getGeneratorSpecificPropertiesElement()}\r\n                </TabPanel>\r\n              </TabPanels>\r\n            </Tabs>\r\n          </Text>\r\n          <Button onClick={() => this.generate()}>Generate</Button>\r\n        </Container>\r\n        <Container\r\n          width=\"100%\"\r\n          maxHeight=\"512px\"\r\n          textAlign=\"center\"\r\n          overflow=\"scroll\"\r\n          padding=\"1em\"\r\n          css={{\r\n            WebkitOverflowScrolling: 'touch',\r\n            msOverflowStyle: '-ms-autohiding-scrollbar',\r\n          }}\r\n        >\r\n          <Center>\r\n            <Canvas id=\"mazeCanvas\" imgData={this.state.imgData}></Canvas>\r\n          </Center>\r\n        </Container>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport { Box, Heading, Text } from '@chakra-ui/react';\r\n\r\nexport const Algorithms: React.FC = () => {\r\n  return (\r\n    <Box padding=\"1em\">\r\n      <Heading paddingBottom=\"0.5em\">Mazes - Algorithms</Heading>\r\n\r\n      <Text>Texty text.</Text>\r\n    </Box>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Box, Container, Heading, Text } from '@chakra-ui/react';\r\n\r\nexport const Writing: React.FC = () => {\r\n  return (\r\n    <Box padding=\"1em\">\r\n      <Heading paddingBottom=\"0.5em\">Writing - Overview</Heading>\r\n      <Container maxW=\"container.lg\" padding=\"1em\" fontSize=\"md\">\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          Ever since I was very young, I've loved reading books. My mother\r\n          volunteered at the library for many years, and I came along with her\r\n          all the time. Sometimes there was a story hour where I would listen to\r\n          her or one of the other librarians read 1-2 childrens books. While I\r\n          admit, I usually had a horrible time sitting still for these sessions,\r\n          I loved getting caught up in the stories and visualizing what was\r\n          going on in my imagination.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          As I grew a little older, story hours turned into me spending hours\r\n          reading books on my own. I sank a lot of time into series like\r\n          Animorphs, The Boxcar Children, The Magic Tree House Series, and all\r\n          things Wizard of Oz to name a few. Then in third grade I found Harry\r\n          Potter, which coincidentally only had the first three books out. In\r\n          preparation for the fourth, I read each of the first three at least\r\n          five times in the month before the release, and was likely all I read\r\n          at that point in time.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          When I made it to high school and college, much less time was spent on\r\n          reading because of sports and other interests taking priority, but I\r\n          still made room for good books I came across like Fight Club, Running\r\n          with the Buffalos, Once a Runner, and the Circle trilogy (now\r\n          quadrilogy) by Ted Dekker. In my adult life I've discovered series\r\n          like Sword Art Online, Ender's Game as well as Ender's Shadow, Maze\r\n          Runner, and Mortality Doctrine.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          I know that this is supposed to be the overview for writing, not\r\n          reading, so I'll try to get there soon. It's all about the journey,\r\n          right?\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          Remember how I said that I loved getting caught up in stories and\r\n          visualizing what was going on? That never stopped. If I had a quarter\r\n          for every time I found my eyes glossing over words on the page because\r\n          something on the previous page made my mind wander, I'd never have to\r\n          work again. Sometimes it was thinking about if I was in the main\r\n          character's shoes, sometimes it was thinking about if I was with the\r\n          main characters, but most of the time it was imagining the world and\r\n          everything in it. After so much time reading and imagining these\r\n          things, I finally got the idea that I wanted to write a story myself.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          My first foray into writing was a short story I wrote in sixth grade\r\n          about the Neon Man from Neptune. I think at this point the only reason\r\n          I still remember writing it is because I didn't want to tell my\r\n          parents I forgot to type up the final copy, so I spent an hour or so\r\n          after my bedtime writing the final copy in pen on loose leaf paper\r\n          because it was still an acceptable way to turn it in. I'm also fairly\r\n          certain I used the same premise for a short story assignment a year or\r\n          two later in an effort to make the story better. Neither one was\r\n          amazing, and the problems likely stemmed from me trying to do too much\r\n          in a small space.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          Sometime in the months after my mother passed away, I decided I wanted\r\n          to write a novel. The two attempts from that time were essentially\r\n          stories where I was the main character and I was being transported to\r\n          some fantastical land that made me forget about all my problems. One\r\n          was a fun, but short lived attempt, while the other made it through a\r\n          change from first to third person and eventually one finished draft of\r\n          about 75k words my junior year of college. I've tried several times to\r\n          rewrite the story only to get writer's block after 20-30 pages.\r\n          Someday I'll hopefully be able to go back and give that story justice.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          At the present, I have one story I'm actively working on called \"When\r\n          Worlds Collide\" (a working title) that's an urban fantasy as well as\r\n          one currently on the shelf called \"The Dangers of Teleporting\" (also a\r\n          working title) that's science fiction.\r\n        </Text>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Box, Container, Heading, Text } from '@chakra-ui/react';\r\n\r\nexport const Chapter1WWC: React.FC = () => {\r\n  return (\r\n    <Box padding=\"1em\">\r\n      <Heading paddingBottom=\"0.5em\">Chapter 1 - Let's Go Hiking</Heading>\r\n      <Container maxW=\"container.lg\" padding=\"1em\" fontSize=\"md\">\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          James leaned back against an old, yet sturdy wooden fence. The\r\n          previous night’s weather had draped a thin layer of snow across it,\r\n          and much more of the white powder covered the trail in front of him.\r\n          It was three inches at best since it wasn’t quite high enough to get\r\n          inside his shoes.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          In front of him, a little cream-colored Pomsky named Sparky ran\r\n          circles in the fresh snow. It amazed James how much energy the tiny\r\n          dog had after the couple miles he and his other companion, Ellie, had\r\n          already hiked. Back at the parking lot, he’d thought that if he and\r\n          Ellie were on the trails for more than an hour, Sparky would need to\r\n          be kept inside one of their jackets to stay warm.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          Taking his mind off Sparky for a moment, he turned to his left to see\r\n          that Ellie’s dark blue eyes were frozen in focus on her phone. James\r\n          expected it, considering that she’d spent most of the drive to the\r\n          park talking about the fancy new camera attachment she’d just bought a\r\n          week ago. According to her, it was like carrying a DSLR in her pocket\r\n          for a fraction of the cost.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          Directly on the other side of the fence was a few feet of ground\r\n          sitting underneath even more snow than the trail, but beyond that was\r\n          a sixty foot drop off the edge of a cliff. The valley below them had a\r\n          small pond that had long since frozen over for the winter, and it was\r\n          surrounded by multitude of trees that filled the area and continued\r\n          for a few miles to the north. Many of the trees held several inches of\r\n          snow that was still accumulating from the thousands upon thousands of\r\n          snowflakes falling from the sky. They pranced, floated, and danced as\r\n          though they were attending an extravagant ball until they found a seat\r\n          to wait and watch as the rest of their friends followed.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          Despite the attention Ellie had been giving her phone, she apparently\r\n          still noticed James’ gaze. “You can stop it with those big, brown\r\n          puppy dog eyes. I’m done taking pictures.”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          James knelt down and pretended to scold Sparky. “You heard her, boy.\r\n          No more puppy dog eyes.” He stood back up and slid over next to Ellie.\r\n          “Was the camera attachment everything you told me it would be?” Right\r\n          when he looked down at the screen of her phone, he noticed the\r\n          slightest movement in Ellie’s finger followed by the faint sound of a\r\n          click.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          “I think that selfie might be the best picture of the entire hike.”\r\n          She smirked at James, then pocketed her phone.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          James threw his hands in the air and started walking down the trail\r\n          with Sparky. “Fine, I’ll just look through the pictures at brunch.”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          Ellie quickly caught up and lightly ran into James’ shoulder. “I’ll\r\n          make another slice of French toast to make up for it. Some extra\r\n          blueberries too!”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          James looked down to see her puffing her lip up and pouting. “Any\r\n          extra slice you make is going to go straight into your sister’s\r\n          stomach. You know she’s going to be hungry after track practice is\r\n          over, so unless you have a whole loaf of bread to dedicate to this\r\n          meal, there’s no way you have enough food to feed everyone.”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          Ellie took a quarter turn towards James, stopped pouting, and put her\r\n          hand on her hips. “Lucky for you, I got a special loaf just for the\r\n          occasion.”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          “You mean you got the Stephanie loaf, because she’s going to devour\r\n          everything!”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          There were a few seconds of silence followed by loud laughter from\r\n          both of them. Sparky joined in with a few yips of his own.{' '}\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          In the midst of their laughing fit, James had found it necessary to\r\n          lean against the wooden fence yet again so he didn’t fall to the\r\n          ground. After regaining composure, he noticed some animal tracks on\r\n          the other side. They looked like dog prints, or at least a related\r\n          animal, except that they were all the same size. With all the time\r\n          he’d spent holding Sparky’s leash on the hike, he recognized that\r\n          front and back paws made different size prints.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          “Hey, come take a look at this.” James motioned Ellie over to the\r\n          fence and pointed out the odd tracks in the snow. “Have you ever seen\r\n          something like this before?”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          Ellie coughed a few times as she forced herself to stop laughing and\r\n          walked over to the fence. “They just look like animal prints to me.”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          “Yeah, but they’re all the same size. Sparky’s front and back paws\r\n          leave different size prints, and I’m sure any other animal, like a\r\n          rabbit, a squirrel, or a wolf, all do the same thing.”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          “Are you…” Elie stifled a laugh. “Are you trying to tell me that\r\n          there’s an animal that lives only in this park and always walks on its\r\n          hind legs?”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          “Maybe whatever it is broke both its front legs and it had to learn to\r\n          do it to survive?” James suggested. “I kind of want to go find it.”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          “Right before the last spot you were talking about how hungry you\r\n          were. I seem to remember you complaining about how early it was and\r\n          that you hadn’t eaten anything yet today.”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          “I can wait a few more minutes to check this out.” James tilted his\r\n          head up to follow where the tracks went. “It looks like they go around\r\n          the edge of the cliff to the mouth of the valley. Even if we don’t\r\n          find whatever made the tracks, I bet you can at least get some good\r\n          camera shots out there.”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          Ellie looked up and pointed to the sky. “Because the camera can see so\r\n          far with even more snow falling.”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          James hadn’t noticed, but realized she was right that it had started\r\n          snowing a little bit harder since the moved on from the last spot. He\r\n          tried to quickly come up with another excuse for her to go, only to\r\n          realize that it would require one thing that he disliked more than any\r\n          other. “Fine, I’ll take a real selfie with you if you come along.”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          With the mere mention of the word, selfie, Ellie almost instantly\r\n          covered the short distance between them. She turned James around so\r\n          she could him in the eye. “Really?”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          “<i>After</i> we get back to the car.”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          Immediately, a huge smile grew on Ellie’s face, filled with teeth\r\n          shinier than the snow around them. She then placed her gloved hands on\r\n          the top rail of the fence and vaulted herself over. “I hope for your\r\n          sake that the view is as awesome as you think it’s going to be.”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          James sighed, knowing there was likely no way she would forget the\r\n          deal he’d just made. He reached down, picked up Sparky, and carefully\r\n          climbed over the fence. Ellie led the way as they followed the tracks\r\n          through the snow. Being off the maintained trail, they had to deal\r\n          with some overgrown and unkempt bushes along with low hanging tree\r\n          branches, not all of which James saw before getting a mouthful of\r\n          snow. Once through there, they came to a stop underneath a large maple\r\n          tree standing around eight feet from the edge of the cliff. Sparky,\r\n          having spent the entirety of their brief trip squirming and yipping to\r\n          be freed, finally got his wish to be back on the ground to continue\r\n          his fluffy white adventures.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          Ellie looked out over the edge, surveying their new vantage point\r\n          while fumbling to get her phone back out of her pocket. “This is…\r\n          absolutely amazing. Just look at how the cliffs forming the edge of\r\n          the valley start right here. It looks like a giant cupped its hands\r\n          around everything down there, and that pond is just like trying to\r\n          scoop water with your hand only for it to slowly trickle out the\r\n          bottom. It’s so beautiful here!”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          “And <i>you</i> didn’t even want to explore over here.”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          Ellie shot a death glare at James before turning back towards the\r\n          cliff to start taking pictures. She brushed some snow away where she\r\n          was standing, then knelt down to get a more stable shot. James watched\r\n          her work her magic with the camera for the first photo until his\r\n          attention was redirected to Sparky tugging on his leash.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          James watched Sparky continue to enamor himself with the snow. Out\r\n          here away from the trail, Sparky was no longer limited to the little\r\n          bit of snow from overnight that was continuing to fall. Now he had all\r\n          the powder that had built up over the week, allowing him to jump in\r\n          and out of the snow like a little groundhog. He never once had to pull\r\n          Sparky back from the edge of the cliff, likely because the snow wasn’t\r\n          quite as deep there and wouldn’t have been nearly as much fun.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          Seeing that Sparky was entertained for the moment, James began looking\r\n          for the tracks they’d followed to find this spot. He assumed that with\r\n          Ellie leading that she had followed them, but they were no where to be\r\n          found. Their own footprints destroyed any chance of going back and\r\n          restarting the search. James sighed, knowing that they may never get\r\n          to see the one-of-a-kind creature walking on its hind legs.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          Suddenly, Sparky stopped prancing around and started sniffing\r\n          something near the base of the maple tree. At first glance, it looked\r\n          like a large pile of snow had fallen out of the tree. A little tug on\r\n          the leash didn’t deter Sparky’s investigation, so James walked over to\r\n          figure out what was going on.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          James squatted down next to where Sparky was burying his nose in the\r\n          snow. “I hope you didn’t find a dead animal. You know you’ll get sick,\r\n          right?”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          When he moved his hands to pick Sparky up, he felt his glove graze\r\n          against something hard, much harder and heavier than he expected a\r\n          dead animal would feel even it had been frozen underneath the snow.\r\n          James began brushing away the snow to find a large, leather-bound\r\n          book. The white cover and silver writing across the front made it\r\n          blend in so well with the snow that if Sparky hadn’t found it, the\r\n          book may never have been found. He picked it up, shook the rest of the\r\n          snow off, and took his gloves off to begin examining it.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          The silver writing across the front was entirely made up of symbols\r\n          that he’d never seen before and made absolutely no sense. He began\r\n          flipping through pages of the book to see if there was something he\r\n          could understand. To his dismay, even though there were pictures every\r\n          few pages, there wasn’t a single thing he could comprehend in the\r\n          entire book.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          “What are you and Sparky looking at?” James looked up to see Ellie in\r\n          the midst of a 360-degree panoramic shot.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          “Sparky found a book hiding underneath the snow. There’s some\r\n          pictures, but I can’t read any of it.” James stood up and held the\r\n          book open for her to see.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          Ellie put her phone away and walked over to James to get a closer look\r\n          at the book. “I wonder who left it here?”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          “Who knows? There’s no way anyone without a dog like Sparky would ever\r\n          find it in this weather. By the time they did, it’d probably be\r\n          ruined.”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          “That’s weird.” Ellie took one of her gloves off and moved her hand to\r\n          feel one of the pages. “It doesn’t even look like the pages are wet\r\n          from the snow.”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          The moment that James and Ellie were both touching the book, they were\r\n          given a light electric shock. Ellie immediately pulled her hand away\r\n          while James bobbled the book a few times before regaining control.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          James looked at Ellie and almost immediately burst out laughing. “Your\r\n          hair… Your hair is standing on end like you spent the last five\r\n          minutes rubbing it with a balloon.”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          Ellie reached her hands up to where her hair normally laid only to\r\n          find frizzy red strands pointed out in all directions except what was\r\n          pressed underneath her headband. She scrunched her eyebrows and\r\n          retorted, “The only reason your stupid hair isn’t doing it is because\r\n          you wore a hat!”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          James couldn’t stop laughing, and Sparky joined the raucous with his\r\n          yipping. The laughter stopped after he got pelted in the face with a\r\n          snowball. Ellie then pulled the leash out of his hand and began\r\n          walking back towards the trail. James picked the book up and quickly\r\n          followed.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          “I’m sorry, I’m sorry,” James said as he walked behind Ellie. “Now, I\r\n          think I have an idea that might make you feel better.”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          “It had better be a good one, because there’s no way I’m taking a\r\n          selfie with you if my hair is still like this when we get back to the\r\n          car.”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          “Who do we both know that’s a little annoying and could use a good\r\n          practical joke?” James lightly elbowed Ellie a few times. “You know\r\n          exactly who I’m thinking of, right?”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          “Are you suggesting we shock my sister?” Ellie lightly chuckled.\r\n          “She’ll jump through the ceiling if we do that!”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          “That’s why we <i>have</i> to do it! If it works as well as we think\r\n          it will on her, I’ll have to do it to my brother, Alex, too!”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          Just before they got back to the fence, Ellie stopped and stared at an\r\n          oak tree next to their path. “Do you remember seeing this carved on\r\n          the tree earlier?” She pointed at a symbol on the tree at about eye\r\n          level. “It looks like one of those weird tribal symbols people get as\r\n          tattoos.”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          James took a closer look at the symbol. “I don’t remember seeing it. I\r\n          think it looks like something from the book we just found. Maybe the\r\n          people who lost the book carved it?”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          Ellie took a photo of the symbol when James’ stomach made an audibly\r\n          loud grumble. “Is it time to go eat brunch yet?”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          “Says the guy who said we just <i>had</i> to go exploring over there.”\r\n          She hopped over the fence started running down the trail with Sparky\r\n          in tow. “Last one back to the car has to do the dishes!”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          James yelled back, “That’s not fair of you taking advantage of my\r\n          freshman fifteen!”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          &nbsp;\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          Ten minutes later, James caught up with Ellie back at the parking lot.\r\n          She’d already started the car and put Sparky in the back seat. She was\r\n          leaning against the trunk of the little sedan with crossed arms and a\r\n          smug look on your face. “I thought you were hungry.”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          James hunched over to catch his breath. “Just because I’m tall doesn’t\r\n          mean I’m fast.”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          “Maybe I’ll give you a head start next time. Now let’s go. If we don’t\r\n          get out of here soon, we’re going to find an angry Stephanie at home\r\n          waiting to devour us!”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          “I thought you wanted selfie, or are you miraculously letting me go\r\n          this time?” James realized the stupidity of his statement as soon as\r\n          it came out of his mouth.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          “You think I’m going to take a selfie with my hair like this?” She\r\n          pointed at her hair that was still standing on end, although it had\r\n          settled a bit and looked a little windblown from running. “I guess it\r\n          doesn’t make a difference anyway. It’s not like you’ve taken a good\r\n          picture with me since we were in middle school.”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          James stood up and leaned against the car next to Ellie. She leaned\r\n          into his side and snapped several shots.\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          Ellie sighed. “Stupid book ruining my chance for the perfect post-hike\r\n          selfie. I may never have a chance again.”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          James looked down at Ellie’s hands doing things with her phone when he\r\n          realized that she only had one glove on. “What happened to your other\r\n          glove?”\r\n        </Text>\r\n        <Text textAlign=\"left\" paddingBottom=\"1em\">\r\n          Ellie paused what she was doing, then contorted her face in all sorts\r\n          of ways while she thought. “I took one off when you showed me the\r\n          book. I must have forgotten it up by the tree. It doesn’t matter\r\n          anyway, it’s just a glove.”\r\n        </Text>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport { LayoutMain } from './layout-main';\r\nimport { Home } from '../home/home';\r\nimport { AboutMe } from '../about-me/about-me';\r\nimport { Mazes } from '../mazes/overview/mazes';\r\nimport { Generator } from '../mazes/generator/generator';\r\nimport { Algorithms } from '../mazes/algorithms/algorithms';\r\n\r\nimport { Writing } from '../writing/writing';\r\nimport { Chapter1WWC } from '../writing/when-worlds-collide/chapter-1';\r\n\r\nexport const RouterMain: React.FC = () => {\r\n  return (\r\n    <LayoutMain>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/about-me\" component={AboutMe} />\r\n\r\n      <Route exact path=\"/mazes\" component={Mazes} />\r\n      <Route exact path=\"/mazes/generator\" component={Generator} />\r\n      <Route exact path=\"/mazes/algorithms\" component={Algorithms} />\r\n\r\n      <Route exact path=\"/writing\" component={Writing} />\r\n      <Route\r\n        exact\r\n        path=\"/writing/when-worlds-collide/chapter-1\"\r\n        component={Chapter1WWC}\r\n      />\r\n    </LayoutMain>\r\n  );\r\n};\r\n","import * as React from 'react';\nimport { ChakraProvider, theme } from '@chakra-ui/react';\n\nimport { RouterMain } from './site/router/router-main';\nimport { HashRouter } from 'react-router-dom';\nimport IsDev from './lib/helpers/check-environment';\nexport const App = () => (\n  <HashRouter>\n    <ChakraProvider theme={theme}>\n      <RouterMain />\n    </ChakraProvider>\n  </HashRouter>\n);\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\",\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\",\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import { ColorModeScript } from \"@chakra-ui/react\"\nimport * as React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { App } from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}